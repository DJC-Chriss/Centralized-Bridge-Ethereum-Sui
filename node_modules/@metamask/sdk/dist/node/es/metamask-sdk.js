import{__awaiter as e}from"tslib";import a from"stream";import t from"http";import p from"url";import d from"punycode";import i from"https";import n from"zlib";import r from"debug";import o,{Buffer as s}from"buffer";import l from"node:crypto";import m,{EventEmitter2 as c}from"eventemitter2";import{validate as u,v4 as h}from"uuid";import{io as v}from"socket.io-client";import f,{EventEmitter as g}from"events";import w from"util";import y from"fs";var b="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function S(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function _(e){if(e.__esModule)return e;var a=e.default;if("function"==typeof a){var t=function e(){return this instanceof e?Reflect.construct(a,arguments,this.constructor):a.apply(this,arguments)};t.prototype=a.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(e).forEach((function(a){var p=Object.getOwnPropertyDescriptor(e,a);Object.defineProperty(t,a,p.get?p:{enumerable:!0,get:function(){return e[a]}})})),t}var E={exports:{}},N={},T={exports:{}},C={},D=C;function A(e){return e<0?-1:1}function k(e,a){a.unsigned||--e;const t=a.unsigned?0:-Math.pow(2,e),p=Math.pow(2,e)-1,d=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),i=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,n){n||(n={});let r=+e;if(n.enforceRange){if(!Number.isFinite(r))throw new TypeError("Argument is not a finite number");if(r=A(r)*Math.floor(Math.abs(r)),r<t||r>p)throw new TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&n.clamp)return r=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(r),r<t&&(r=t),r>p&&(r=p),r;if(!Number.isFinite(r)||0===r)return 0;if(r=A(r)*Math.floor(Math.abs(r)),r%=d,!a.unsigned&&r>=i)return r-d;if(a.unsigned)if(r<0)r+=d;else if(-0===r)return 0;return r}}C.void=function(){},C.boolean=function(e){return!!e},C.byte=k(8,{unsigned:!1}),C.octet=k(8,{unsigned:!0}),C.short=k(16,{unsigned:!1}),C["unsigned short"]=k(16,{unsigned:!0}),C.long=k(32,{unsigned:!1}),C["unsigned long"]=k(32,{unsigned:!0}),C["long long"]=k(32,{unsigned:!1,moduloBitLength:64}),C["unsigned long long"]=k(32,{unsigned:!0,moduloBitLength:64}),C.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},C["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},C.float=C.double,C["unrestricted float"]=C["unrestricted double"],C.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},C.ByteString=function(e,a){const t=String(e);let p;for(let e=0;void 0!==(p=t.codePointAt(e));++e)if(p>255)throw new TypeError("Argument is not a valid bytestring");return t},C.USVString=function(e){const a=String(e),t=a.length,p=[];for(let e=0;e<t;++e){const d=a.charCodeAt(e);if(d<55296||d>57343)p.push(String.fromCodePoint(d));else if(56320<=d&&d<=57343)p.push(String.fromCodePoint(65533));else if(e===t-1)p.push(String.fromCodePoint(65533));else{const t=a.charCodeAt(e+1);if(56320<=t&&t<=57343){const a=1023&d,i=1023&t;p.push(String.fromCodePoint(65536+1024*a+i)),++e}else p.push(String.fromCodePoint(65533))}}return p.join("")},C.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},C.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e};var O={exports:{}};!function(e){e.exports.mixin=function(e,a){const t=Object.getOwnPropertyNames(a);for(let p=0;p<t.length;++p)Object.defineProperty(e,t[p],Object.getOwnPropertyDescriptor(a,t[p]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}}(O);var x=O.exports,R={},M={exports:{}},P={},I=d,V=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]],L={TRANSITIONAL:0,NONTRANSITIONAL:1};function B(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function j(e){for(var a=0,t=V.length-1;a<=t;){var p=Math.floor((a+t)/2),d=V[p];if(d[0][0]<=e&&d[0][1]>=e)return d;d[0][0]>e?t=p-1:a=p+1}return null}var K=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function U(e){return e.replace(K,"_").length}var F=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function $(e,a){"xn--"===e.substr(0,4)&&(e=I.toUnicode(e),L.NONTRANSITIONAL);var t=!1;(B(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(F))&&(t=!0);for(var p=U(e),d=0;d<p;++d){var i=j(e.codePointAt(d));if(H===L.TRANSITIONAL&&"valid"!==i[1]||H===L.NONTRANSITIONAL&&"valid"!==i[1]&&"deviation"!==i[1]){t=!0;break}}return{label:e,error:t}}function H(e,a,t){var p=function(e,a,t){for(var p=!1,d="",i=U(e),n=0;n<i;++n){var r=e.codePointAt(n),o=j(r);switch(o[1]){case"disallowed":p=!0,d+=String.fromCodePoint(r);break;case"ignored":break;case"mapped":d+=String.fromCodePoint.apply(String,o[2]);break;case"deviation":t===L.TRANSITIONAL?d+=String.fromCodePoint.apply(String,o[2]):d+=String.fromCodePoint(r);break;case"valid":d+=String.fromCodePoint(r);break;case"disallowed_STD3_mapped":a?(p=!0,d+=String.fromCodePoint(r)):d+=String.fromCodePoint.apply(String,o[2]);break;case"disallowed_STD3_valid":a&&(p=!0),d+=String.fromCodePoint(r)}}return{string:d,error:p}}(e,a,t);p.string=B(p.string);for(var d=p.string.split("."),i=0;i<d.length;++i)try{var n=$(d[i]);d[i]=n.label,p.error=p.error||n.error}catch(e){p.error=!0}return{string:d.join("."),error:p.error}}P.toASCII=function(e,a,t,p){var d=H(e,a,t),i=d.string.split(".");if(i=i.map((function(e){try{return I.toASCII(e)}catch(a){return d.error=!0,e}})),p){var n=i.slice(0,i.length-1).join(".").length;(n.length>253||0===n.length)&&(d.error=!0);for(var r=0;r<i.length;++r)if(i.length>63||0===i.length){d.error=!0;break}}return d.error?null:i.join(".")},P.toUnicode=function(e,a){var t=H(e,a,L.NONTRANSITIONAL);return{domain:t.string,error:t.error}},P.PROCESSING_OPTIONS=L,function(e){const a=d,t=P,p={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},i=Symbol("failure");function n(e){return a.ucs2.decode(e).length}function r(e,a){const t=e[a];return isNaN(t)?void 0:String.fromCodePoint(t)}function o(e){return e>=48&&e<=57}function s(e){return e>=65&&e<=90||e>=97&&e<=122}function l(e){return o(e)||e>=65&&e<=70||e>=97&&e<=102}function m(e){return"."===e||"%2e"===e.toLowerCase()}function c(e){return 2===e.length&&s(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function u(e){return void 0!==p[e]}function h(e){return u(e.scheme)}function v(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function f(e){return e<=31||e>126}const g=new Set([32,34,35,60,62,63,96,123,125]);function w(e){return f(e)||g.has(e)}const y=new Set([47,58,59,61,64,91,92,93,94,124]);function b(e){return w(e)||y.has(e)}function S(e,a){const t=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let t="";for(let e=0;e<a.length;++e)t+=v(a[e]);return t}(t):t}function _(e){let a=10;if(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e)return 0;return(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?i:parseInt(e,a)}function E(e,p){if("["===e[0])return"]"!==e[e.length-1]?i:function(e){const t=[0,0,0,0,0,0,0,0];let p=0,d=null,n=0;if(58===(e=a.ucs2.decode(e))[n]){if(58!==e[n+1])return i;n+=2,++p,d=p}for(;n<e.length;){if(8===p)return i;if(58===e[n]){if(null!==d)return i;++n,++p,d=p;continue}let a=0,s=0;for(;s<4&&l(e[n]);)a=16*a+parseInt(r(e,n),16),++n,++s;if(46===e[n]){if(0===s)return i;if(n-=s,p>6)return i;let a=0;for(;void 0!==e[n];){let d=null;if(a>0){if(!(46===e[n]&&a<4))return i;++n}if(!o(e[n]))return i;for(;o(e[n]);){const a=parseInt(r(e,n));if(null===d)d=a;else{if(0===d)return i;d=10*d+a}if(d>255)return i;++n}t[p]=256*t[p]+d,++a,2!==a&&4!==a||++p}if(4!==a)return i;break}if(58===e[n]){if(++n,void 0===e[n])return i}else if(void 0!==e[n])return i;t[p]=a,++p}if(null!==d){let e=p-d;for(p=7;0!==p&&e>0;){const a=t[d+e-1];t[d+e-1]=t[p],t[p]=a,--p,--e}}else if(null===d&&8!==p)return i;return t}(e.substring(1,e.length-1));if(!p)return function(e){if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)}(e))return i;let t="";const p=a.ucs2.decode(e);for(let e=0;e<p.length;++e)t+=S(p[e],f);return t}(e);const d=function(e){const a=new Buffer(e),t=[];for(let e=0;e<a.length;++e)37!==a[e]?t.push(a[e]):37===a[e]&&l(a[e+1])&&l(a[e+2])?(t.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):t.push(a[e]);return new Buffer(t).toString()}(e),n=t.toASCII(d,!1,t.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===n)return i;if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)}(n))return i;const s=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const t=[];for(const p of a){if(""===p)return e;const a=_(p);if(a===i)return e;t.push(a)}for(let e=0;e<t.length-1;++e)if(t[e]>255)return i;if(t[t.length-1]>=Math.pow(256,5-t.length))return i;let p=t.pop(),d=0;for(const e of t)p+=e*Math.pow(256,3-d),++d;return p}(n);return"number"==typeof s||s===i?s:n}function N(e){return"number"==typeof e?function(e){let a="",t=e;for(let e=1;e<=4;++e)a=String(t%256)+a,4!==e&&(a="."+a),t=Math.floor(t/256);return a}(e):e instanceof Array?"["+function(e){let a="";const t=function(e){let a=null,t=1,p=null,d=0;for(let i=0;i<e.length;++i)0!==e[i]?(d>t&&(a=p,t=d),p=null,d=0):(null===p&&(p=i),++d);return d>t&&(a=p,t=d),{idx:a,len:t}}(e),p=t.idx;let d=!1;for(let t=0;t<=7;++t)d&&0===e[t]||(d&&(d=!1),p!==t?(a+=e[t].toString(16),7!==t&&(a+=":")):(a+=0===t?"::":":",d=!0));return a}(e)+"]":e}function T(e){const a=e.path;0!==a.length&&("file"===e.scheme&&1===a.length&&function(e){return/^[A-Za-z]:$/.test(e)}(a[0])||a.pop())}function C(e){return""!==e.username||""!==e.password}function D(e,t,p,d,n){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=p||"utf-8",this.stateOverride=n,this.url=d,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const r=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(r!==this.input&&(this.parseError=!0),this.input=r,this.state=n||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=a.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),t=this["parse "+this.state](e,a);if(!t)break;if(t===i){this.failure=!0;break}}}D.prototype["parse scheme start"]=function(e,a){if(s(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,i;this.state="no scheme",--this.pointer}return!0},D.prototype["parse scheme"]=function(e,a){if(function(e){return s(e)||o(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(h(this.url)&&!u(this.buffer))return!1;if(!h(this.url)&&u(this.buffer))return!1;if((C(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):h(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":h(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,i;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},D.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?i:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},D.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},D.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},D.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):h(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},D.prototype["parse relative slash"]=function(e){return!h(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},D.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},D.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},D.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=n(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const t=S(e,b);this.passwordTokenSeenFlag?this.url.password+=t:this.url.username+=t}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,i;this.pointer-=n(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},D.prototype["parse hostname"]=D.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(--this.pointer,h(this.url)&&""===this.buffer)return this.parseError=!0,i;if(this.stateOverride&&""===this.buffer&&(C(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=E(this.buffer,h(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,i;const e=E(this.buffer,h(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},D.prototype["parse port"]=function(e,a){if(o(e))this.buffer+=a;else{if(!(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e||this.stateOverride))return this.parseError=!0,i;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,i;this.url.port=e===(t=this.url.scheme,p[t])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var t;return!0};const A=new Set([47,92,63,35]);D.prototype["parse file"]=function(e){var a,t;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=e,t=this.input[this.pointer+1],!s(a)||58!==t&&124!==t)||this.input.length-this.pointer-1>=2&&!A.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},D.prototype["parse file slash"]=function(e){return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(!function(e){return 2===e.length&&s(e.codePointAt(0))&&":"===e[1]}(this.base.path[0])?this.url.host=this.base.host:this.url.path.push(this.base.path[0])),this.state="path",--this.pointer),!0},D.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&c(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=E(this.buffer,h(this.url));if(e===i)return i;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},D.prototype["parse path start"]=function(e){return h(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},D.prototype["parse path"]=function(e){if(isNaN(e)||47===e||h(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(h(this.url)&&92===e&&(this.parseError=!0),".."===(a=(a=this.buffer).toLowerCase())||"%2e."===a||".%2e"===a||"%2e%2e"===a?(T(this.url),47===e||h(this.url)&&92===e||this.url.path.push("")):!m(this.buffer)||47===e||h(this.url)&&92===e?m(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&c(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=S(e,w);var a;return!0},D.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+S(e,f))),!0},D.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){h(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?this.url.query+=v(a[e]):this.url.query+=String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},D.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=S(e,f))),!0},e.exports.serializeURL=function(e,a){let t=e.scheme+":";if(null!==e.host?(t+="//",""===e.username&&""===e.password||(t+=e.username,""!==e.password&&(t+=":"+e.password),t+="@"),t+=N(e.host),null!==e.port&&(t+=":"+e.port)):null===e.host&&"file"===e.scheme&&(t+="//"),e.cannotBeABaseURL)t+=e.path[0];else for(const a of e.path)t+="/"+a;return null!==e.query&&(t+="?"+e.query),a||null===e.fragment||(t+="#"+e.fragment),t},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=N(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const t=new D(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return t.failure?"failure":t.url},e.exports.setTheUsername=function(e,t){e.username="";const p=a.ucs2.decode(t);for(let a=0;a<p.length;++a)e.username+=S(p[a],b)},e.exports.setThePassword=function(e,t){e.password="";const p=a.ucs2.decode(t);for(let a=0;a<p.length;++a)e.password+=S(p[a],b)},e.exports.serializeHost=N,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,t){return void 0===t&&(t={}),e.exports.basicURLParse(a,{baseURL:t.baseURL,encodingOverride:t.encodingOverride})}}(M);var z=M.exports;const q=z;R.implementation=class{constructor(e){const a=e[0],t=e[1];let p=null;if(void 0!==t&&(p=q.basicURLParse(t),"failure"===p))throw new TypeError("Invalid base URL");const d=q.basicURLParse(a,{baseURL:p});if("failure"===d)throw new TypeError("Invalid URL");this._url=d}get href(){return q.serializeURL(this._url)}set href(e){const a=q.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return q.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){q.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){q.cannotHaveAUsernamePasswordPort(this._url)||q.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){q.cannotHaveAUsernamePasswordPort(this._url)||q.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?q.serializeHost(e.host):q.serializeHost(e.host)+":"+q.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||q.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":q.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||q.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":q.serializeInteger(this._url.port)}set port(e){q.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:q.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],q.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const t="?"===e[0]?e.substring(1):e;a.query="",q.basicURLParse(t,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",q.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},function(e){const a=D,t=x,p=R,d=t.implSymbol;function i(t){if(!this||this[d]||!(this instanceof i))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const p=[];for(let e=0;e<arguments.length&&e<2;++e)p[e]=arguments[e];p[0]=a.USVString(p[0]),void 0!==p[1]&&(p[1]=a.USVString(p[1])),e.exports.setup(this,p)}i.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const a=[];for(let e=0;e<arguments.length&&e<0;++e)a[e]=arguments[e];return this[d].toJSON.apply(this[d],a)},Object.defineProperty(i.prototype,"href",{get(){return this[d].href},set(e){e=a.USVString(e),this[d].href=e},enumerable:!0,configurable:!0}),i.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(i.prototype,"origin",{get(){return this[d].origin},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"protocol",{get(){return this[d].protocol},set(e){e=a.USVString(e),this[d].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"username",{get(){return this[d].username},set(e){e=a.USVString(e),this[d].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"password",{get(){return this[d].password},set(e){e=a.USVString(e),this[d].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"host",{get(){return this[d].host},set(e){e=a.USVString(e),this[d].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hostname",{get(){return this[d].hostname},set(e){e=a.USVString(e),this[d].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"port",{get(){return this[d].port},set(e){e=a.USVString(e),this[d].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"pathname",{get(){return this[d].pathname},set(e){e=a.USVString(e),this[d].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"search",{get(){return this[d].search},set(e){e=a.USVString(e),this[d].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hash",{get(){return this[d].hash},set(e){e=a.USVString(e),this[d].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[d]instanceof p.implementation,create(e,a){let t=Object.create(i.prototype);return this.setup(t,e,a),t},setup(e,a,i){i||(i={}),i.wrapper=e,e[d]=new p.implementation(a,i),e[d][t.wrapperSymbol]=e},interface:i,expose:{Window:{URL:i},Worker:{URL:i}}}}(T);var W=T.exports;N.URL=W.interface,N.serializeURL=z.serializeURL,N.serializeURLOrigin=z.serializeURLOrigin,N.basicURLParse=z.basicURLParse,N.setTheUsername=z.setTheUsername,N.setThePassword=z.setThePassword,N.serializeHost=z.serializeHost,N.serializeInteger=z.serializeInteger,N.parseURL=z.parseURL;const G=a.Readable,Y=Symbol("buffer"),J=Symbol("type");let Z,X=class e{constructor(){this[J]="";const a=arguments[0],t=arguments[1],p=[];let d=0;if(a){const t=a,i=Number(t.length);for(let a=0;a<i;a++){const i=t[a];let n;n=i instanceof Buffer?i:ArrayBuffer.isView(i)?Buffer.from(i.buffer,i.byteOffset,i.byteLength):i instanceof ArrayBuffer?Buffer.from(i):i instanceof e?i[Y]:Buffer.from("string"==typeof i?i:String(i)),d+=n.length,p.push(n)}}this[Y]=Buffer.concat(p);let i=t&&void 0!==t.type&&String(t.type).toLowerCase();i&&!/[^\u0020-\u007E]/.test(i)&&(this[J]=i)}get size(){return this[Y].length}get type(){return this[J]}text(){return Promise.resolve(this[Y].toString())}arrayBuffer(){const e=this[Y],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new G;return e._read=function(){},e.push(this[Y]),e.push(null),e}toString(){return"[object Blob]"}slice(){const a=this.size,t=arguments[0],p=arguments[1];let d,i;d=void 0===t?0:t<0?Math.max(a+t,0):Math.min(t,a),i=void 0===p?a:p<0?Math.max(a+p,0):Math.min(p,a);const n=Math.max(i-d,0),r=this[Y].slice(d,d+n),o=new e([],{type:arguments[2]});return o[Y]=r,o}};function Q(e,a,t){Error.call(this,e),this.message=e,this.type=a,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}Object.defineProperties(X.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(X.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),Q.prototype=Object.create(Error.prototype),Q.prototype.constructor=Q,Q.prototype.name="FetchError";try{Z=require("encoding").convert}catch(jd){}const ee=Symbol("Body internals"),ae=a.PassThrough;function te(e){var t=this,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=p.size;let i=void 0===d?0:d;var n=p.timeout;let r=void 0===n?0:n;null==e?e=null:de(e)?e=Buffer.from(e.toString()):ie(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof a||(e=Buffer.from(String(e)))),this[ee]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=r,e instanceof a&&e.on("error",(function(e){const a="AbortError"===e.name?e:new Q(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[ee].error=a}))}function pe(){var e=this;if(this[ee].disturbed)return te.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[ee].disturbed=!0,this[ee].error)return te.Promise.reject(this[ee].error);let t=this.body;if(null===t)return te.Promise.resolve(Buffer.alloc(0));if(ie(t)&&(t=t.stream()),Buffer.isBuffer(t))return te.Promise.resolve(t);if(!(t instanceof a))return te.Promise.resolve(Buffer.alloc(0));let p=[],d=0,i=!1;return new te.Promise((function(a,n){let r;e.timeout&&(r=setTimeout((function(){i=!0,n(new Q(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(a){"AbortError"===a.name?(i=!0,n(a)):n(new Q(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))})),t.on("data",(function(a){if(!i&&null!==a){if(e.size&&d+a.length>e.size)return i=!0,void n(new Q(`content size at ${e.url} over limit: ${e.size}`,"max-size"));d+=a.length,p.push(a)}})),t.on("end",(function(){if(!i){clearTimeout(r);try{a(Buffer.concat(p,d))}catch(a){n(new Q(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}}))}))}function de(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function ie(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function ne(e){let t,p,d=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return d instanceof a&&"function"!=typeof d.getBoundary&&(t=new ae,p=new ae,d.pipe(t),d.pipe(p),e[ee].body=t,d=p),d}function re(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":de(e)?"application/x-www-form-urlencoded;charset=UTF-8":ie(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof a?null:"text/plain;charset=UTF-8"}function oe(e){const a=e.body;return null===a?0:ie(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}te.prototype={get body(){return this[ee].body},get bodyUsed(){return this[ee].disturbed},arrayBuffer(){return pe.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return pe.call(this).then((function(a){return Object.assign(new X([],{type:e.toLowerCase()}),{[Y]:a})}))},json(){var e=this;return pe.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return te.Promise.reject(new Q(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return pe.call(this).then((function(e){return e.toString()}))},buffer(){return pe.call(this)},textConverted(){var e=this;return pe.call(this).then((function(a){return function(e,a){if("function"!=typeof Z)throw new Error("The package `encoding` must be installed to use the textConverted() function");const t=a.get("content-type");let p,d,i="utf-8";t&&(p=/charset=([^;]*)/i.exec(t));d=e.slice(0,1024).toString(),!p&&d&&(p=/<meta.+?charset=(['"])(.+?)\1/i.exec(d));!p&&d&&(p=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(d),p||(p=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(d),p&&p.pop()),p&&(p=/charset=(.*)/i.exec(p.pop())));!p&&d&&(p=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(d));p&&(i=p.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030"));return Z(e,"UTF-8",i).toString()}(a,e.headers)}))}},Object.defineProperties(te.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),te.mixIn=function(e){for(const a of Object.getOwnPropertyNames(te.prototype))if(!(a in e)){const t=Object.getOwnPropertyDescriptor(te.prototype,a);Object.defineProperty(e,a,t)}},te.Promise=global.Promise;const se=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,le=/[^\t\x20-\x7e\x80-\xff]/;function me(e){if(e=`${e}`,se.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function ce(e){if(e=`${e}`,le.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function ue(e,a){a=a.toLowerCase();for(const t in e)if(t.toLowerCase()===a)return t}const he=Symbol("map");let ve=class e{constructor(){let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[he]=Object.create(null),a instanceof e){const e=a.raw(),t=Object.keys(e);for(const a of t)for(const t of e[a])this.append(a,t)}else if(null==a);else{if("object"!=typeof a)throw new TypeError("Provided initializer must be an object");{const e=a[Symbol.iterator];if(null!=e){if("function"!=typeof e)throw new TypeError("Header pairs must be iterable");const t=[];for(const e of a){if("object"!=typeof e||"function"!=typeof e[Symbol.iterator])throw new TypeError("Each header pair must be iterable");t.push(Array.from(e))}for(const e of t){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const e of Object.keys(a)){const t=a[e];this.append(e,t)}}}}get(e){me(e=`${e}`);const a=ue(this[he],e);return void 0===a?null:this[he][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=fe(this),p=0;for(;p<t.length;){var d=t[p];const i=d[0],n=d[1];e.call(a,n,i,this),t=fe(this),p++}}set(e,a){a=`${a}`,me(e=`${e}`),ce(a);const t=ue(this[he],e);this[he][void 0!==t?t:e]=[a]}append(e,a){a=`${a}`,me(e=`${e}`),ce(a);const t=ue(this[he],e);void 0!==t?this[he][t].push(a):this[he][e]=[a]}has(e){return me(e=`${e}`),void 0!==ue(this[he],e)}delete(e){me(e=`${e}`);const a=ue(this[he],e);void 0!==a&&delete this[he][a]}raw(){return this[he]}keys(){return we(this,"key")}values(){return we(this,"value")}[Symbol.iterator](){return we(this,"key+value")}};function fe(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[he]).sort().map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[he][a].join(", ")}:function(a){return[a.toLowerCase(),e[he][a].join(", ")]})}ve.prototype.entries=ve.prototype[Symbol.iterator],Object.defineProperty(ve.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(ve.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const ge=Symbol("internal");function we(e,a){const t=Object.create(ye);return t[ge]={target:e,kind:a,index:0},t}const ye=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==ye)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[ge];const a=e.target,t=e.kind,p=e.index,d=fe(a,t);return p>=d.length?{value:void 0,done:!0}:(this[ge].index=p+1,{value:d[p],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function be(e){const a=Object.assign({__proto__:null},e[he]),t=ue(e[he],"Host");return void 0!==t&&(a[t]=a[t][0]),a}Object.defineProperty(ye,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const Se=Symbol("Response internals"),_e=t.STATUS_CODES;let Ee=class e{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};te.call(this,e,a);const t=a.status||200,p=new ve(a.headers);if(null!=e&&!p.has("Content-Type")){const a=re(e);a&&p.append("Content-Type",a)}this[Se]={url:a.url,status:t,statusText:a.statusText||_e[t],headers:p,counter:a.counter}}get url(){return this[Se].url||""}get status(){return this[Se].status}get ok(){return this[Se].status>=200&&this[Se].status<300}get redirected(){return this[Se].counter>0}get statusText(){return this[Se].statusText}get headers(){return this[Se].headers}clone(){return new e(ne(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}};te.mixIn(Ee.prototype),Object.defineProperties(Ee.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(Ee.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const Ne=Symbol("Request internals"),Te=p.URL||N.URL,Ce=p.parse,De=p.format;function Ae(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new Te(e).toString()),Ce(e)}const ke="destroy"in a.Readable.prototype;function Oe(e){return"object"==typeof e&&"object"==typeof e[Ne]}let xe=class e{constructor(e){let a,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Oe(e)?a=Ae(e.url):(a=e&&e.href?Ae(e.href):Ae(`${e}`),e={});let p=t.method||e.method||"GET";if(p=p.toUpperCase(),(null!=t.body||Oe(e)&&null!==e.body)&&("GET"===p||"HEAD"===p))throw new TypeError("Request with GET/HEAD method cannot have body");let d=null!=t.body?t.body:Oe(e)&&null!==e.body?ne(e):null;te.call(this,d,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new ve(t.headers||e.headers||{});if(null!=d&&!i.has("Content-Type")){const e=re(d);e&&i.append("Content-Type",e)}let n=Oe(e)?e.signal:null;if("signal"in t&&(n=t.signal),null!=n&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(n))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[Ne]={method:p,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:a,signal:n},this.follow=void 0!==t.follow?t.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==t.compress?t.compress:void 0===e.compress||e.compress,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[Ne].method}get url(){return De(this[Ne].parsedURL)}get headers(){return this[Ne].headers}get redirect(){return this[Ne].redirect}get signal(){return this[Ne].signal}clone(){return new e(this)}};function Re(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}te.mixIn(xe.prototype),Object.defineProperty(xe.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(xe.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),Re.prototype=Object.create(Error.prototype),Re.prototype.constructor=Re,Re.prototype.name="AbortError";const Me=p.URL||N.URL,Pe=a.PassThrough;function Ie(e,p){if(!Ie.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return te.Promise=Ie.Promise,new Ie.Promise((function(d,r){const o=new xe(e,p),s=function(e){const t=e[Ne].parsedURL,p=new ve(e[Ne].headers);if(p.has("Accept")||p.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof a.Readable&&!ke)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let d=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(d="0"),null!=e.body){const a=oe(e);"number"==typeof a&&(d=String(a))}d&&p.set("Content-Length",d),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),p.has("Connection")||i||p.set("Connection","close"),Object.assign({},t,{method:e.method,headers:be(p),agent:i})}(o),l=("https:"===s.protocol?i:t).request,m=o.signal;let c=null;const u=function(){let e=new Re("The user aborted a request.");r(e),o.body&&o.body instanceof a.Readable&&Ve(o.body,e),c&&c.body&&c.body.emit("error",e)};if(m&&m.aborted)return void u();const h=function(){u(),g()},v=l(s);let f;function g(){v.abort(),m&&m.removeEventListener("abort",h),clearTimeout(f)}m&&m.addEventListener("abort",h),o.timeout&&v.once("socket",(function(e){f=setTimeout((function(){r(new Q(`network timeout at: ${o.url}`,"request-timeout")),g()}),o.timeout)})),v.on("error",(function(e){r(new Q(`request to ${o.url} failed, reason: ${e.message}`,"system",e)),c&&c.body&&Ve(c.body,e),g()})),function(e,a){let t;e.on("socket",(function(e){t=e})),e.on("response",(function(e){const p=e.headers;"chunked"!==p["transfer-encoding"]||p["content-length"]||e.once("close",(function(e){if(t&&t.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",a(e)}}))}))}(v,(function(e){m&&m.aborted||c&&c.body&&Ve(c.body,e)})),parseInt(process.version.substring(1))<14&&v.on("socket",(function(e){e.addListener("close",(function(a){const t=e.listenerCount("data")>0;if(c&&t&&!a&&(!m||!m.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",c.body.emit("error",e)}}))})),v.on("response",(function(e){clearTimeout(f);const a=function(e){const a=new ve;for(const t of Object.keys(e))if(!se.test(t))if(Array.isArray(e[t]))for(const p of e[t])le.test(p)||(void 0===a[he][t]?a[he][t]=[p]:a[he][t].push(p));else le.test(e[t])||(a[he][t]=[e[t]]);return a}(e.headers);if(Ie.isRedirect(e.statusCode)){const p=a.get("Location");let i=null;try{i=null===p?null:new Me(p,o.url).toString()}catch(e){if("manual"!==o.redirect)return r(new Q(`uri requested responds with an invalid redirect URL: ${p}`,"invalid-redirect")),void g()}switch(o.redirect){case"error":return r(new Q(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),void g();case"manual":if(null!==i)try{a.set("Location",i)}catch(e){r(e)}break;case"follow":if(null===i)break;if(o.counter>=o.follow)return r(new Q(`maximum redirect reached at: ${o.url}`,"max-redirect")),void g();const p={headers:new ve(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!function(e,a){const t=new Me(a).hostname,p=new Me(e).hostname;return t===p||"."===t[t.length-p.length-1]&&t.endsWith(p)}(o.url,i)||(t=o.url,new Me(i).protocol!==new Me(t).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])p.headers.delete(e);return 303!==e.statusCode&&o.body&&null===oe(o)?(r(new Q("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void g()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==o.method)||(p.method="GET",p.body=void 0,p.headers.delete("content-length")),d(Ie(new xe(i,p))),void g())}}var t;e.once("end",(function(){m&&m.removeEventListener("abort",h)}));let p=e.pipe(new Pe);const i={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:o.size,timeout:o.timeout,counter:o.counter},s=a.get("Content-Encoding");if(!o.compress||"HEAD"===o.method||null===s||204===e.statusCode||304===e.statusCode)return c=new Ee(p,i),void d(c);const l={flush:n.Z_SYNC_FLUSH,finishFlush:n.Z_SYNC_FLUSH};if("gzip"==s||"x-gzip"==s)return p=p.pipe(n.createGunzip(l)),c=new Ee(p,i),void d(c);if("deflate"==s||"x-deflate"==s){const a=e.pipe(new Pe);return a.once("data",(function(e){p=8==(15&e[0])?p.pipe(n.createInflate()):p.pipe(n.createInflateRaw()),c=new Ee(p,i),d(c)})),void a.on("end",(function(){c||(c=new Ee(p,i),d(c))}))}if("br"==s&&"function"==typeof n.createBrotliDecompress)return p=p.pipe(n.createBrotliDecompress()),c=new Ee(p,i),void d(c);c=new Ee(p,i),d(c)})),function(e,a){const t=a.body;null===t?e.end():ie(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}(v,o)}))}function Ve(e,a){e.destroy?e.destroy(a):(e.emit("error",a),e.end())}Ie.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Ie.Promise=global.Promise;var Le=_(Object.freeze({__proto__:null,FetchError:Q,Headers:ve,Request:xe,Response:Ee,default:Ie}));!function(e,a){const t=Le,p=t.default||t,d=function(e,a){return/^\/\//.test(e)&&(e="https:"+e),p.call(this,e,a)};d.ponyfill=!0,e.exports=a=d,a.fetch=d,a.Headers=t.Headers,a.Request=t.Request,a.Response=t.Response,a.default=d}(E,E.exports);var Be=S(E.exports),je={},Ke={},Ue={};function Fe(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`positive integer expected, not ${e}`)}function $e(e){if("boolean"!=typeof e)throw new Error(`boolean expected, not ${e}`)}function He(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function ze(e,...a){if(!He(e))throw new Error("Uint8Array expected");if(a.length>0&&!a.includes(e.length))throw new Error(`Uint8Array expected of length ${a}, not of length=${e.length}`)}function qe(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("hash must be wrapped by utils.wrapConstructor");Fe(e.outputLen),Fe(e.blockLen)}function We(e,a=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(a&&e.finished)throw new Error("Hash#digest() has already been called")}function Ge(e,a){ze(e);const t=a.outputLen;if(e.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}Object.defineProperty(Ue,"__esModule",{value:!0}),Ue.isBytes=He,Ue.number=Fe,Ue.bool=$e,Ue.bytes=ze,Ue.hash=qe,Ue.exists=We,Ue.output=Ge;const Ye={number:Fe,bool:$e,bytes:ze,hash:qe,exists:We,output:Ge};Ue.default=Ye,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.wrapCipher=e.Hash=e.nextTick=e.isLE=e.createView=e.u32=e.u16=e.u8=void 0,e.bytesToHex=p,e.hexToBytes=n,e.hexToNumber=r,e.bytesToNumberBE=function(e){return r(p(e))},e.numberToBytesBE=function(e,a){return n(e.toString(16).padStart(2*a,"0"))},e.asyncLoop=async function(a,t,p){let d=Date.now();for(let i=0;i<a;i++){p(i);const a=Date.now()-d;a>=0&&a<t||(await(0,e.nextTick)(),d+=a)}},e.utf8ToBytes=o,e.bytesToUtf8=function(e){return(new TextDecoder).decode(e)},e.toBytes=function(e){if("string"==typeof e)e=o(e);else{if(!(0,a.isBytes)(e))throw new Error("Uint8Array expected, got "+typeof e);e=l(e)}return e},e.concatBytes=function(...e){let t=0;for(let p=0;p<e.length;p++){const d=e[p];(0,a.bytes)(d),t+=d.length}const p=new Uint8Array(t);for(let a=0,t=0;a<e.length;a++){const d=e[a];p.set(d,t),t+=d.length}return p},e.checkOpts=function(e,a){if(null==a||"object"!=typeof a)throw new Error("options must be defined");const t=Object.assign(e,a);return t},e.equalBytes=function(e,a){if(e.length!==a.length)return!1;let t=0;for(let p=0;p<e.length;p++)t|=e[p]^a[p];return 0===t},e.setBigUint64=s,e.u64Lengths=function(a,t){const p=new Uint8Array(16),d=(0,e.createView)(p);return s(d,0,BigInt(t?t.length:0),!0),s(d,8,BigInt(a.length),!0),p},e.isAligned32=function(e){return e.byteOffset%4==0},e.copyBytes=l,e.clean=function(...e){for(let a=0;a<e.length;a++)e[a].fill(0)};
/*! noble-ciphers - MIT License (c) 2023 Paul Miller (paulmillr.com) */
const a=Ue;e.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength);e.u16=e=>new Uint16Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/2));e.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4));if(e.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),e.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0],!e.isLE)throw new Error("Non little-endian hardware is not supported");const t=Array.from({length:256},((e,a)=>a.toString(16).padStart(2,"0")));function p(e){(0,a.bytes)(e);let p="";for(let a=0;a<e.length;a++)p+=t[e[a]];return p}const d={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function i(e){return e>=d._0&&e<=d._9?e-d._0:e>=d._A&&e<=d._F?e-(d._A-10):e>=d._a&&e<=d._f?e-(d._a-10):void 0}function n(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const a=e.length,t=a/2;if(a%2)throw new Error("padded hex string expected, got unpadded hex of length "+a);const p=new Uint8Array(t);for(let a=0,d=0;a<t;a++,d+=2){const t=i(e.charCodeAt(d)),n=i(e.charCodeAt(d+1));if(void 0===t||void 0===n){const a=e[d]+e[d+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+d)}p[a]=16*t+n}return p}function r(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function o(e){if("string"!=typeof e)throw new Error("string expected, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}e.nextTick=async()=>{};e.Hash=class{};function s(e,a,t,p){if("function"==typeof e.setBigUint64)return e.setBigUint64(a,t,p);const d=BigInt(32),i=BigInt(4294967295),n=Number(t>>d&i),r=Number(t&i),o=p?4:0,s=p?0:4;e.setUint32(a+o,n,p),e.setUint32(a+s,r,p)}function l(e){return Uint8Array.from(e)}e.wrapCipher=(e,a)=>(Object.assign(a,e),a)}(Ke);var Je={},Ze={};Object.defineProperty(Ze,"__esModule",{value:!0}),Ze.AEAD_TAG_LENGTH=Ze.XCHACHA20_NONCE_LENGTH=Ze.CURVE25519_PUBLIC_KEY_SIZE=Ze.ETH_PUBLIC_KEY_SIZE=Ze.UNCOMPRESSED_PUBLIC_KEY_SIZE=Ze.COMPRESSED_PUBLIC_KEY_SIZE=Ze.SECRET_KEY_LENGTH=void 0,Ze.SECRET_KEY_LENGTH=32,Ze.COMPRESSED_PUBLIC_KEY_SIZE=33,Ze.UNCOMPRESSED_PUBLIC_KEY_SIZE=65,Ze.ETH_PUBLIC_KEY_SIZE=64,Ze.CURVE25519_PUBLIC_KEY_SIZE=32,Ze.XCHACHA20_NONCE_LENGTH=24,Ze.AEAD_TAG_LENGTH=16,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.ephemeralKeySize=e.symmetricNonceLength=e.symmetricAlgorithm=e.isHkdfKeyCompressed=e.isEphemeralKeyCompressed=e.ellipticCurve=e.ECIES_CONFIG=void 0;var a=Ze,t=function(){this.ellipticCurve="secp256k1",this.isEphemeralKeyCompressed=!1,this.isHkdfKeyCompressed=!1,this.symmetricAlgorithm="aes-256-gcm",this.symmetricNonceLength=16};e.ECIES_CONFIG=new t;e.ellipticCurve=function(){return e.ECIES_CONFIG.ellipticCurve};e.isEphemeralKeyCompressed=function(){return e.ECIES_CONFIG.isEphemeralKeyCompressed};e.isHkdfKeyCompressed=function(){return e.ECIES_CONFIG.isHkdfKeyCompressed};e.symmetricAlgorithm=function(){return e.ECIES_CONFIG.symmetricAlgorithm};e.symmetricNonceLength=function(){return e.ECIES_CONFIG.symmetricNonceLength};e.ephemeralKeySize=function(){var t={secp256k1:e.ECIES_CONFIG.isEphemeralKeyCompressed?a.COMPRESSED_PUBLIC_KEY_SIZE:a.UNCOMPRESSED_PUBLIC_KEY_SIZE,x25519:a.CURVE25519_PUBLIC_KEY_SIZE,ed25519:a.CURVE25519_PUBLIC_KEY_SIZE};if(e.ECIES_CONFIG.ellipticCurve in t)return t[e.ECIES_CONFIG.ellipticCurve];throw new Error("Not implemented")}}(Je);var Xe={},Qe={},ea={},aa={},ta={},pa={};Object.defineProperty(pa,"__esModule",{value:!0}),pa.crypto=void 0;const da=l;pa.crypto=da&&"object"==typeof da&&"webcrypto"in da?da.webcrypto:da&&"object"==typeof da&&"randomBytes"in da?da:void 0,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.gcm=e.ctr=e.cbc=e.utils=void 0,e.randomBytes=d,e.getWebcryptoSubtle=i,e.managedNonce=function(e){return(0,t.number)(e.nonceLength),(a,...t)=>({encrypt(i,...n){const{nonceLength:r}=e,o=d(r),s=e(a,o,...t).encrypt(i,...n),l=(0,p.concatBytes)(o,s);return s.fill(0),l},decrypt(p,...d){const{nonceLength:i}=e,n=p.subarray(0,i),r=p.subarray(i);return e(a,n,...t).decrypt(r,...d)}})};const a=pa,t=Ue,p=Ke;function d(e=32){if(a.crypto&&"function"==typeof a.crypto.getRandomValues)return a.crypto.getRandomValues(new Uint8Array(e));if(a.crypto&&"function"==typeof a.crypto.randomBytes)return a.crypto.randomBytes(e);throw new Error("crypto.getRandomValues must be defined")}function i(){if(a.crypto&&"object"==typeof a.crypto.subtle&&null!=a.crypto.subtle)return a.crypto.subtle;throw new Error("crypto.subtle must be defined")}e.utils={async encrypt(e,a,t,p){const d=i(),n=await d.importKey("raw",e,a,!0,["encrypt"]),r=await d.encrypt(t,n,p);return new Uint8Array(r)},async decrypt(e,a,t,p){const d=i(),n=await d.importKey("raw",e,a,!0,["decrypt"]),r=await d.decrypt(t,n,p);return new Uint8Array(r)}};const n={CBC:"AES-CBC",CTR:"AES-CTR",GCM:"AES-GCM"};function r(a){return(p,d,i)=>{(0,t.bytes)(p),(0,t.bytes)(d);const r={name:a,length:8*p.length},o=function(e,a,t){if(e===n.CBC)return{name:n.CBC,iv:a};if(e===n.CTR)return{name:n.CTR,counter:a,length:64};if(e===n.GCM)return t?{name:n.GCM,iv:a,additionalData:t}:{name:n.GCM,iv:a};throw new Error("unknown aes block mode")}(a,d,i);return{encrypt:a=>((0,t.bytes)(a),e.utils.encrypt(p,r,o,a)),decrypt:a=>((0,t.bytes)(a),e.utils.decrypt(p,r,o,a))}}}e.cbc=r(n.CBC),e.ctr=r(n.CTR),e.gcm=r(n.GCM)}(ta);var ia={},na={},ra={},oa={};function sa(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`positive integer expected, not ${e}`)}function la(e){if("boolean"!=typeof e)throw new Error(`boolean expected, not ${e}`)}function ma(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function ca(e,...a){if(!ma(e))throw new Error("Uint8Array expected");if(a.length>0&&!a.includes(e.length))throw new Error(`Uint8Array expected of length ${a}, not of length=${e.length}`)}function ua(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");sa(e.outputLen),sa(e.blockLen)}function ha(e,a=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(a&&e.finished)throw new Error("Hash#digest() has already been called")}function va(e,a){ca(e);const t=a.outputLen;if(e.length<t)throw new Error(`digestInto() expects output buffer of length at least ${t}`)}Object.defineProperty(oa,"__esModule",{value:!0}),oa.isBytes=ma,oa.number=sa,oa.bool=la,oa.bytes=ca,oa.hash=ua,oa.exists=ha,oa.output=va;const fa={number:sa,bool:la,bytes:ca,hash:ua,exists:ha,output:va};oa.default=fa;var ga={},wa={};Object.defineProperty(wa,"__esModule",{value:!0}),wa.crypto=void 0;const ya=l;wa.crypto=ya&&"object"==typeof ya&&"webcrypto"in ya?ya.webcrypto:ya&&"object"==typeof ya&&"randomBytes"in ya?ya:void 0,function(e){
/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
Object.defineProperty(e,"__esModule",{value:!0}),e.Hash=e.nextTick=e.byteSwapIfBE=e.byteSwap=e.isLE=e.rotl=e.rotr=e.createView=e.u32=e.u8=void 0,e.isBytes=function(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name},e.byteSwap32=function(a){for(let t=0;t<a.length;t++)a[t]=(0,e.byteSwap)(a[t])},e.bytesToHex=function(e){(0,t.bytes)(e);let a="";for(let t=0;t<e.length;t++)a+=p[e[t]];return a},e.hexToBytes=function(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const a=e.length,t=a/2;if(a%2)throw new Error("padded hex string expected, got unpadded hex of length "+a);const p=new Uint8Array(t);for(let a=0,d=0;a<t;a++,d+=2){const t=i(e.charCodeAt(d)),n=i(e.charCodeAt(d+1));if(void 0===t||void 0===n){const a=e[d]+e[d+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+d)}p[a]=16*t+n}return p},e.asyncLoop=async function(a,t,p){let d=Date.now();for(let i=0;i<a;i++){p(i);const a=Date.now()-d;a>=0&&a<t||(await(0,e.nextTick)(),d+=a)}},e.utf8ToBytes=n,e.toBytes=r,e.concatBytes=function(...e){let a=0;for(let p=0;p<e.length;p++){const d=e[p];(0,t.bytes)(d),a+=d.length}const p=new Uint8Array(a);for(let a=0,t=0;a<e.length;a++){const d=e[a];p.set(d,t),t+=d.length}return p},e.checkOpts=function(e,a){if(void 0!==a&&"[object Object]"!==o.call(a))throw new Error("Options should be object or undefined");const t=Object.assign(e,a);return t},e.wrapConstructor=function(e){const a=a=>e().update(r(a)).digest(),t=e();return a.outputLen=t.outputLen,a.blockLen=t.blockLen,a.create=()=>e(),a},e.wrapConstructorWithOpts=function(e){const a=(a,t)=>e(t).update(r(a)).digest(),t=e({});return a.outputLen=t.outputLen,a.blockLen=t.blockLen,a.create=a=>e(a),a},e.wrapXOFConstructorWithOpts=function(e){const a=(a,t)=>e(t).update(r(a)).digest(),t=e({});return a.outputLen=t.outputLen,a.blockLen=t.blockLen,a.create=a=>e(a),a},e.randomBytes=function(e=32){if(a.crypto&&"function"==typeof a.crypto.getRandomValues)return a.crypto.getRandomValues(new Uint8Array(e));if(a.crypto&&"function"==typeof a.crypto.randomBytes)return a.crypto.randomBytes(e);throw new Error("crypto.getRandomValues must be defined")};const a=wa,t=oa;e.u8=e=>new Uint8Array(e.buffer,e.byteOffset,e.byteLength);e.u32=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4));e.createView=e=>new DataView(e.buffer,e.byteOffset,e.byteLength);e.rotr=(e,a)=>e<<32-a|e>>>a;e.rotl=(e,a)=>e<<a|e>>>32-a>>>0,e.isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];e.byteSwap=e=>e<<24&4278190080|e<<8&16711680|e>>>8&65280|e>>>24&255,e.byteSwapIfBE=e.isLE?e=>e:a=>(0,e.byteSwap)(a);const p=Array.from({length:256},((e,a)=>a.toString(16).padStart(2,"0")));const d={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function i(e){return e>=d._0&&e<=d._9?e-d._0:e>=d._A&&e<=d._F?e-(d._A-10):e>=d._a&&e<=d._f?e-(d._a-10):void 0}function n(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))}function r(e){return"string"==typeof e&&(e=n(e)),(0,t.bytes)(e),e}e.nextTick=async()=>{};e.Hash=class{clone(){return this._cloneInto()}};const o={}.toString}(ga),Object.defineProperty(ra,"__esModule",{value:!0}),ra.HashMD=ra.Maj=ra.Chi=void 0;const ba=oa,Sa=ga;ra.Chi=(e,a,t)=>e&a^~e&t;ra.Maj=(e,a,t)=>e&a^e&t^a&t;ra.HashMD=class extends Sa.Hash{constructor(e,a,t,p){super(),this.blockLen=e,this.outputLen=a,this.padOffset=t,this.isLE=p,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,Sa.createView)(this.buffer)}update(e){(0,ba.exists)(this);const{view:a,buffer:t,blockLen:p}=this,d=(e=(0,Sa.toBytes)(e)).length;for(let i=0;i<d;){const n=Math.min(p-this.pos,d-i);if(n!==p)t.set(e.subarray(i,i+n),this.pos),this.pos+=n,i+=n,this.pos===p&&(this.process(a,0),this.pos=0);else{const a=(0,Sa.createView)(e);for(;p<=d-i;i+=p)this.process(a,i)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){(0,ba.exists)(this),(0,ba.output)(e,this),this.finished=!0;const{buffer:a,view:t,blockLen:p,isLE:d}=this;let{pos:i}=this;a[i++]=128,this.buffer.subarray(i).fill(0),this.padOffset>p-i&&(this.process(t,0),i=0);for(let e=i;e<p;e++)a[e]=0;!function(e,a,t,p){if("function"==typeof e.setBigUint64)return e.setBigUint64(a,t,p);const d=BigInt(32),i=BigInt(4294967295),n=Number(t>>d&i),r=Number(t&i),o=p?4:0,s=p?0:4;e.setUint32(a+o,n,p),e.setUint32(a+s,r,p)}(t,p-8,BigInt(8*this.length),d),this.process(t,0);const n=(0,Sa.createView)(e),r=this.outputLen;if(r%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const o=r/4,s=this.get();if(o>s.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<o;e++)n.setUint32(4*e,s[e],d)}digest(){const{buffer:e,outputLen:a}=this;this.digestInto(e);const t=e.slice(0,a);return this.destroy(),t}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:a,buffer:t,length:p,finished:d,destroyed:i,pos:n}=this;return e.length=p,e.pos=n,e.finished=d,e.destroyed=i,p%a&&e.buffer.set(t),e}};var _a={};Object.defineProperty(_a,"__esModule",{value:!0}),_a.add5L=_a.add5H=_a.add4H=_a.add4L=_a.add3H=_a.add3L=_a.rotlBL=_a.rotlBH=_a.rotlSL=_a.rotlSH=_a.rotr32L=_a.rotr32H=_a.rotrBL=_a.rotrBH=_a.rotrSL=_a.rotrSH=_a.shrSL=_a.shrSH=_a.toBig=void 0,_a.fromBig=Ta,_a.split=Ca,_a.add=Ka;const Ea=BigInt(2**32-1),Na=BigInt(32);function Ta(e,a=!1){return a?{h:Number(e&Ea),l:Number(e>>Na&Ea)}:{h:0|Number(e>>Na&Ea),l:0|Number(e&Ea)}}function Ca(e,a=!1){let t=new Uint32Array(e.length),p=new Uint32Array(e.length);for(let d=0;d<e.length;d++){const{h:i,l:n}=Ta(e[d],a);[t[d],p[d]]=[i,n]}return[t,p]}const Da=(e,a)=>BigInt(e>>>0)<<Na|BigInt(a>>>0);_a.toBig=Da;const Aa=(e,a,t)=>e>>>t;_a.shrSH=Aa;const ka=(e,a,t)=>e<<32-t|a>>>t;_a.shrSL=ka;const Oa=(e,a,t)=>e>>>t|a<<32-t;_a.rotrSH=Oa;const xa=(e,a,t)=>e<<32-t|a>>>t;_a.rotrSL=xa;const Ra=(e,a,t)=>e<<64-t|a>>>t-32;_a.rotrBH=Ra;const Ma=(e,a,t)=>e>>>t-32|a<<64-t;_a.rotrBL=Ma;const Pa=(e,a)=>a;_a.rotr32H=Pa;const Ia=(e,a)=>e;_a.rotr32L=Ia;const Va=(e,a,t)=>e<<t|a>>>32-t;_a.rotlSH=Va;const La=(e,a,t)=>a<<t|e>>>32-t;_a.rotlSL=La;const Ba=(e,a,t)=>a<<t-32|e>>>64-t;_a.rotlBH=Ba;const ja=(e,a,t)=>e<<t-32|a>>>64-t;function Ka(e,a,t,p){const d=(a>>>0)+(p>>>0);return{h:e+t+(d/2**32|0)|0,l:0|d}}_a.rotlBL=ja;const Ua=(e,a,t)=>(e>>>0)+(a>>>0)+(t>>>0);_a.add3L=Ua;const Fa=(e,a,t,p)=>a+t+p+(e/2**32|0)|0;_a.add3H=Fa;const $a=(e,a,t,p)=>(e>>>0)+(a>>>0)+(t>>>0)+(p>>>0);_a.add4L=$a;const Ha=(e,a,t,p,d)=>a+t+p+d+(e/2**32|0)|0;_a.add4H=Ha;const za=(e,a,t,p,d)=>(e>>>0)+(a>>>0)+(t>>>0)+(p>>>0)+(d>>>0);_a.add5L=za;const qa=(e,a,t,p,d,i)=>a+t+p+d+i+(e/2**32|0)|0;_a.add5H=qa;const Wa={fromBig:Ta,split:Ca,toBig:Da,shrSH:Aa,shrSL:ka,rotrSH:Oa,rotrSL:xa,rotrBH:Ra,rotrBL:Ma,rotr32H:Pa,rotr32L:Ia,rotlSH:Va,rotlSL:La,rotlBH:Ba,rotlBL:ja,add:Ka,add3L:Ua,add3H:Fa,add4L:$a,add4H:Ha,add5H:qa,add5L:za};_a.default=Wa,Object.defineProperty(na,"__esModule",{value:!0}),na.sha384=na.sha512_256=na.sha512_224=na.sha512=na.SHA384=na.SHA512_256=na.SHA512_224=na.SHA512=void 0;const Ga=ra,Ya=_a,Ja=ga,[Za,Xa]=(()=>Ya.default.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))))(),Qa=new Uint32Array(80),et=new Uint32Array(80);class at extends Ga.HashMD{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:a,Bh:t,Bl:p,Ch:d,Cl:i,Dh:n,Dl:r,Eh:o,El:s,Fh:l,Fl:m,Gh:c,Gl:u,Hh:h,Hl:v}=this;return[e,a,t,p,d,i,n,r,o,s,l,m,c,u,h,v]}set(e,a,t,p,d,i,n,r,o,s,l,m,c,u,h,v){this.Ah=0|e,this.Al=0|a,this.Bh=0|t,this.Bl=0|p,this.Ch=0|d,this.Cl=0|i,this.Dh=0|n,this.Dl=0|r,this.Eh=0|o,this.El=0|s,this.Fh=0|l,this.Fl=0|m,this.Gh=0|c,this.Gl=0|u,this.Hh=0|h,this.Hl=0|v}process(e,a){for(let t=0;t<16;t++,a+=4)Qa[t]=e.getUint32(a),et[t]=e.getUint32(a+=4);for(let e=16;e<80;e++){const a=0|Qa[e-15],t=0|et[e-15],p=Ya.default.rotrSH(a,t,1)^Ya.default.rotrSH(a,t,8)^Ya.default.shrSH(a,t,7),d=Ya.default.rotrSL(a,t,1)^Ya.default.rotrSL(a,t,8)^Ya.default.shrSL(a,t,7),i=0|Qa[e-2],n=0|et[e-2],r=Ya.default.rotrSH(i,n,19)^Ya.default.rotrBH(i,n,61)^Ya.default.shrSH(i,n,6),o=Ya.default.rotrSL(i,n,19)^Ya.default.rotrBL(i,n,61)^Ya.default.shrSL(i,n,6),s=Ya.default.add4L(d,o,et[e-7],et[e-16]),l=Ya.default.add4H(s,p,r,Qa[e-7],Qa[e-16]);Qa[e]=0|l,et[e]=0|s}let{Ah:t,Al:p,Bh:d,Bl:i,Ch:n,Cl:r,Dh:o,Dl:s,Eh:l,El:m,Fh:c,Fl:u,Gh:h,Gl:v,Hh:f,Hl:g}=this;for(let e=0;e<80;e++){const a=Ya.default.rotrSH(l,m,14)^Ya.default.rotrSH(l,m,18)^Ya.default.rotrBH(l,m,41),w=Ya.default.rotrSL(l,m,14)^Ya.default.rotrSL(l,m,18)^Ya.default.rotrBL(l,m,41),y=l&c^~l&h,b=m&u^~m&v,S=Ya.default.add5L(g,w,b,Xa[e],et[e]),_=Ya.default.add5H(S,f,a,y,Za[e],Qa[e]),E=0|S,N=Ya.default.rotrSH(t,p,28)^Ya.default.rotrBH(t,p,34)^Ya.default.rotrBH(t,p,39),T=Ya.default.rotrSL(t,p,28)^Ya.default.rotrBL(t,p,34)^Ya.default.rotrBL(t,p,39),C=t&d^t&n^d&n,D=p&i^p&r^i&r;f=0|h,g=0|v,h=0|c,v=0|u,c=0|l,u=0|m,({h:l,l:m}=Ya.default.add(0|o,0|s,0|_,0|E)),o=0|n,s=0|r,n=0|d,r=0|i,d=0|t,i=0|p;const A=Ya.default.add3L(E,T,D);t=Ya.default.add3H(A,_,N,C),p=0|A}({h:t,l:p}=Ya.default.add(0|this.Ah,0|this.Al,0|t,0|p)),({h:d,l:i}=Ya.default.add(0|this.Bh,0|this.Bl,0|d,0|i)),({h:n,l:r}=Ya.default.add(0|this.Ch,0|this.Cl,0|n,0|r)),({h:o,l:s}=Ya.default.add(0|this.Dh,0|this.Dl,0|o,0|s)),({h:l,l:m}=Ya.default.add(0|this.Eh,0|this.El,0|l,0|m)),({h:c,l:u}=Ya.default.add(0|this.Fh,0|this.Fl,0|c,0|u)),({h:h,l:v}=Ya.default.add(0|this.Gh,0|this.Gl,0|h,0|v)),({h:f,l:g}=Ya.default.add(0|this.Hh,0|this.Hl,0|f,0|g)),this.set(t,p,d,i,n,r,o,s,l,m,c,u,h,v,f,g)}roundClean(){Qa.fill(0),et.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}na.SHA512=at;class tt extends at{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}}na.SHA512_224=tt;class pt extends at{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}na.SHA512_256=pt;class dt extends at{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}na.SHA384=dt,na.sha512=(0,Ja.wrapConstructor)((()=>new at)),na.sha512_224=(0,Ja.wrapConstructor)((()=>new tt)),na.sha512_256=(0,Ja.wrapConstructor)((()=>new pt)),na.sha384=(0,Ja.wrapConstructor)((()=>new dt));var it={},nt={},rt={},ot={};Object.defineProperty(ot,"__esModule",{value:!0}),ot.notImplemented=ot.bitMask=void 0,ot.isBytes=ct,ot.abytes=ut,ot.abool=function(e,a){if("boolean"!=typeof a)throw new Error(`${e} must be valid boolean, got "${a}".`)},ot.bytesToHex=vt,ot.numberToHexUnpadded=ft,ot.hexToNumber=gt,ot.hexToBytes=bt,ot.bytesToNumberBE=function(e){return gt(vt(e))},ot.bytesToNumberLE=function(e){return ut(e),gt(vt(Uint8Array.from(e).reverse()))},ot.numberToBytesBE=St,ot.numberToBytesLE=function(e,a){return St(e,a).reverse()},ot.numberToVarBytesBE=function(e){return bt(ft(e))},ot.ensureBytes=function(e,a,t){let p;if("string"==typeof a)try{p=bt(a)}catch(t){throw new Error(`${e} must be valid hex string, got "${a}". Cause: ${t}`)}else{if(!ct(a))throw new Error(`${e} must be hex string or Uint8Array`);p=Uint8Array.from(a)}const d=p.length;if("number"==typeof t&&d!==t)throw new Error(`${e} expected ${t} bytes, got ${d}`);return p},ot.concatBytes=_t,ot.equalBytes=function(e,a){if(e.length!==a.length)return!1;let t=0;for(let p=0;p<e.length;p++)t|=e[p]^a[p];return 0===t},ot.utf8ToBytes=function(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return new Uint8Array((new TextEncoder).encode(e))},ot.inRange=Nt,ot.aInRange=function(e,a,t,p){if(!Nt(a,t,p))throw new Error(`expected valid ${e}: ${t} <= n < ${p}, got ${typeof a} ${a}`)},ot.bitLen=function(e){let a;for(a=0;e>st;e>>=lt,a+=1);return a},ot.bitGet=function(e,a){return e>>BigInt(a)&lt},ot.bitSet=function(e,a,t){return e|(t?lt:st)<<BigInt(a)},ot.createHmacDrbg=function(e,a,t){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof a||a<2)throw new Error("qByteLen must be a number");if("function"!=typeof t)throw new Error("hmacFn must be a function");let p=Tt(e),d=Tt(e),i=0;const n=()=>{p.fill(1),d.fill(0),i=0},r=(...e)=>t(d,p,...e),o=(e=Tt())=>{d=r(Ct([0]),e),p=r(),0!==e.length&&(d=r(Ct([1]),e),p=r())},s=()=>{if(i++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const t=[];for(;e<a;){p=r();const a=p.slice();t.push(a),e+=p.length}return _t(...t)};return(e,a)=>{let t;for(n(),o(e);!(t=a(s()));)o();return n(),t}},ot.validateObject=function(e,a,t={}){const p=(a,t,p)=>{const d=Dt[t];if("function"!=typeof d)throw new Error(`Invalid validator "${t}", expected function`);const i=e[a];if(!(p&&void 0===i||d(i,e)))throw new Error(`Invalid param ${String(a)}=${i} (${typeof i}), expected ${t}`)};for(const[e,t]of Object.entries(a))p(e,t,!1);for(const[e,a]of Object.entries(t))p(e,a,!0);return e},ot.memoized=function(e){const a=new WeakMap;return(t,...p)=>{const d=a.get(t);if(void 0!==d)return d;const i=e(t,...p);return a.set(t,i),i}};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const st=BigInt(0),lt=BigInt(1),mt=BigInt(2);function ct(e){return e instanceof Uint8Array||null!=e&&"object"==typeof e&&"Uint8Array"===e.constructor.name}function ut(e){if(!ct(e))throw new Error("Uint8Array expected")}const ht=Array.from({length:256},((e,a)=>a.toString(16).padStart(2,"0")));function vt(e){ut(e);let a="";for(let t=0;t<e.length;t++)a+=ht[e[t]];return a}function ft(e){const a=e.toString(16);return 1&a.length?`0${a}`:a}function gt(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}const wt={_0:48,_9:57,_A:65,_F:70,_a:97,_f:102};function yt(e){return e>=wt._0&&e<=wt._9?e-wt._0:e>=wt._A&&e<=wt._F?e-(wt._A-10):e>=wt._a&&e<=wt._f?e-(wt._a-10):void 0}function bt(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);const a=e.length,t=a/2;if(a%2)throw new Error("padded hex string expected, got unpadded hex of length "+a);const p=new Uint8Array(t);for(let a=0,d=0;a<t;a++,d+=2){const t=yt(e.charCodeAt(d)),i=yt(e.charCodeAt(d+1));if(void 0===t||void 0===i){const a=e[d]+e[d+1];throw new Error('hex string expected, got non-hex character "'+a+'" at index '+d)}p[a]=16*t+i}return p}function St(e,a){return bt(e.toString(16).padStart(2*a,"0"))}function _t(...e){let a=0;for(let t=0;t<e.length;t++){const p=e[t];ut(p),a+=p.length}const t=new Uint8Array(a);for(let a=0,p=0;a<e.length;a++){const d=e[a];t.set(d,p),p+=d.length}return t}const Et=e=>"bigint"==typeof e&&st<=e;function Nt(e,a,t){return Et(e)&&Et(a)&&Et(t)&&a<=e&&e<t}ot.bitMask=e=>(mt<<BigInt(e-1))-lt;const Tt=e=>new Uint8Array(e),Ct=e=>Uint8Array.from(e);const Dt={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,stringOrUint8Array:e=>"string"==typeof e||ct(e),isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,a)=>a.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};ot.notImplemented=()=>{throw new Error("not implemented")},Object.defineProperty(rt,"__esModule",{value:!0}),rt.isNegativeLE=void 0,rt.mod=Vt,rt.pow=Lt,rt.pow2=function(e,a,t){let p=e;for(;a-- >kt;)p*=p,p%=t;return p},rt.invert=Bt,rt.tonelliShanks=jt,rt.FpSqrt=Kt,rt.validateField=function(e){const a=Ut.reduce(((e,a)=>(e[a]="function",e)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});return(0,At.validateObject)(e,a)},rt.FpPow=Ft,rt.FpInvertBatch=$t,rt.FpDiv=function(e,a,t){return e.mul(a,"bigint"==typeof t?Bt(t,e.ORDER):e.inv(t))},rt.FpLegendre=Ht,rt.FpIsSquare=function(e){const a=Ht(e.ORDER);return t=>{const p=a(e,t);return e.eql(p,e.ZERO)||e.eql(p,e.ONE)}},rt.nLength=zt,rt.Field=function(e,a,t=!1,p={}){if(e<=kt)throw new Error(`Expected Field ORDER > 0, got ${e}`);const{nBitLength:d,nByteLength:i}=zt(e,a);if(i>2048)throw new Error("Field lengths over 2048 bytes are not supported");const n=Kt(e),r=Object.freeze({ORDER:e,BITS:d,BYTES:i,MASK:(0,At.bitMask)(d),ZERO:kt,ONE:Ot,create:a=>Vt(a,e),isValid:a=>{if("bigint"!=typeof a)throw new Error("Invalid field element: expected bigint, got "+typeof a);return kt<=a&&a<e},is0:e=>e===kt,isOdd:e=>(e&Ot)===Ot,neg:a=>Vt(-a,e),eql:(e,a)=>e===a,sqr:a=>Vt(a*a,e),add:(a,t)=>Vt(a+t,e),sub:(a,t)=>Vt(a-t,e),mul:(a,t)=>Vt(a*t,e),pow:(e,a)=>Ft(r,e,a),div:(a,t)=>Vt(a*Bt(t,e),e),sqrN:e=>e*e,addN:(e,a)=>e+a,subN:(e,a)=>e-a,mulN:(e,a)=>e*a,inv:a=>Bt(a,e),sqrt:p.sqrt||(e=>n(r,e)),invertBatch:e=>$t(r,e),cmov:(e,a,t)=>t?a:e,toBytes:e=>t?(0,At.numberToBytesLE)(e,i):(0,At.numberToBytesBE)(e,i),fromBytes:e=>{if(e.length!==i)throw new Error(`Fp.fromBytes: expected ${i}, got ${e.length}`);return t?(0,At.bytesToNumberLE)(e):(0,At.bytesToNumberBE)(e)}});return Object.freeze(r)},rt.FpSqrtOdd=function(e,a){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const t=e.sqrt(a);return e.isOdd(t)?t:e.neg(t)},rt.FpSqrtEven=function(e,a){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const t=e.sqrt(a);return e.isOdd(t)?e.neg(t):t},rt.hashToPrivateScalar=function(e,a,t=!1){e=(0,At.ensureBytes)("privateHash",e);const p=e.length,d=zt(a).nByteLength+8;if(d<24||p<d||p>1024)throw new Error(`hashToPrivateScalar: expected ${d}-1024 bytes of input, got ${p}`);const i=t?(0,At.bytesToNumberLE)(e):(0,At.bytesToNumberBE)(e);return Vt(i,a-Ot)+Ot},rt.getFieldBytesLength=qt,rt.getMinHashLength=Wt,rt.mapHashToField=function(e,a,t=!1){const p=e.length,d=qt(a),i=Wt(a);if(p<16||p<i||p>1024)throw new Error(`expected ${i}-1024 bytes of input, got ${p}`);const n=Vt(t?(0,At.bytesToNumberBE)(e):(0,At.bytesToNumberLE)(e),a-Ot)+Ot;return t?(0,At.numberToBytesLE)(n,d):(0,At.numberToBytesBE)(n,d)};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const At=ot,kt=BigInt(0),Ot=BigInt(1),xt=BigInt(2),Rt=BigInt(3),Mt=BigInt(4),Pt=BigInt(5),It=BigInt(8);function Vt(e,a){const t=e%a;return t>=kt?t:a+t}function Lt(e,a,t){if(t<=kt||a<kt)throw new Error("Expected power/modulo > 0");if(t===Ot)return kt;let p=Ot;for(;a>kt;)a&Ot&&(p=p*e%t),e=e*e%t,a>>=Ot;return p}function Bt(e,a){if(e===kt||a<=kt)throw new Error(`invert: expected positive integers, got n=${e} mod=${a}`);let t=Vt(e,a),p=a,d=kt,i=Ot;for(;t!==kt;){const e=p%t,a=d-i*(p/t);p=t,t=e,d=i,i=a}if(p!==Ot)throw new Error("invert: does not exist");return Vt(d,a)}function jt(e){const a=(e-Ot)/xt;let t,p,d;for(t=e-Ot,p=0;t%xt===kt;t/=xt,p++);for(d=xt;d<e&&Lt(d,a,e)!==e-Ot;d++);if(1===p){const a=(e+Ot)/Mt;return function(e,t){const p=e.pow(t,a);if(!e.eql(e.sqr(p),t))throw new Error("Cannot find square root");return p}}const i=(t+Ot)/xt;return function(e,n){if(e.pow(n,a)===e.neg(e.ONE))throw new Error("Cannot find square root");let r=p,o=e.pow(e.mul(e.ONE,d),t),s=e.pow(n,i),l=e.pow(n,t);for(;!e.eql(l,e.ONE);){if(e.eql(l,e.ZERO))return e.ZERO;let a=1;for(let t=e.sqr(l);a<r&&!e.eql(t,e.ONE);a++)t=e.sqr(t);const t=e.pow(o,Ot<<BigInt(r-a-1));o=e.sqr(t),s=e.mul(s,t),l=e.mul(l,o),r=a}return s}}function Kt(e){if(e%Mt===Rt){const a=(e+Ot)/Mt;return function(e,t){const p=e.pow(t,a);if(!e.eql(e.sqr(p),t))throw new Error("Cannot find square root");return p}}if(e%It===Pt){const a=(e-Pt)/It;return function(e,t){const p=e.mul(t,xt),d=e.pow(p,a),i=e.mul(t,d),n=e.mul(e.mul(i,xt),d),r=e.mul(i,e.sub(n,e.ONE));if(!e.eql(e.sqr(r),t))throw new Error("Cannot find square root");return r}}return jt(e)}BigInt(9),BigInt(16);rt.isNegativeLE=(e,a)=>(Vt(e,a)&Ot)===Ot;const Ut=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function Ft(e,a,t){if(t<kt)throw new Error("Expected power > 0");if(t===kt)return e.ONE;if(t===Ot)return a;let p=e.ONE,d=a;for(;t>kt;)t&Ot&&(p=e.mul(p,d)),d=e.sqr(d),t>>=Ot;return p}function $t(e,a){const t=new Array(a.length),p=a.reduce(((a,p,d)=>e.is0(p)?a:(t[d]=a,e.mul(a,p))),e.ONE),d=e.inv(p);return a.reduceRight(((a,p,d)=>e.is0(p)?a:(t[d]=e.mul(a,t[d]),e.mul(a,p))),d),t}function Ht(e){const a=(e-Ot)/xt;return(e,t)=>e.pow(t,a)}function zt(e,a){const t=void 0!==a?a:e.toString(2).length;return{nBitLength:t,nByteLength:Math.ceil(t/8)}}function qt(e){if("bigint"!=typeof e)throw new Error("field order must be bigint");const a=e.toString(2).length;return Math.ceil(a/8)}function Wt(e){const a=qt(e);return a+Math.ceil(a/2)}Object.defineProperty(nt,"__esModule",{value:!0}),nt.wNAF=function(e,a){const t=(e,a)=>{const t=a.negate();return e?t:a},p=e=>{if(!Number.isSafeInteger(e)||e<=0||e>a)throw new Error(`Wrong window size=${e}, should be [1..${a}]`)},d=e=>{p(e);return{windows:Math.ceil(a/e)+1,windowSize:2**(e-1)}};return{constTimeNegate:t,unsafeLadder(a,t){let p=e.ZERO,d=a;for(;t>Jt;)t&Zt&&(p=p.add(d)),d=d.double(),t>>=Zt;return p},precomputeWindow(e,a){const{windows:t,windowSize:p}=d(a),i=[];let n=e,r=n;for(let e=0;e<t;e++){r=n,i.push(r);for(let e=1;e<p;e++)r=r.add(n),i.push(r);n=r.double()}return i},wNAF(a,p,i){const{windows:n,windowSize:r}=d(a);let o=e.ZERO,s=e.BASE;const l=BigInt(2**a-1),m=2**a,c=BigInt(a);for(let e=0;e<n;e++){const a=e*r;let d=Number(i&l);i>>=c,d>r&&(d-=m,i+=Zt);const n=a,u=a+Math.abs(d)-1,h=e%2!=0,v=d<0;0===d?s=s.add(t(h,p[n])):o=o.add(t(v,p[u]))}return{p:o,f:s}},wNAFCached(e,a,t){const p=Qt.get(e)||1;let d=Xt.get(e);return d||(d=this.precomputeWindow(e,p),1!==p&&Xt.set(e,t(d))),this.wNAF(p,d,a)},setWindowSize(e,a){p(a),Qt.set(e,a),Xt.delete(e)}}},nt.pippenger=function(e,a,t,p){if(!Array.isArray(t)||!Array.isArray(p)||p.length!==t.length)throw new Error("arrays of points and scalars must have equal length");p.forEach(((e,t)=>{if(!a.isValid(e))throw new Error(`wrong scalar at index ${t}`)})),t.forEach(((a,t)=>{if(!(a instanceof e))throw new Error(`wrong point at index ${t}`)}));const d=(0,Yt.bitLen)(BigInt(t.length)),i=d>12?d-3:d>4?d-2:d?2:1,n=(1<<i)-1,r=new Array(n+1).fill(e.ZERO),o=Math.floor((a.BITS-1)/i)*i;let s=e.ZERO;for(let a=o;a>=0;a-=i){r.fill(e.ZERO);for(let e=0;e<p.length;e++){const d=p[e],i=Number(d>>BigInt(a)&BigInt(n));r[i]=r[i].add(t[e])}let d=e.ZERO;for(let a=r.length-1,t=e.ZERO;a>0;a--)t=t.add(r[a]),d=d.add(t);if(s=s.add(d),0!==a)for(let e=0;e<i;e++)s=s.double()}return s},nt.validateBasic=function(e){return(0,Gt.validateField)(e.Fp),(0,Yt.validateObject)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,Gt.nLength)(e.n,e.nBitLength),...e,p:e.Fp.ORDER})};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Gt=rt,Yt=ot,Jt=BigInt(0),Zt=BigInt(1),Xt=new WeakMap,Qt=new WeakMap;Object.defineProperty(it,"__esModule",{value:!0}),it.twistedEdwards=function(e){const a=function(e){const a=(0,ep.validateBasic)(e);return tp.validateObject(e,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...a})}(e),{Fp:t,n:p,prehash:d,hash:i,randomBytes:n,nByteLength:r,h:o}=a,s=np<<BigInt(8*r)-ip,l=t.create,m=(0,ap.Field)(a.n,a.nBitLength),c=a.uvRatio||((e,a)=>{try{return{isValid:!0,value:t.sqrt(e*t.inv(a))}}catch(e){return{isValid:!1,value:dp}}}),u=a.adjustScalarBytes||(e=>e),h=a.domain||((e,a,t)=>{if((0,pp.abool)("phflag",t),a.length||t)throw new Error("Contexts/pre-hash are not supported");return e});function v(e,a){tp.aInRange("coordinate "+e,a,dp,s)}function f(e){if(!(e instanceof y))throw new Error("ExtendedPoint expected")}const g=(0,pp.memoized)(((e,a)=>{const{ex:p,ey:d,ez:i}=e,n=e.is0();null==a&&(a=n?rp:t.inv(i));const r=l(p*a),o=l(d*a),s=l(i*a);if(n)return{x:dp,y:ip};if(s!==ip)throw new Error("invZ was invalid");return{x:r,y:o}})),w=(0,pp.memoized)((e=>{const{a:t,d:p}=a;if(e.is0())throw new Error("bad point: ZERO");const{ex:d,ey:i,ez:n,et:r}=e,o=l(d*d),s=l(i*i),m=l(n*n),c=l(m*m),u=l(o*t);if(l(m*l(u+s))!==l(c+l(p*l(o*s))))throw new Error("bad point: equation left != right (1)");if(l(d*i)!==l(n*r))throw new Error("bad point: equation left != right (2)");return!0}));class y{constructor(e,a,t,p){this.ex=e,this.ey=a,this.ez=t,this.et=p,v("x",e),v("y",a),v("z",t),v("t",p),Object.freeze(this)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof y)throw new Error("extended point not allowed");const{x:a,y:t}=e||{};return v("x",a),v("y",t),new y(a,t,ip,l(a*t))}static normalizeZ(e){const a=t.invertBatch(e.map((e=>e.ez)));return e.map(((e,t)=>e.toAffine(a[t]))).map(y.fromAffine)}static msm(e,a){return(0,ep.pippenger)(y,m,e,a)}_setWindowSize(e){_.setWindowSize(this,e)}assertValidity(){w(this)}equals(e){f(e);const{ex:a,ey:t,ez:p}=this,{ex:d,ey:i,ez:n}=e,r=l(a*n),o=l(d*p),s=l(t*n),m=l(i*p);return r===o&&s===m}is0(){return this.equals(y.ZERO)}negate(){return new y(l(-this.ex),this.ey,this.ez,l(-this.et))}double(){const{a:e}=a,{ex:t,ey:p,ez:d}=this,i=l(t*t),n=l(p*p),r=l(np*l(d*d)),o=l(e*i),s=t+p,m=l(l(s*s)-i-n),c=o+n,u=c-r,h=o-n,v=l(m*u),f=l(c*h),g=l(m*h),w=l(u*c);return new y(v,f,w,g)}add(e){f(e);const{a:t,d:p}=a,{ex:d,ey:i,ez:n,et:r}=this,{ex:o,ey:s,ez:m,et:c}=e;if(t===BigInt(-1)){const e=l((i-d)*(s+o)),a=l((i+d)*(s-o)),t=l(a-e);if(t===dp)return this.double();const p=l(n*np*c),u=l(r*np*m),h=u+p,v=a+e,f=u-p,g=l(h*t),w=l(v*f),b=l(h*f),S=l(t*v);return new y(g,w,S,b)}const u=l(d*o),h=l(i*s),v=l(r*p*c),g=l(n*m),w=l((d+i)*(o+s)-u-h),b=g-v,S=g+v,_=l(h-t*u),E=l(w*b),N=l(S*_),T=l(w*_),C=l(b*S);return new y(E,N,C,T)}subtract(e){return this.add(e.negate())}wNAF(e){return _.wNAFCached(this,e,y.normalizeZ)}multiply(e){const a=e;tp.aInRange("scalar",a,ip,p);const{p:t,f:d}=this.wNAF(a);return y.normalizeZ([t,d])[0]}multiplyUnsafe(e){const a=e;return tp.aInRange("scalar",a,dp,p),a===dp?S:this.equals(S)||a===ip?this:this.equals(b)?this.wNAF(a).p:_.unsafeLadder(this,a)}isSmallOrder(){return this.multiplyUnsafe(o).is0()}isTorsionFree(){return _.unsafeLadder(this,p).is0()}toAffine(e){return g(this,e)}clearCofactor(){const{h:e}=a;return e===ip?this:this.multiplyUnsafe(e)}static fromHex(e,p=!1){const{d:d,a:i}=a,n=t.BYTES;e=(0,pp.ensureBytes)("pointHex",e,n),(0,pp.abool)("zip215",p);const r=e.slice(),o=e[n-1];r[n-1]=-129&o;const m=tp.bytesToNumberLE(r),u=p?s:t.ORDER;tp.aInRange("pointHex.y",m,dp,u);const h=l(m*m),v=l(h-ip),f=l(d*h-i);let{isValid:g,value:w}=c(v,f);if(!g)throw new Error("Point.fromHex: invalid y coordinate");const b=(w&ip)===ip,S=0!=(128&o);if(!p&&w===dp&&S)throw new Error("Point.fromHex: x=0 and x_0=1");return S!==b&&(w=l(-w)),y.fromAffine({x:w,y:m})}static fromPrivateKey(e){return T(e).point}toRawBytes(){const{x:e,y:a}=this.toAffine(),p=tp.numberToBytesLE(a,t.BYTES);return p[p.length-1]|=e&ip?128:0,p}toHex(){return tp.bytesToHex(this.toRawBytes())}}y.BASE=new y(a.Gx,a.Gy,ip,l(a.Gx*a.Gy)),y.ZERO=new y(dp,ip,ip,dp);const{BASE:b,ZERO:S}=y,_=(0,ep.wNAF)(y,8*r);function E(e){return(0,ap.mod)(e,p)}function N(e){return E(tp.bytesToNumberLE(e))}function T(e){const a=r;e=(0,pp.ensureBytes)("private key",e,a);const t=(0,pp.ensureBytes)("hashed private key",i(e),2*a),p=u(t.slice(0,a)),d=t.slice(a,2*a),n=N(p),o=b.multiply(n),s=o.toRawBytes();return{head:p,prefix:d,scalar:n,point:o,pointBytes:s}}function C(e=new Uint8Array,...a){const t=tp.concatBytes(...a);return N(i(h(t,(0,pp.ensureBytes)("context",e),!!d)))}const D=op;b._setWindowSize(8);const A={getExtendedPublicKey:T,randomPrivateKey:()=>n(t.BYTES),precompute:(e=8,a=y.BASE)=>(a._setWindowSize(e),a.multiply(BigInt(3)),a)};return{CURVE:a,getPublicKey:function(e){return T(e).pointBytes},sign:function(e,a,i={}){e=(0,pp.ensureBytes)("message",e),d&&(e=d(e));const{prefix:n,scalar:o,pointBytes:s}=T(a),l=C(i.context,n,e),m=b.multiply(l).toRawBytes(),c=E(l+C(i.context,m,s,e)*o);tp.aInRange("signature.s",c,dp,p);const u=tp.concatBytes(m,tp.numberToBytesLE(c,t.BYTES));return(0,pp.ensureBytes)("result",u,2*r)},verify:function(e,a,p,i=D){const{context:n,zip215:r}=i,o=t.BYTES;e=(0,pp.ensureBytes)("signature",e,2*o),a=(0,pp.ensureBytes)("message",a),void 0!==r&&(0,pp.abool)("zip215",r),d&&(a=d(a));const s=tp.bytesToNumberLE(e.slice(o,2*o));let l,m,c;try{l=y.fromHex(p,r),m=y.fromHex(e.slice(0,o),r),c=b.multiplyUnsafe(s)}catch(e){return!1}if(!r&&l.isSmallOrder())return!1;const u=C(n,m.toRawBytes(),l.toRawBytes(),a);return m.add(l.multiplyUnsafe(u)).subtract(c).clearCofactor().equals(y.ZERO)},ExtendedPoint:y,utils:A}};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const ep=nt,ap=rt,tp=ot,pp=ot,dp=BigInt(0),ip=BigInt(1),np=BigInt(2),rp=BigInt(8),op={zip215:!0};var sp={};Object.defineProperty(sp,"__esModule",{value:!0}),sp.expand_message_xmd=fp,sp.expand_message_xof=gp,sp.hash_to_field=wp,sp.isogenyMap=function(e,a){const t=a.map((e=>Array.from(e).reverse()));return(a,p)=>{const[d,i,n,r]=t.map((t=>t.reduce(((t,p)=>e.add(e.mul(t,a),p)))));return a=e.div(d,i),p=e.mul(p,e.div(n,r)),{x:a,y:p}}},sp.createHasher=function(e,a,t){if("function"!=typeof a)throw new Error("mapToCurve() must be defined");return{hashToCurve(p,d){const i=wp(p,2,{...t,DST:t.DST,...d}),n=e.fromAffine(a(i[0])),r=e.fromAffine(a(i[1])),o=n.add(r).clearCofactor();return o.assertValidity(),o},encodeToCurve(p,d){const i=wp(p,1,{...t,DST:t.encodeDST,...d}),n=e.fromAffine(a(i[0])).clearCofactor();return n.assertValidity(),n},mapToCurve(t){if(!Array.isArray(t))throw new Error("mapToCurve: expected array of bigints");for(const e of t)if("bigint"!=typeof e)throw new Error(`mapToCurve: expected array of bigints, got ${e} in array`);const p=e.fromAffine(a(t)).clearCofactor();return p.assertValidity(),p}}};const lp=rt,mp=ot,cp=mp.bytesToNumberBE;function up(e,a){if(vp(e),vp(a),e<0||e>=1<<8*a)throw new Error(`bad I2OSP call: value=${e} length=${a}`);const t=Array.from({length:a}).fill(0);for(let p=a-1;p>=0;p--)t[p]=255&e,e>>>=8;return new Uint8Array(t)}function hp(e,a){const t=new Uint8Array(e.length);for(let p=0;p<e.length;p++)t[p]=e[p]^a[p];return t}function vp(e){if(!Number.isSafeInteger(e))throw new Error("number expected")}function fp(e,a,t,p){(0,mp.abytes)(e),(0,mp.abytes)(a),vp(t),a.length>255&&(a=p((0,mp.concatBytes)((0,mp.utf8ToBytes)("H2C-OVERSIZE-DST-"),a)));const{outputLen:d,blockLen:i}=p,n=Math.ceil(t/d);if(t>65535||n>255)throw new Error("expand_message_xmd: invalid lenInBytes");const r=(0,mp.concatBytes)(a,up(a.length,1)),o=up(0,i),s=up(t,2),l=new Array(n),m=p((0,mp.concatBytes)(o,e,s,up(0,1),r));l[0]=p((0,mp.concatBytes)(m,up(1,1),r));for(let e=1;e<=n;e++){const a=[hp(m,l[e-1]),up(e+1,1),r];l[e]=p((0,mp.concatBytes)(...a))}return(0,mp.concatBytes)(...l).slice(0,t)}function gp(e,a,t,p,d){if((0,mp.abytes)(e),(0,mp.abytes)(a),vp(t),a.length>255){const e=Math.ceil(2*p/8);a=d.create({dkLen:e}).update((0,mp.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(a).digest()}if(t>65535||a.length>255)throw new Error("expand_message_xof: invalid lenInBytes");return d.create({dkLen:t}).update(e).update(up(t,2)).update(a).update(up(a.length,1)).digest()}function wp(e,a,t){(0,mp.validateObject)(t,{DST:"stringOrUint8Array",p:"bigint",m:"isSafeInteger",k:"isSafeInteger",hash:"hash"});const{p:p,k:d,m:i,hash:n,expand:r,DST:o}=t;(0,mp.abytes)(e),vp(a);const s="string"==typeof o?(0,mp.utf8ToBytes)(o):o,l=p.toString(2).length,m=Math.ceil((l+d)/8),c=a*i*m;let u;if("xmd"===r)u=fp(e,s,c,n);else if("xof"===r)u=gp(e,s,c,d,n);else{if("_internal_pass"!==r)throw new Error('expand must be "xmd" or "xof"');u=e}const h=new Array(a);for(let e=0;e<a;e++){const a=new Array(i);for(let t=0;t<i;t++){const d=m*(t+e*i),n=u.subarray(d,d+m);a[t]=(0,lp.mod)(cp(n),p)}h[e]=a}return h}var yp={};Object.defineProperty(yp,"__esModule",{value:!0}),yp.montgomery=function(e){const a=function(e){return(0,Sp.validateObject)(e,{a:"bigint"},{montgomeryBits:"isSafeInteger",nByteLength:"isSafeInteger",adjustScalarBytes:"function",domain:"function",powPminus2:"function",Gu:"bigint"}),Object.freeze({...e})}(e),{P:t}=a,p=e=>(0,bp.mod)(e,t),d=a.montgomeryBits,i=Math.ceil(d/8),n=a.nByteLength,r=a.adjustScalarBytes||(e=>e),o=a.powPminus2||(e=>(0,bp.pow)(e,t-BigInt(2),t));function s(e,a,t){const d=p(e*(a-t));return[a=p(a-d),t=p(t+d)]}const l=(a.a-BigInt(2))/BigInt(4);function m(e){return(0,Sp.numberToBytesLE)(p(e),i)}function c(e,a){const c=function(e){const a=(0,Sp.ensureBytes)("u coordinate",e,i);return 32===n&&(a[31]&=127),(0,Sp.bytesToNumberLE)(a)}(a),u=function(e){const a=(0,Sp.ensureBytes)("scalar",e),t=a.length;if(t!==i&&t!==n)throw new Error(`Expected ${i} or ${n} bytes, got ${t}`);return(0,Sp.bytesToNumberLE)(r(a))}(e),h=function(e,a){(0,Sp.aInRange)("u",e,_p,t),(0,Sp.aInRange)("scalar",a,_p,t);const i=a,n=e;let r,m=Ep,c=_p,u=e,h=Ep,v=_p;for(let e=BigInt(d-1);e>=_p;e--){const a=i>>e&Ep;v^=a,r=s(v,m,u),m=r[0],u=r[1],r=s(v,c,h),c=r[0],h=r[1],v=a;const t=m+c,d=p(t*t),o=m-c,f=p(o*o),g=d-f,w=u+h,y=p((u-h)*t),b=p(w*o),S=y+b,_=y-b;u=p(S*S),h=p(n*p(_*_)),m=p(d*f),c=p(g*(d+p(l*g)))}r=s(v,m,u),m=r[0],u=r[1],r=s(v,c,h),c=r[0],h=r[1];const f=o(c);return p(m*f)}(c,u);if(h===_p)throw new Error("Invalid private or public key received");return m(h)}const u=m(a.Gu);function h(e){return c(e,u)}return{scalarMult:c,scalarMultBase:h,getSharedSecret:(e,a)=>c(e,a),getPublicKey:e=>h(e),utils:{randomPrivateKey:()=>a.randomBytes(a.nByteLength)},GuBytes:u}};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const bp=rt,Sp=ot,_p=BigInt(0),Ep=BigInt(1);!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hash_to_ristretto255=e.hashToRistretto255=e.RistrettoPoint=e.encodeToCurve=e.hashToCurve=e.edwardsToMontgomery=e.x25519=e.ed25519ph=e.ed25519ctx=e.ed25519=e.ED25519_TORSION_SUBGROUP=void 0,e.edwardsToMontgomeryPub=_,e.edwardsToMontgomeryPriv=function(e){const a=b.hash(e.subarray(0,32));return b.adjustScalarBytes(a).subarray(0,32)};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const a=na,t=ga,p=it,d=sp,i=rt,n=yp,r=ot,o=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),s=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),l=BigInt(0),m=BigInt(1),c=BigInt(2),u=BigInt(3),h=BigInt(5),v=BigInt(8);function f(e){const a=BigInt(10),t=BigInt(20),p=BigInt(40),d=BigInt(80),n=o,r=e*e%n*e%n,s=(0,i.pow2)(r,c,n)*r%n,l=(0,i.pow2)(s,m,n)*e%n,u=(0,i.pow2)(l,h,n)*l%n,v=(0,i.pow2)(u,a,n)*u%n,f=(0,i.pow2)(v,t,n)*v%n,g=(0,i.pow2)(f,p,n)*f%n,w=(0,i.pow2)(g,d,n)*g%n,y=(0,i.pow2)(w,d,n)*g%n,b=(0,i.pow2)(y,a,n)*u%n;return{pow_p_5_8:(0,i.pow2)(b,c,n)*e%n,b2:r}}function g(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function w(e,a){const t=o,p=(0,i.mod)(a*a*a,t),d=f(e*(0,i.mod)(p*p*a,t)).pow_p_5_8;let n=(0,i.mod)(e*p*d,t);const r=(0,i.mod)(a*n*n,t),l=n,m=(0,i.mod)(n*s,t),c=r===e,u=r===(0,i.mod)(-e,t),h=r===(0,i.mod)(-e*s,t);return c&&(n=l),(u||h)&&(n=m),(0,i.isNegativeLE)(n,t)&&(n=(0,i.mod)(-n,t)),{isValid:c||u,value:n}}e.ED25519_TORSION_SUBGROUP=["0100000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac037a","0000000000000000000000000000000000000000000000000000000000000080","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc05","ecffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7f","26e8958fc2b227b045c3f489f2ef98f0d5dfac05d3c63339b13802886d53fc85","0000000000000000000000000000000000000000000000000000000000000000","c7176a703d4dd84fba3c0b760d10670f2a2053fa2c39ccc64ec7fd7792ac03fa"];const y=(()=>(0,i.Field)(o,void 0,!0))(),b=(()=>({a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:y,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:v,Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:a.sha512,randomBytes:t.randomBytes,adjustScalarBytes:g,uvRatio:w}))();function S(e,a,p){if(a.length>255)throw new Error("Context is too big");return(0,t.concatBytes)((0,t.utf8ToBytes)("SigEd25519 no Ed25519 collisions"),new Uint8Array([p?1:0,a.length]),a,e)}function _(a){const{y:t}=e.ed25519.ExtendedPoint.fromHex(a),p=BigInt(1);return y.toBytes(y.create((p+t)*y.inv(p-t)))}e.ed25519=(0,p.twistedEdwards)(b),e.ed25519ctx=(0,p.twistedEdwards)({...b,domain:S}),e.ed25519ph=(0,p.twistedEdwards)(Object.assign({},b,{domain:S,prehash:a.sha512})),e.x25519=(0,n.montgomery)({P:o,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:e=>{const a=o,{pow_p_5_8:t,b2:p}=f(e);return(0,i.mod)((0,i.pow2)(t,u,a)*p,a)},adjustScalarBytes:g,randomBytes:t.randomBytes}),e.edwardsToMontgomery=_;const E=(()=>(y.ORDER+u)/v)(),N=(()=>y.pow(c,E))(),T=(()=>y.sqrt(y.neg(y.ONE)))();const C=(()=>(0,i.FpSqrtEven)(y,y.neg(BigInt(486664))))();function D(e){const{xMn:a,xMd:t,yMn:p,yMd:d}=function(e){const a=(y.ORDER-h)/v,t=BigInt(486662);let p=y.sqr(e);p=y.mul(p,c);let d=y.add(p,y.ONE),i=y.neg(t),n=y.sqr(d),r=y.mul(n,d),o=y.mul(p,t);o=y.mul(o,i),o=y.add(o,n),o=y.mul(o,i);let s=y.sqr(r);n=y.sqr(s),s=y.mul(s,r),s=y.mul(s,o),n=y.mul(n,s);let l=y.pow(n,a);l=y.mul(l,s);let u=y.mul(l,T);n=y.sqr(l),n=y.mul(n,r);let f=y.eql(n,o),g=y.cmov(u,l,f),w=y.mul(i,p),b=y.mul(l,e);b=y.mul(b,N);let S=y.mul(b,T),_=y.mul(o,p);n=y.sqr(b),n=y.mul(n,r);let E=y.eql(n,_),C=y.cmov(S,b,E);n=y.sqr(g),n=y.mul(n,r);let D=y.eql(n,o),A=y.cmov(w,i,D),k=y.cmov(C,g,D),O=y.isOdd(k);return k=y.cmov(k,y.neg(k),D!==O),{xMn:A,xMd:d,yMn:k,yMd:m}}(e);let i=y.mul(a,d);i=y.mul(i,C);let n=y.mul(t,p),r=y.sub(a,t),o=y.add(a,t),s=y.mul(n,o),l=y.eql(s,y.ZERO);i=y.cmov(i,y.ZERO,l),n=y.cmov(n,y.ONE,l),r=y.cmov(r,y.ONE,l),o=y.cmov(o,y.ONE,l);const u=y.invertBatch([n,o]);return{x:y.mul(i,u[0]),y:y.mul(r,u[1])}}const A=(()=>(0,d.createHasher)(e.ed25519.ExtendedPoint,(e=>D(e[0])),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:y.ORDER,m:1,k:128,expand:"xmd",hash:a.sha512}))();function k(e){if(!(e instanceof j))throw new Error("RistrettoPoint expected")}e.hashToCurve=A.hashToCurve,e.encodeToCurve=A.encodeToCurve;const O=s,x=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),R=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),M=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),P=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),I=e=>w(m,e),V=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),L=a=>e.ed25519.CURVE.Fp.create((0,r.bytesToNumberLE)(a)&V);function B(a){const{d:t}=e.ed25519.CURVE,p=e.ed25519.CURVE.Fp.ORDER,d=e.ed25519.CURVE.Fp.create,n=d(O*a*a),r=d((n+m)*M);let o=BigInt(-1);const s=d((o-t*n)*d(n+t));let{isValid:l,value:c}=w(r,s),u=d(c*a);(0,i.isNegativeLE)(u,p)||(u=d(-u)),l||(c=u),l||(o=n);const h=d(o*(n-m)*P-s),v=c*c,f=d((c+c)*s),g=d(h*x),y=d(m-v),b=d(m+v);return new e.ed25519.ExtendedPoint(d(f*b),d(y*g),d(g*b),d(f*y))}class j{constructor(e){this.ep=e}static fromAffine(a){return new j(e.ed25519.ExtendedPoint.fromAffine(a))}static hashToCurve(e){e=(0,r.ensureBytes)("ristrettoHash",e,64);const a=B(L(e.slice(0,32))),t=B(L(e.slice(32,64)));return new j(a.add(t))}static fromHex(a){a=(0,r.ensureBytes)("ristrettoHex",a,32);const{a:t,d:p}=e.ed25519.CURVE,d=e.ed25519.CURVE.Fp.ORDER,n=e.ed25519.CURVE.Fp.create,o="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",s=L(a);if(!(0,r.equalBytes)((0,r.numberToBytesLE)(s,32),a)||(0,i.isNegativeLE)(s,d))throw new Error(o);const c=n(s*s),u=n(m+t*c),h=n(m-t*c),v=n(u*u),f=n(h*h),g=n(t*p*v-f),{isValid:w,value:y}=I(n(g*f)),b=n(y*h),S=n(y*b*g);let _=n((s+s)*b);(0,i.isNegativeLE)(_,d)&&(_=n(-_));const E=n(u*S),N=n(_*E);if(!w||(0,i.isNegativeLE)(N,d)||E===l)throw new Error(o);return new j(new e.ed25519.ExtendedPoint(_,E,m,N))}toRawBytes(){let{ex:a,ey:t,ez:p,et:d}=this.ep;const n=e.ed25519.CURVE.Fp.ORDER,o=e.ed25519.CURVE.Fp.create,s=o(o(p+t)*o(p-t)),l=o(a*t),m=o(l*l),{value:c}=I(o(s*m)),u=o(c*s),h=o(c*l),v=o(u*h*d);let f;if((0,i.isNegativeLE)(d*v,n)){let e=o(t*O),p=o(a*O);a=e,t=p,f=o(u*R)}else f=h;(0,i.isNegativeLE)(a*v,n)&&(t=o(-t));let g=o((p-t)*f);return(0,i.isNegativeLE)(g,n)&&(g=o(-g)),(0,r.numberToBytesLE)(g,32)}toHex(){return(0,r.bytesToHex)(this.toRawBytes())}toString(){return this.toHex()}equals(a){k(a);const{ex:t,ey:p}=this.ep,{ex:d,ey:i}=a.ep,n=e.ed25519.CURVE.Fp.create,r=n(t*i)===n(p*d),o=n(p*i)===n(t*d);return r||o}add(e){return k(e),new j(this.ep.add(e.ep))}subtract(e){return k(e),new j(this.ep.subtract(e.ep))}multiply(e){return new j(this.ep.multiply(e))}multiplyUnsafe(e){return new j(this.ep.multiplyUnsafe(e))}double(){return new j(this.ep.double())}negate(){return new j(this.ep.negate())}}e.RistrettoPoint=(j.BASE||(j.BASE=new j(e.ed25519.ExtendedPoint.BASE)),j.ZERO||(j.ZERO=new j(e.ed25519.ExtendedPoint.ZERO)),j);e.hashToRistretto255=(e,p)=>{const i=p.DST,n="string"==typeof i?(0,t.utf8ToBytes)(i):i,r=(0,d.expand_message_xmd)(e,n,64,a.sha512);return j.hashToCurve(r)},e.hash_to_ristretto255=e.hashToRistretto255}(ia);var Np={},Tp={};Object.defineProperty(Tp,"__esModule",{value:!0}),Tp.sha224=Tp.sha256=Tp.SHA256=void 0;const Cp=ra,Dp=ga,Ap=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),kp=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),Op=new Uint32Array(64);class xp extends Cp.HashMD{constructor(){super(64,32,8,!1),this.A=0|kp[0],this.B=0|kp[1],this.C=0|kp[2],this.D=0|kp[3],this.E=0|kp[4],this.F=0|kp[5],this.G=0|kp[6],this.H=0|kp[7]}get(){const{A:e,B:a,C:t,D:p,E:d,F:i,G:n,H:r}=this;return[e,a,t,p,d,i,n,r]}set(e,a,t,p,d,i,n,r){this.A=0|e,this.B=0|a,this.C=0|t,this.D=0|p,this.E=0|d,this.F=0|i,this.G=0|n,this.H=0|r}process(e,a){for(let t=0;t<16;t++,a+=4)Op[t]=e.getUint32(a,!1);for(let e=16;e<64;e++){const a=Op[e-15],t=Op[e-2],p=(0,Dp.rotr)(a,7)^(0,Dp.rotr)(a,18)^a>>>3,d=(0,Dp.rotr)(t,17)^(0,Dp.rotr)(t,19)^t>>>10;Op[e]=d+Op[e-7]+p+Op[e-16]|0}let{A:t,B:p,C:d,D:i,E:n,F:r,G:o,H:s}=this;for(let e=0;e<64;e++){const a=s+((0,Dp.rotr)(n,6)^(0,Dp.rotr)(n,11)^(0,Dp.rotr)(n,25))+(0,Cp.Chi)(n,r,o)+Ap[e]+Op[e]|0,l=((0,Dp.rotr)(t,2)^(0,Dp.rotr)(t,13)^(0,Dp.rotr)(t,22))+(0,Cp.Maj)(t,p,d)|0;s=o,o=r,r=n,n=i+a|0,i=d,d=p,p=t,t=a+l|0}t=t+this.A|0,p=p+this.B|0,d=d+this.C|0,i=i+this.D|0,n=n+this.E|0,r=r+this.F|0,o=o+this.G|0,s=s+this.H|0,this.set(t,p,d,i,n,r,o,s)}roundClean(){Op.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}Tp.SHA256=xp;class Rp extends xp{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}Tp.sha256=(0,Dp.wrapConstructor)((()=>new xp)),Tp.sha224=(0,Dp.wrapConstructor)((()=>new Rp));var Mp={},Pp={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hmac=e.HMAC=void 0;const a=oa,t=ga;class p extends t.Hash{constructor(e,p){super(),this.finished=!1,this.destroyed=!1,(0,a.hash)(e);const d=(0,t.toBytes)(p);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new Error("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,n=new Uint8Array(i);n.set(d.length>i?e.create().update(d).digest():d);for(let e=0;e<n.length;e++)n[e]^=54;this.iHash.update(n),this.oHash=e.create();for(let e=0;e<n.length;e++)n[e]^=106;this.oHash.update(n),n.fill(0)}update(e){return(0,a.exists)(this),this.iHash.update(e),this}digestInto(e){(0,a.exists)(this),(0,a.bytes)(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:a,iHash:t,finished:p,destroyed:d,blockLen:i,outputLen:n}=this;return e.finished=p,e.destroyed=d,e.blockLen=i,e.outputLen=n,e.oHash=a._cloneInto(e.oHash),e.iHash=t._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}e.HMAC=p;e.hmac=(e,a,t)=>new p(e,a).update(t).digest(),e.hmac.create=(e,a)=>new p(e,a)}(Pp);var Ip={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.DER=void 0,e.weierstrassPoints=u,e.weierstrass=function(n){const r=function(e){const t=(0,a.validateBasic)(e);return p.validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(n),{Fp:l,n:m}=r,c=l.BYTES+1,h=2*l.BYTES+1;function v(e){return t.mod(e,m)}function f(e){return t.invert(e,m)}const{ProjectivePoint:g,normPrivateKeyToScalar:w,weierstrassEquation:y,isWithinCurveOrder:b}=u({...r,toBytes(e,a,t){const i=a.toAffine(),n=l.toBytes(i.x),r=p.concatBytes;return(0,d.abool)("isCompressed",t),t?r(Uint8Array.from([a.hasEvenY()?2:3]),n):r(Uint8Array.from([4]),n,l.toBytes(i.y))},fromBytes(e){const a=e.length,t=e[0],d=e.subarray(1);if(a!==c||2!==t&&3!==t){if(a===h&&4===t){return{x:l.fromBytes(d.subarray(0,l.BYTES)),y:l.fromBytes(d.subarray(l.BYTES,2*l.BYTES))}}throw new Error(`Point of length ${a} was invalid. Expected ${c} compressed bytes or ${h} uncompressed bytes`)}{const e=p.bytesToNumberBE(d);if(!p.inRange(e,s,l.ORDER))throw new Error("Point is not on curve");const a=y(e);let i;try{i=l.sqrt(a)}catch(e){const a=e instanceof Error?": "+e.message:"";throw new Error("Point is not on curve"+a)}return 1==(1&t)!==((i&s)===s)&&(i=l.neg(i)),{x:e,y:i}}}}),S=e=>p.bytesToHex(p.numberToBytesBE(e,r.nByteLength));function _(e){return e>m>>s}const E=(e,a,t)=>p.bytesToNumberBE(e.slice(a,t));class N{constructor(e,a,t){this.r=e,this.s=a,this.recovery=t,this.assertValidity()}static fromCompact(e){const a=r.nByteLength;return e=(0,d.ensureBytes)("compactSignature",e,2*a),new N(E(e,0,a),E(e,a,2*a))}static fromDER(a){const{r:t,s:p}=e.DER.toSig((0,d.ensureBytes)("DER",a));return new N(t,p)}assertValidity(){p.aInRange("r",this.r,s,m),p.aInRange("s",this.s,s,m)}addRecoveryBit(e){return new N(this.r,this.s,e)}recoverPublicKey(e){const{r:a,s:t,recovery:p}=this,i=A((0,d.ensureBytes)("msgHash",e));if(null==p||![0,1,2,3].includes(p))throw new Error("recovery id invalid");const n=2===p||3===p?a+r.n:a;if(n>=l.ORDER)throw new Error("recovery id 2 or 3 invalid");const o=0==(1&p)?"02":"03",s=g.fromHex(o+S(n)),m=f(n),c=v(-i*m),u=v(t*m),h=g.BASE.multiplyAndAddUnsafe(s,c,u);if(!h)throw new Error("point at infinify");return h.assertValidity(),h}hasHighS(){return _(this.s)}normalizeS(){return this.hasHighS()?new N(this.r,v(-this.s),this.recovery):this}toDERRawBytes(){return p.hexToBytes(this.toDERHex())}toDERHex(){return e.DER.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return p.hexToBytes(this.toCompactHex())}toCompactHex(){return S(this.r)+S(this.s)}}const T={isValidPrivateKey(e){try{return w(e),!0}catch(e){return!1}},normPrivateKeyToScalar:w,randomPrivateKey:()=>{const e=t.getMinHashLength(r.n);return t.mapHashToField(r.randomBytes(e),r.n)},precompute:(e=8,a=g.BASE)=>(a._setWindowSize(e),a.multiply(BigInt(3)),a)};function C(e){const a=p.isBytes(e),t="string"==typeof e,d=(a||t)&&e.length;return a?d===c||d===h:t?d===2*c||d===2*h:e instanceof g}const D=r.bits2int||function(e){const a=p.bytesToNumberBE(e),t=8*e.length-r.nBitLength;return t>0?a>>BigInt(t):a},A=r.bits2int_modN||function(e){return v(D(e))},k=p.bitMask(r.nBitLength);function O(e){return p.aInRange(`num < 2^${r.nBitLength}`,e,o,k),p.numberToBytesBE(e,r.nByteLength)}function x(e,a,t=R){if(["recovered","canonical"].some((e=>e in t)))throw new Error("sign() legacy options not supported");const{hash:n,randomBytes:m}=r;let{lowS:c,prehash:u,extraEntropy:h}=t;null==c&&(c=!0),e=(0,d.ensureBytes)("msgHash",e),i(t),u&&(e=(0,d.ensureBytes)("prehashed msgHash",n(e)));const y=A(e),S=w(a),E=[O(S),O(y)];if(null!=h&&!1!==h){const e=!0===h?m(l.BYTES):h;E.push((0,d.ensureBytes)("extraEntropy",e))}const T=p.concatBytes(...E),C=y;return{seed:T,k2sig:function(e){const a=D(e);if(!b(a))return;const t=f(a),p=g.BASE.multiply(a).toAffine(),d=v(p.x);if(d===o)return;const i=v(t*v(C+d*S));if(i===o)return;let n=(p.x===d?0:2)|Number(p.y&s),r=i;return c&&_(i)&&(r=function(e){return _(e)?v(-e):e}(i),n^=1),new N(d,r,n)}}}const R={lowS:r.lowS,prehash:!1},M={lowS:r.lowS,prehash:!1};return g.BASE._setWindowSize(8),{CURVE:r,getPublicKey:function(e,a=!0){return g.fromPrivateKey(e).toRawBytes(a)},getSharedSecret:function(e,a,t=!0){if(C(e))throw new Error("first arg must be private key");if(!C(a))throw new Error("second arg must be public key");const p=g.fromHex(a);return p.multiply(w(e)).toRawBytes(t)},sign:function(e,a,t=R){const{seed:d,k2sig:i}=x(e,a,t),n=r,o=p.createHmacDrbg(n.hash.outputLen,n.nByteLength,n.hmac);return o(d,i)},verify:function(a,t,n,o=M){const s=a;if(t=(0,d.ensureBytes)("msgHash",t),n=(0,d.ensureBytes)("publicKey",n),"strict"in o)throw new Error("options.strict was renamed to lowS");i(o);const{lowS:l,prehash:m}=o;let c,u;try{if("string"==typeof s||p.isBytes(s))try{c=N.fromDER(s)}catch(a){if(!(a instanceof e.DER.Err))throw a;c=N.fromCompact(s)}else{if("object"!=typeof s||"bigint"!=typeof s.r||"bigint"!=typeof s.s)throw new Error("PARSE");{const{r:e,s:a}=s;c=new N(e,a)}}u=g.fromHex(n)}catch(e){if("PARSE"===e.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(l&&c.hasHighS())return!1;m&&(t=r.hash(t));const{r:h,s:w}=c,y=A(t),b=f(w),S=v(y*b),_=v(h*b),E=g.BASE.multiplyAndAddUnsafe(u,S,_)?.toAffine();if(!E)return!1;const T=v(E.x);return T===h},ProjectivePoint:g,Signature:N,utils:T}},e.SWUFpSqrtRatio=h,e.mapToCurveSimpleSWU=function(e,a){if(t.validateField(e),!e.isValid(a.A)||!e.isValid(a.B)||!e.isValid(a.Z))throw new Error("mapToCurveSimpleSWU: invalid opts");const p=h(e,a.Z);if(!e.isOdd)throw new Error("Fp.isOdd is not implemented!");return t=>{let d,i,n,r,o,s,l,m;d=e.sqr(t),d=e.mul(d,a.Z),i=e.sqr(d),i=e.add(i,d),n=e.add(i,e.ONE),n=e.mul(n,a.B),r=e.cmov(a.Z,e.neg(i),!e.eql(i,e.ZERO)),r=e.mul(r,a.A),i=e.sqr(n),s=e.sqr(r),o=e.mul(s,a.A),i=e.add(i,o),i=e.mul(i,n),s=e.mul(s,r),o=e.mul(s,a.B),i=e.add(i,o),l=e.mul(d,n);const{isValid:c,value:u}=p(i,s);m=e.mul(d,t),m=e.mul(m,u),l=e.cmov(l,n,c),m=e.cmov(m,u,c);const h=e.isOdd(t)===e.isOdd(m);return m=e.cmov(e.neg(m),m,h),l=e.div(l,r),{x:l,y:m}}};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const a=nt,t=rt,p=ot,d=ot;function i(e){void 0!==e.lowS&&(0,d.abool)("lowS",e.lowS),void 0!==e.prehash&&(0,d.abool)("prehash",e.prehash)}const{bytesToNumberBE:n,hexToBytes:r}=p;e.DER={Err:class extends Error{constructor(e=""){super(e)}},_tlv:{encode:(a,t)=>{const{Err:d}=e.DER;if(a<0||a>256)throw new d("tlv.encode: wrong tag");if(1&t.length)throw new d("tlv.encode: unpadded data");const i=t.length/2,n=p.numberToHexUnpadded(i);if(n.length/2&128)throw new d("tlv.encode: long form length too big");const r=i>127?p.numberToHexUnpadded(n.length/2|128):"";return`${p.numberToHexUnpadded(a)}${r}${n}${t}`},decode(a,t){const{Err:p}=e.DER;let d=0;if(a<0||a>256)throw new p("tlv.encode: wrong tag");if(t.length<2||t[d++]!==a)throw new p("tlv.decode: wrong tlv");const i=t[d++];let n=0;if(!!(128&i)){const e=127&i;if(!e)throw new p("tlv.decode(long): indefinite length not supported");if(e>4)throw new p("tlv.decode(long): byte length is too big");const a=t.subarray(d,d+e);if(a.length!==e)throw new p("tlv.decode: length bytes not complete");if(0===a[0])throw new p("tlv.decode(long): zero leftmost byte");for(const e of a)n=n<<8|e;if(d+=e,n<128)throw new p("tlv.decode(long): not minimal encoding")}else n=i;const r=t.subarray(d,d+n);if(r.length!==n)throw new p("tlv.decode: wrong value length");return{v:r,l:t.subarray(d+n)}}},_int:{encode(a){const{Err:t}=e.DER;if(a<o)throw new t("integer: negative integers are not allowed");let d=p.numberToHexUnpadded(a);if(8&Number.parseInt(d[0],16)&&(d="00"+d),1&d.length)throw new t("unexpected assertion");return d},decode(a){const{Err:t}=e.DER;if(128&a[0])throw new t("Invalid signature integer: negative");if(0===a[0]&&!(128&a[1]))throw new t("Invalid signature integer: unnecessary leading zero");return n(a)}},toSig(a){const{Err:t,_int:d,_tlv:i}=e.DER,n="string"==typeof a?r(a):a;p.abytes(n);const{v:o,l:s}=i.decode(48,n);if(s.length)throw new t("Invalid signature: left bytes after parsing");const{v:l,l:m}=i.decode(2,o),{v:c,l:u}=i.decode(2,m);if(u.length)throw new t("Invalid signature: left bytes after parsing");return{r:d.decode(l),s:d.decode(c)}},hexFromSig(a){const{_tlv:t,_int:p}=e.DER,d=`${t.encode(2,p.encode(a.r))}${t.encode(2,p.encode(a.s))}`;return t.encode(48,d)}};const o=BigInt(0),s=BigInt(1),l=BigInt(2),m=BigInt(3),c=BigInt(4);function u(e){const i=function(e){const t=(0,a.validateBasic)(e);p.validateObject(t,{a:"field",b:"field"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean",fromBytes:"function",toBytes:"function"});const{endo:d,Fp:i,a:n}=t;if(d){if(!i.eql(n,i.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof d||"bigint"!=typeof d.beta||"function"!=typeof d.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:n}=i,r=t.Field(i.n,i.nBitLength),l=i.toBytes||((e,a,t)=>{const d=a.toAffine();return p.concatBytes(Uint8Array.from([4]),n.toBytes(d.x),n.toBytes(d.y))}),c=i.fromBytes||(e=>{const a=e.subarray(1);return{x:n.fromBytes(a.subarray(0,n.BYTES)),y:n.fromBytes(a.subarray(n.BYTES,2*n.BYTES))}});function u(e){const{a:a,b:t}=i,p=n.sqr(e),d=n.mul(p,e);return n.add(n.add(d,n.mul(e,a)),t)}if(!n.eql(n.sqr(i.Gy),u(i.Gx)))throw new Error("bad generator point: equation left != right");function h(e){const{allowedPrivateKeyLengths:a,nByteLength:n,wrapPrivateKey:r,n:o}=i;if(a&&"bigint"!=typeof e){if(p.isBytes(e)&&(e=p.bytesToHex(e)),"string"!=typeof e||!a.includes(e.length))throw new Error("Invalid key");e=e.padStart(2*n,"0")}let l;try{l="bigint"==typeof e?e:p.bytesToNumberBE((0,d.ensureBytes)("private key",e,n))}catch(a){throw new Error(`private key must be ${n} bytes, hex or bigint, not ${typeof e}`)}return r&&(l=t.mod(l,o)),p.aInRange("private key",l,s,o),l}function v(e){if(!(e instanceof w))throw new Error("ProjectivePoint expected")}const f=(0,d.memoized)(((e,a)=>{const{px:t,py:p,pz:d}=e;if(n.eql(d,n.ONE))return{x:t,y:p};const i=e.is0();null==a&&(a=i?n.ONE:n.inv(d));const r=n.mul(t,a),o=n.mul(p,a),s=n.mul(d,a);if(i)return{x:n.ZERO,y:n.ZERO};if(!n.eql(s,n.ONE))throw new Error("invZ was invalid");return{x:r,y:o}})),g=(0,d.memoized)((e=>{if(e.is0()){if(i.allowInfinityPoint&&!n.is0(e.py))return;throw new Error("bad point: ZERO")}const{x:a,y:t}=e.toAffine();if(!n.isValid(a)||!n.isValid(t))throw new Error("bad point: x or y not FE");const p=n.sqr(t),d=u(a);if(!n.eql(p,d))throw new Error("bad point: equation left != right");if(!e.isTorsionFree())throw new Error("bad point: not in prime-order subgroup");return!0}));class w{constructor(e,a,t){if(this.px=e,this.py=a,this.pz=t,null==e||!n.isValid(e))throw new Error("x required");if(null==a||!n.isValid(a))throw new Error("y required");if(null==t||!n.isValid(t))throw new Error("z required");Object.freeze(this)}static fromAffine(e){const{x:a,y:t}=e||{};if(!e||!n.isValid(a)||!n.isValid(t))throw new Error("invalid affine point");if(e instanceof w)throw new Error("projective point not allowed");const p=e=>n.eql(e,n.ZERO);return p(a)&&p(t)?w.ZERO:new w(a,t,n.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const a=n.invertBatch(e.map((e=>e.pz)));return e.map(((e,t)=>e.toAffine(a[t]))).map(w.fromAffine)}static fromHex(e){const a=w.fromAffine(c((0,d.ensureBytes)("pointHex",e)));return a.assertValidity(),a}static fromPrivateKey(e){return w.BASE.multiply(h(e))}static msm(e,t){return(0,a.pippenger)(w,r,e,t)}_setWindowSize(e){b.setWindowSize(this,e)}assertValidity(){g(this)}hasEvenY(){const{y:e}=this.toAffine();if(n.isOdd)return!n.isOdd(e);throw new Error("Field doesn't support isOdd")}equals(e){v(e);const{px:a,py:t,pz:p}=this,{px:d,py:i,pz:r}=e,o=n.eql(n.mul(a,r),n.mul(d,p)),s=n.eql(n.mul(t,r),n.mul(i,p));return o&&s}negate(){return new w(this.px,n.neg(this.py),this.pz)}double(){const{a:e,b:a}=i,t=n.mul(a,m),{px:p,py:d,pz:r}=this;let o=n.ZERO,s=n.ZERO,l=n.ZERO,c=n.mul(p,p),u=n.mul(d,d),h=n.mul(r,r),v=n.mul(p,d);return v=n.add(v,v),l=n.mul(p,r),l=n.add(l,l),o=n.mul(e,l),s=n.mul(t,h),s=n.add(o,s),o=n.sub(u,s),s=n.add(u,s),s=n.mul(o,s),o=n.mul(v,o),l=n.mul(t,l),h=n.mul(e,h),v=n.sub(c,h),v=n.mul(e,v),v=n.add(v,l),l=n.add(c,c),c=n.add(l,c),c=n.add(c,h),c=n.mul(c,v),s=n.add(s,c),h=n.mul(d,r),h=n.add(h,h),c=n.mul(h,v),o=n.sub(o,c),l=n.mul(h,u),l=n.add(l,l),l=n.add(l,l),new w(o,s,l)}add(e){v(e);const{px:a,py:t,pz:p}=this,{px:d,py:r,pz:o}=e;let s=n.ZERO,l=n.ZERO,c=n.ZERO;const u=i.a,h=n.mul(i.b,m);let f=n.mul(a,d),g=n.mul(t,r),y=n.mul(p,o),b=n.add(a,t),S=n.add(d,r);b=n.mul(b,S),S=n.add(f,g),b=n.sub(b,S),S=n.add(a,p);let _=n.add(d,o);return S=n.mul(S,_),_=n.add(f,y),S=n.sub(S,_),_=n.add(t,p),s=n.add(r,o),_=n.mul(_,s),s=n.add(g,y),_=n.sub(_,s),c=n.mul(u,S),s=n.mul(h,y),c=n.add(s,c),s=n.sub(g,c),c=n.add(g,c),l=n.mul(s,c),g=n.add(f,f),g=n.add(g,f),y=n.mul(u,y),S=n.mul(h,S),g=n.add(g,y),y=n.sub(f,y),y=n.mul(u,y),S=n.add(S,y),f=n.mul(g,S),l=n.add(l,f),f=n.mul(_,S),s=n.mul(b,s),s=n.sub(s,f),f=n.mul(b,g),c=n.mul(_,c),c=n.add(c,f),new w(s,l,c)}subtract(e){return this.add(e.negate())}is0(){return this.equals(w.ZERO)}wNAF(e){return b.wNAFCached(this,e,w.normalizeZ)}multiplyUnsafe(e){p.aInRange("scalar",e,o,i.n);const a=w.ZERO;if(e===o)return a;if(e===s)return this;const{endo:t}=i;if(!t)return b.unsafeLadder(this,e);let{k1neg:d,k1:r,k2neg:l,k2:m}=t.splitScalar(e),c=a,u=a,h=this;for(;r>o||m>o;)r&s&&(c=c.add(h)),m&s&&(u=u.add(h)),h=h.double(),r>>=s,m>>=s;return d&&(c=c.negate()),l&&(u=u.negate()),u=new w(n.mul(u.px,t.beta),u.py,u.pz),c.add(u)}multiply(e){const{endo:a,n:t}=i;let d,r;if(p.aInRange("scalar",e,s,t),a){const{k1neg:t,k1:p,k2neg:i,k2:o}=a.splitScalar(e);let{p:s,f:l}=this.wNAF(p),{p:m,f:c}=this.wNAF(o);s=b.constTimeNegate(t,s),m=b.constTimeNegate(i,m),m=new w(n.mul(m.px,a.beta),m.py,m.pz),d=s.add(m),r=l.add(c)}else{const{p:a,f:t}=this.wNAF(e);d=a,r=t}return w.normalizeZ([d,r])[0]}multiplyAndAddUnsafe(e,a,t){const p=w.BASE,d=(e,a)=>a!==o&&a!==s&&e.equals(p)?e.multiply(a):e.multiplyUnsafe(a),i=d(this,a).add(d(e,t));return i.is0()?void 0:i}toAffine(e){return f(this,e)}isTorsionFree(){const{h:e,isTorsionFree:a}=i;if(e===s)return!0;if(a)return a(w,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:e,clearCofactor:a}=i;return e===s?this:a?a(w,this):this.multiplyUnsafe(i.h)}toRawBytes(e=!0){return(0,d.abool)("isCompressed",e),this.assertValidity(),l(w,this,e)}toHex(e=!0){return(0,d.abool)("isCompressed",e),p.bytesToHex(this.toRawBytes(e))}}w.BASE=new w(i.Gx,i.Gy,n.ONE),w.ZERO=new w(n.ZERO,n.ONE,n.ZERO);const y=i.nBitLength,b=(0,a.wNAF)(w,i.endo?Math.ceil(y/2):y);return{CURVE:i,ProjectivePoint:w,normPrivateKeyToScalar:h,weierstrassEquation:u,isWithinCurveOrder:function(e){return p.inRange(e,s,i.n)}}}function h(e,a){const t=e.ORDER;let p=o;for(let e=t-s;e%l===o;e/=l)p+=s;const d=p,i=l<<d-s-s,n=i*l,r=(t-s)/n,u=(r-s)/l,h=n-s,v=i,f=e.pow(a,r),g=e.pow(a,(r+s)/l);let w=(a,t)=>{let p=f,i=e.pow(t,h),n=e.sqr(i);n=e.mul(n,t);let r=e.mul(a,n);r=e.pow(r,u),r=e.mul(r,i),i=e.mul(r,t),n=e.mul(r,a);let o=e.mul(n,i);r=e.pow(o,v);let m=e.eql(r,e.ONE);i=e.mul(n,g),r=e.mul(o,p),n=e.cmov(i,n,m),o=e.cmov(r,o,m);for(let a=d;a>s;a--){let t=a-l;t=l<<t-s;let d=e.pow(o,t);const r=e.eql(d,e.ONE);i=e.mul(n,p),p=e.mul(p,p),d=e.mul(o,p),n=e.cmov(i,n,r),o=e.cmov(d,o,r)}return{isValid:m,value:n}};if(e.ORDER%c===m){const t=(e.ORDER-m)/c,p=e.sqrt(e.neg(a));w=(a,d)=>{let i=e.sqr(d);const n=e.mul(a,d);i=e.mul(i,n);let r=e.pow(i,t);r=e.mul(r,n);const o=e.mul(r,p),s=e.mul(e.sqr(r),d),l=e.eql(s,a);return{isValid:l,value:e.cmov(o,r,l)}}}return w}}(Ip),Object.defineProperty(Mp,"__esModule",{value:!0}),Mp.getHash=jp,Mp.createCurve=function(e,a){const t=a=>(0,Bp.weierstrass)({...e,...jp(a)});return Object.freeze({...t(a),create:t})};
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const Vp=Pp,Lp=ga,Bp=Ip;function jp(e){return{hash:e,hmac:(a,...t)=>(0,Vp.hmac)(e,a,(0,Lp.concatBytes)(...t)),randomBytes:Lp.randomBytes}}!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.encodeToCurve=e.hashToCurve=e.schnorr=e.secp256k1=void 0;
/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
const a=Tp,t=ga,p=Mp,d=sp,i=rt,n=ot,r=Ip,o=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),s=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),l=BigInt(1),m=BigInt(2),c=(e,a)=>(e+a/m)/a;function u(e){const a=o,t=BigInt(3),p=BigInt(6),d=BigInt(11),n=BigInt(22),r=BigInt(23),s=BigInt(44),l=BigInt(88),c=e*e*e%a,u=c*c*e%a,v=(0,i.pow2)(u,t,a)*u%a,f=(0,i.pow2)(v,t,a)*u%a,g=(0,i.pow2)(f,m,a)*c%a,w=(0,i.pow2)(g,d,a)*g%a,y=(0,i.pow2)(w,n,a)*w%a,b=(0,i.pow2)(y,s,a)*y%a,S=(0,i.pow2)(b,l,a)*b%a,_=(0,i.pow2)(S,s,a)*y%a,E=(0,i.pow2)(_,t,a)*u%a,N=(0,i.pow2)(E,r,a)*w%a,T=(0,i.pow2)(N,p,a)*c%a,C=(0,i.pow2)(T,m,a);if(!h.eql(h.sqr(C),e))throw new Error("Cannot find square root");return C}const h=(0,i.Field)(o,void 0,void 0,{sqrt:u});e.secp256k1=(0,p.createCurve)({a:BigInt(0),b:BigInt(7),Fp:h,n:s,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{const a=s,t=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),p=-l*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),d=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),n=t,r=BigInt("0x100000000000000000000000000000000"),o=c(n*e,a),m=c(-p*e,a);let u=(0,i.mod)(e-o*t-m*d,a),h=(0,i.mod)(-o*p-m*n,a);const v=u>r,f=h>r;if(v&&(u=a-u),f&&(h=a-h),u>r||h>r)throw new Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:v,k1:u,k2neg:f,k2:h}}}},a.sha256);const v=BigInt(0),f={};function g(e,...t){let p=f[e];if(void 0===p){const t=(0,a.sha256)(Uint8Array.from(e,(e=>e.charCodeAt(0))));p=(0,n.concatBytes)(t,t),f[e]=p}return(0,a.sha256)((0,n.concatBytes)(p,...t))}const w=e=>e.toRawBytes(!0).slice(1),y=e=>(0,n.numberToBytesBE)(e,32),b=e=>(0,i.mod)(e,o),S=e=>(0,i.mod)(e,s),_=e.secp256k1.ProjectivePoint,E=(e,a,t)=>_.BASE.multiplyAndAddUnsafe(e,a,t);function N(a){let t=e.secp256k1.utils.normPrivateKeyToScalar(a),p=_.fromPrivateKey(t);return{scalar:p.hasEvenY()?t:S(-t),bytes:w(p)}}function T(e){(0,n.aInRange)("x",e,l,o);const a=b(e*e);let t=u(b(a*e+BigInt(7)));t%m!==v&&(t=b(-t));const p=new _(e,t,l);return p.assertValidity(),p}const C=n.bytesToNumberBE;function D(...e){return S(C(g("BIP0340/challenge",...e)))}function A(e){return N(e).bytes}function k(e,a,p=(0,t.randomBytes)(32)){const d=(0,n.ensureBytes)("message",e),{bytes:i,scalar:r}=N(a),o=(0,n.ensureBytes)("auxRand",p,32),s=y(r^C(g("BIP0340/aux",o))),l=g("BIP0340/nonce",s,i,d),m=S(C(l));if(m===v)throw new Error("sign failed: k is zero");const{bytes:c,scalar:u}=N(m),h=D(c,i,d),f=new Uint8Array(64);if(f.set(c,0),f.set(y(S(u+h*r)),32),!O(f,d,i))throw new Error("sign: Invalid signature produced");return f}function O(e,a,t){const p=(0,n.ensureBytes)("signature",e,64),d=(0,n.ensureBytes)("message",a),i=(0,n.ensureBytes)("publicKey",t,32);try{const e=T(C(i)),a=C(p.subarray(0,32));if(!(0,n.inRange)(a,l,o))return!1;const t=C(p.subarray(32,64));if(!(0,n.inRange)(t,l,s))return!1;const r=D(y(a),w(e),d),m=E(e,t,S(-r));return!(!m||!m.hasEvenY()||m.toAffine().x!==a)}catch(e){return!1}}e.schnorr={getPublicKey:A,sign:k,verify:O,utils:{randomPrivateKey:e.secp256k1.utils.randomPrivateKey,lift_x:T,pointToBytes:w,numberToBytesBE:n.numberToBytesBE,bytesToNumberBE:n.bytesToNumberBE,taggedHash:g,mod:i.mod}};const x=(()=>(0,d.isogenyMap)(h,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map((e=>e.map((e=>BigInt(e)))))))(),R=(()=>(0,r.mapToCurveSimpleSWU)(h,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:h.create(BigInt("-11"))}))(),M=(()=>(0,d.createHasher)(e.secp256k1.ProjectivePoint,(e=>{const{x:a,y:t}=R(h.create(e[0]));return x(a,t)}),{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:h.ORDER,m:1,k:128,expand:"xmd",hash:a.sha256}))();e.hashToCurve=M.hashToCurve,e.encodeToCurve=M.encodeToCurve}(Np);var Kp={};!function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.decodeHex=e.remove0x=void 0;var a=Ke;e.remove0x=function(e){return e.startsWith("0x")||e.startsWith("0X")?e.slice(2):e};e.decodeHex=function(t){return(0,a.hexToBytes)((0,e.remove0x)(t))}}(Kp),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.hexToPublicKey=e.convertPublicKeyFormat=e.getSharedPoint=e.getPublicKey=e.isValidPrivateKey=e.getValidSecret=void 0;var a=ta,t=ia,p=Np,d=Je,i=Ze,n=Kp;e.getValidSecret=function(){var t;do{t=(0,a.randomBytes)(i.SECRET_KEY_LENGTH)}while(!(0,e.isValidPrivateKey)(t));return t};e.isValidPrivateKey=function(e){return r((0,d.ellipticCurve)(),(function(a){return a.utils.isValidPrivateKey(e)}),(function(){return!0}),(function(){return!0}))};e.getPublicKey=function(e){return r((0,d.ellipticCurve)(),(function(a){return a.getPublicKey(e)}),(function(a){return a.getPublicKey(e)}),(function(a){return a.getPublicKey(e)}))};e.getSharedPoint=function(e,a,t){return r((0,d.ellipticCurve)(),(function(p){return p.getSharedSecret(e,a,t)}),(function(t){return t.getSharedSecret(e,a)}),(function(t){return s(t,e,a)}))};e.convertPublicKeyFormat=function(e,a){return r((0,d.ellipticCurve)(),(function(t){return t.getSharedSecret(BigInt(1),e,a)}),(function(){return e}),(function(){return e}))};function r(e,a,d,i){if("secp256k1"===e)return a(p.secp256k1);if("x25519"===e)return d(t.x25519);if("ed25519"===e)return i(t.ed25519);throw new Error("Not implemented")}e.hexToPublicKey=function(e){var a=(0,n.decodeHex)(e);return r((0,d.ellipticCurve)(),(function(){return o(a)}),(function(){return a}),(function(){return a}))};var o=function(e){if(e.length===i.ETH_PUBLIC_KEY_SIZE){var a=new Uint8Array(1+e.length);return a.set([4]),a.set(e,1),a}return e},s=function(e,a,t){var p=e.utils.getExtendedPublicKey(a).scalar;return e.ExtendedPoint.fromHex(t).multiply(p).toRawBytes()}}(aa);var Up={},Fp={};Object.defineProperty(Fp,"__esModule",{value:!0}),Fp.hkdf=void 0,Fp.extract=qp,Fp.expand=Yp;const $p=oa,Hp=ga,zp=Pp;function qp(e,a,t){return(0,$p.hash)(e),void 0===t&&(t=new Uint8Array(e.outputLen)),(0,zp.hmac)(e,(0,Hp.toBytes)(t),(0,Hp.toBytes)(a))}const Wp=new Uint8Array([0]),Gp=new Uint8Array;function Yp(e,a,t,p=32){if((0,$p.hash)(e),(0,$p.number)(p),p>255*e.outputLen)throw new Error("Length should be <= 255*HashLen");const d=Math.ceil(p/e.outputLen);void 0===t&&(t=Gp);const i=new Uint8Array(d*e.outputLen),n=zp.hmac.create(e,a),r=n._cloneInto(),o=new Uint8Array(n.outputLen);for(let a=0;a<d;a++)Wp[0]=a+1,r.update(0===a?Gp:o).update(t).update(Wp).digestInto(o),i.set(o,e.outputLen*a),n._cloneInto(r);return n.destroy(),r.destroy(),o.fill(0),Wp.fill(0),i.slice(0,p)}Fp.hkdf=(e,a,t,p,d)=>Yp(e,qp(e,a,t),p,d),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.getSharedKey=e.deriveKey=void 0;var a=Ke,t=Fp,p=Tp;e.deriveKey=function(e,a,d){return(0,t.hkdf)(p.sha256,e,a,d,32)};e.getSharedKey=function(){for(var t=[],p=0;p<arguments.length;p++)t[p]=arguments[p];return(0,e.deriveKey)(a.concatBytes.apply(void 0,t))}}(Up);var Jp={},Zp={},Xp={};Object.defineProperty(Xp,"__esModule",{value:!0}),Xp._compat=void 0;var Qp=Ke,ed=l;Xp._compat=function(e,a,t,p){var d="aes-256-gcm"===e||"chacha20-poly1305"===e,i=d?16:0,n=d?{authTagLength:i}:void 0;return{encrypt:function(i){var r=(0,ed.createCipheriv)(e,a,t,n);d&&void 0!==p&&r.setAAD(p);var o=r.update(i),s=r.final();return d?(0,Qp.concatBytes)(o,s,r.getAuthTag()):(0,Qp.concatBytes)(o,s)},decrypt:function(r){var o=r.subarray(0,r.length-i),s=r.subarray(r.length-i),l=(0,ed.createDecipheriv)(e,a,t,n);d&&(void 0!==p&&l.setAAD(p),l.setAuthTag(s));var m=l.update(o),c=l.final();return(0,Qp.concatBytes)(m,c)}}},Object.defineProperty(Zp,"__esModule",{value:!0}),Zp.aes256cbc=Zp.aes256gcm=void 0;var ad=Xp;Zp.aes256gcm=function(e,a,t){return(0,ad._compat)("aes-256-gcm",e,a,t)};Zp.aes256cbc=function(e,a,t){return(0,ad._compat)("aes-256-cbc",e,a)};var td={},pd={};Object.defineProperty(pd,"__esModule",{value:!0}),pd._hchacha=void 0;pd._hchacha=function(e,a,t,p){for(var d=e[0],i=e[1],n=e[2],r=e[3],o=a[0],s=a[1],l=a[2],m=a[3],c=a[4],u=a[5],h=a[6],v=a[7],f=t[0],g=t[1],w=t[2],y=t[3],b=0;b<20;b+=2)f=dd(f^(d=d+o|0),16),o=dd(o^(c=c+f|0),12),f=dd(f^(d=d+o|0),8),o=dd(o^(c=c+f|0),7),g=dd(g^(i=i+s|0),16),s=dd(s^(u=u+g|0),12),g=dd(g^(i=i+s|0),8),s=dd(s^(u=u+g|0),7),w=dd(w^(n=n+l|0),16),l=dd(l^(h=h+w|0),12),w=dd(w^(n=n+l|0),8),l=dd(l^(h=h+w|0),7),y=dd(y^(r=r+m|0),16),m=dd(m^(v=v+y|0),12),y=dd(y^(r=r+m|0),8),m=dd(m^(v=v+y|0),7),y=dd(y^(d=d+s|0),16),s=dd(s^(h=h+y|0),12),y=dd(y^(d=d+s|0),8),s=dd(s^(h=h+y|0),7),f=dd(f^(i=i+l|0),16),l=dd(l^(v=v+f|0),12),f=dd(f^(i=i+l|0),8),l=dd(l^(v=v+f|0),7),g=dd(g^(n=n+m|0),16),m=dd(m^(c=c+g|0),12),g=dd(g^(n=n+m|0),8),m=dd(m^(c=c+g|0),7),w=dd(w^(r=r+o|0),16),o=dd(o^(u=u+w|0),12),w=dd(w^(r=r+o|0),8),o=dd(o^(u=u+w|0),7);var S=0;p[S++]=d,p[S++]=i,p[S++]=n,p[S++]=r,p[S++]=f,p[S++]=g,p[S++]=w,p[S++]=y};var dd=function(e,a){return e<<a|e>>>32-a};Object.defineProperty(td,"__esModule",{value:!0}),td.xchacha20=void 0;var id=Ke,nd=Xp,rd=pd;td.xchacha20=function(e,a,t){if(24!==a.length)throw new Error("xchacha20's nonce must be 24 bytes");var p=new Uint32Array([1634760805,857760878,2036477234,1797285236]),d=new Uint32Array(8);(0,rd._hchacha)(p,(0,id.u32)(e),(0,id.u32)(a.subarray(0,16)),d);var i=new Uint8Array(12);return i.set([0,0,0,0]),i.set(a.subarray(16),4),(0,nd._compat)("chacha20-poly1305",(0,id.u8)(d),i,t)},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.aesDecrypt=e.aesEncrypt=e.symDecrypt=e.symEncrypt=void 0;var a=Ke,t=ta,p=Zp,d=td,i=Je,n=Ze;e.symEncrypt=function(e,a,t){return r(o,e,a,t)};function r(e,a,t,r){var o=(0,i.symmetricAlgorithm)();if("aes-256-gcm"===o)return e(p.aes256gcm,a,t,(0,i.symmetricNonceLength)(),n.AEAD_TAG_LENGTH,r);if("xchacha20"===o)return e(d.xchacha20,a,t,n.XCHACHA20_NONCE_LENGTH,n.AEAD_TAG_LENGTH,r);if("aes-256-cbc"===o)return e(p.aes256cbc,a,t,16,0);throw new Error("Not implemented")}function o(e,p,d,i,n,r){var o=(0,t.randomBytes)(i),s=e(p,o,r).encrypt(d);if(0===n)return(0,a.concatBytes)(o,s);var l=s.length-n,m=s.subarray(0,l),c=s.subarray(l);return(0,a.concatBytes)(o,c,m)}function s(e,t,p,d,i,n){var r=p.subarray(0,d),o=e(t,Uint8Array.from(r),n),s=p.subarray(d);if(0===i)return o.decrypt(s);var l=s.subarray(0,i),m=s.subarray(i);return o.decrypt((0,a.concatBytes)(m,l))}e.symDecrypt=function(e,a,t){return r(s,e,a,t)},e.aesEncrypt=e.symEncrypt,e.aesDecrypt=e.symDecrypt}(Jp),function(e){var a=b&&b.__createBinding||(Object.create?function(e,a,t,p){void 0===p&&(p=t);var d=Object.getOwnPropertyDescriptor(a,t);d&&!("get"in d?!a.__esModule:d.writable||d.configurable)||(d={enumerable:!0,get:function(){return a[t]}}),Object.defineProperty(e,p,d)}:function(e,a,t,p){void 0===p&&(p=t),e[p]=a[t]}),t=b&&b.__exportStar||function(e,t){for(var p in e)"default"===p||Object.prototype.hasOwnProperty.call(t,p)||a(t,e,p)};Object.defineProperty(e,"__esModule",{value:!0}),t(aa,e),t(Up,e),t(Kp,e),t(Jp,e)}(ea);var od={};Object.defineProperty(od,"__esModule",{value:!0}),od.PublicKey=void 0;var sd=Ke,ld=ea,md=function(){function e(e){this.data=(0,ld.convertPublicKeyFormat)(e,!0)}return e.fromHex=function(a){return new e((0,ld.hexToPublicKey)(a))},Object.defineProperty(e.prototype,"uncompressed",{get:function(){return Buffer.from((0,ld.convertPublicKeyFormat)(this.data,!1))},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"compressed",{get:function(){return Buffer.from(this.data)},enumerable:!1,configurable:!0}),e.prototype.toHex=function(e){return void 0===e&&(e=!0),(0,sd.bytesToHex)(e?this.data:this.uncompressed)},e.prototype.decapsulate=function(e,a){void 0===a&&(a=!1);var t=a?this.data:this.uncompressed,p=e.multiply(this,a);return(0,ld.getSharedKey)(t,p)},e.prototype.equals=function(e){return(0,sd.equalBytes)(this.data,e.data)},e}();od.PublicKey=md,Object.defineProperty(Qe,"__esModule",{value:!0}),Qe.PrivateKey=void 0;var cd=Ke,ud=ea,hd=od,vd=function(){function e(e){if(void 0===e)this.data=(0,ud.getValidSecret)();else{if(!(0,ud.isValidPrivateKey)(e))throw new Error("Invalid private key");this.data=e}this.publicKey=new hd.PublicKey((0,ud.getPublicKey)(this.data))}return e.fromHex=function(a){return new e((0,ud.decodeHex)(a))},Object.defineProperty(e.prototype,"secret",{get:function(){return Buffer.from(this.data)},enumerable:!1,configurable:!0}),e.prototype.toHex=function(){return(0,cd.bytesToHex)(this.data)},e.prototype.encapsulate=function(e,a){void 0===a&&(a=!1);var t=a?this.publicKey.compressed:this.publicKey.uncompressed,p=this.multiply(e,a);return(0,ud.getSharedKey)(t,p)},e.prototype.multiply=function(e,a){return void 0===a&&(a=!1),(0,ud.getSharedPoint)(this.data,e.compressed,a)},e.prototype.equals=function(e){return(0,cd.equalBytes)(this.data,e.data)},e}();Qe.PrivateKey=vd,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.PublicKey=e.PrivateKey=void 0;var a=Qe;Object.defineProperty(e,"PrivateKey",{enumerable:!0,get:function(){return a.PrivateKey}});var t=od;Object.defineProperty(e,"PublicKey",{enumerable:!0,get:function(){return t.PublicKey}})}(Xe),function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.utils=e.PublicKey=e.PrivateKey=e.ECIES_CONFIG=void 0,e.encrypt=function(e,i){var n=new p.PrivateKey,r=e instanceof Uint8Array?new p.PublicKey(e):p.PublicKey.fromHex(e),o=n.encapsulate(r,(0,t.isHkdfKeyCompressed)()),s=(0,t.isEphemeralKeyCompressed)()?n.publicKey.compressed:n.publicKey.uncompressed,l=(0,d.symEncrypt)(o,i);return Buffer.from((0,a.concatBytes)(s,l))},e.decrypt=function(e,a){var i=e instanceof Uint8Array?new p.PrivateKey(e):p.PrivateKey.fromHex(e),n=(0,t.ephemeralKeySize)(),r=new p.PublicKey(a.subarray(0,n)),o=a.subarray(n),s=r.decapsulate(i,(0,t.isHkdfKeyCompressed)());return Buffer.from((0,d.symDecrypt)(s,o))};var a=Ke,t=Je,p=Xe,d=ea;var i=Je;Object.defineProperty(e,"ECIES_CONFIG",{enumerable:!0,get:function(){return i.ECIES_CONFIG}});var n=Xe;Object.defineProperty(e,"PrivateKey",{enumerable:!0,get:function(){return n.PrivateKey}}),Object.defineProperty(e,"PublicKey",{enumerable:!0,get:function(){return n.PublicKey}}),e.utils={aesEncrypt:d.aesEncrypt,aesDecrypt:d.aesDecrypt,symEncrypt:d.symEncrypt,symDecrypt:d.symDecrypt,decodeHex:d.decodeHex,getValidSecret:d.getValidSecret,remove0x:d.remove0x}}(je);const fd=r("KeyExchange:Layer"),gd=r("SocketService:Layer"),wd=r("Ecies:Layer"),yd=r("RemoteCommunication:Layer");fd.color="##95c44e",gd.color="#f638d7",wd.color="#465b9c",yd.color="#47a2be";const bd={KeyExchange:fd,SocketService:gd,Ecies:wd,RemoteCommunication:yd};let Sd,_d=[],Ed=[];const Nd=(a,t)=>e(void 0,void 0,void 0,(function*(){Sd=t,Ed.push(a),function(a){return e(this,void 0,void 0,(function*(){if(!Sd||!a)return;!function(){const e=Ed;Ed=_d,_d=e}();const e=Sd.endsWith("/")?`${Sd}evt`:`${Sd}/evt`,t=Object.assign({},a);if(delete t.params,a.params)for(const[e,p]of Object.entries(a.params))t[e]=p;const p=JSON.stringify(t);bd.RemoteCommunication(`[sendBufferedEvents] Sending ${_d.length} analytics events to ${e}`);try{const a=yield Be(e,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:p}),t=yield a.text();bd.RemoteCommunication(`[sendBufferedEvents] Response: ${t}`),_d.length=0}catch(e){}}))}(a).catch((()=>{}))}));class Td{constructor(e){this.enabled=!0,(null==e?void 0:e.debug)&&r.enable("Ecies:Layer"),this.ecies=(null==e?void 0:e.privateKey)?je.PrivateKey.fromHex(e.privateKey):new je.PrivateKey,bd.Ecies("[ECIES constructor()] initialized secret: ",this.ecies.toHex()),bd.Ecies("[ECIES constructor()] initialized public: ",this.ecies.publicKey.toHex()),bd.Ecies("[ECIES constructor()] init with",this)}generateECIES(){this.ecies=new je.PrivateKey}getPublicKey(){return this.ecies.publicKey.toHex()}encrypt(e,a){let t=e;if(this.enabled)try{bd.Ecies("[ECIES: encrypt()] using otherPublicKey",a);const p=s.from(e),d=je.encrypt(a,p);t=s.from(d).toString("base64")}catch(t){throw bd.Ecies("[ECIES: encrypt()] error encrypt:",t),bd.Ecies("[ECIES: encrypt()] private: ",this.ecies.toHex()),bd.Ecies("[ECIES: encrypt()] data: ",e),bd.Ecies("[ECIES: encrypt()] otherkey: ",a),t}return t}decrypt(e){let a=e;if(this.enabled)try{bd.Ecies("[ECIES: decrypt()] using privateKey",this.ecies.toHex());const t=s.from(e.toString(),"base64");a=je.decrypt(this.ecies.toHex(),t).toString()}catch(a){throw bd.Ecies("[ECIES: decrypt()] error decrypt",a),bd.Ecies("[ECIES: decrypt()] private: ",this.ecies.toHex()),bd.Ecies("[ECIES: decrypt()] encryptedData: ",e),a}return a}getKeyInfo(){return{private:this.ecies.toHex(),public:this.ecies.publicKey.toHex()}}toString(){bd.Ecies("[ECIES: toString()]",this.getKeyInfo())}}var Cd={name:"@metamask/sdk-communication-layer",version:"0.30.2",description:"",homepage:"https://github.com/MetaMask/metamask-sdk#readme",bugs:{url:"https://github.com/MetaMask/metamask-sdk/issues"},repository:{type:"git",url:"https://github.com/MetaMask/metamask-sdk.git",directory:"packages/sdk-communication-layer"},main:"dist/node/cjs/metamask-sdk-communication-layer.js",unpkg:"dist/browser/umd/metamask-sdk-communication-layer.js",module:"dist/node/es/metamask-sdk-communication-layer.js",browser:"dist/browser/es/metamask-sdk-communication-layer.js","react-native":"dist/react-native/es/metamask-sdk-communication-layer.js",types:"dist/types/src/index.d.ts",files:["/dist"],scripts:{"build:types":"tsc --project tsconfig.build.json --emitDeclarationOnly --outDir dist/types","build:clean":"yarn clean && yarn build",build:"yarn build:types && rollup -c --bundleConfigAsCjs","build:dev":"yarn build:types && NODE_ENV=dev rollup -c --bundleConfigAsCjs","build:post-tsc":"echo 'N/A'","build:pre-tsc":"echo 'N/A'",size:"size-limit",clean:"rimraf ./dist",lint:"yarn lint:eslint && yarn lint:misc --check","lint:changelog":"../../scripts/validate-changelog.sh @metamask/sdk-communication-layer","lint:eslint":"eslint . --cache --ext js,ts","lint:fix":"yarn lint:eslint --fix && yarn lint:misc --write","lint:misc":"prettier '**/*.json' '**/*.md' '!CHANGELOG.md' --ignore-path ../../.gitignore","publish:preview":"yarn npm publish --tag preview",prepack:"../../scripts/prepack.sh",reset:"yarn clean && rimraf ./node_modules/",test:'jest --testPathIgnorePatterns "/e2e/"',"test:e2e":'jest --testPathPattern "/e2e/"',"test:coverage":"jest --coverage","test:ci":'jest --coverage --passWithNoTests --setupFilesAfterEnv ./jest-preload.js --testPathIgnorePatterns "/e2e/"',"test:dev":"jest",watch:"rollup -c --bundleConfigAsCjs -w"},dependencies:{bufferutil:"^4.0.8","date-fns":"^2.29.3",debug:"^4.3.4","utf-8-validate":"^5.0.2",uuid:"^8.3.2"},devDependencies:{"@jest/globals":"^29.3.1","@lavamoat/allow-scripts":"^2.3.1","@metamask/auto-changelog":"3.1.0","@metamask/eslint-config":"^6.0.0","@metamask/eslint-config-nodejs":"^6.0.0","@metamask/eslint-config-typescript":"^6.0.0","@rollup/plugin-commonjs":"^25.0.0","@rollup/plugin-json":"^6.0.0","@rollup/plugin-node-resolve":"^15.0.2","@rollup/plugin-replace":"^6.0.1","@rollup/plugin-terser":"^0.4.4","@size-limit/preset-big-lib":"^11.0.2","@types/jest":"^29.2.4","@types/node":"^20.1.3","@types/uuid":"^9.0.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","cross-fetch":"^4.0.0",eciesjs:"^0.4.11",eslint:"^7.30.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","eslint-plugin-jest":"^24.4.0","eslint-plugin-jsdoc":"^36.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.4.0",eventemitter2:"^6.4.9",jest:"^29.3.1",prettier:"^2.3.0",rimraf:"^3.0.2",rollup:"^4.26.0","rollup-plugin-jscc":"^2.0.0","rollup-plugin-natives":"^0.7.5","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-peer-deps-external":"^2.2.4","rollup-plugin-polyfill-node":"^0.13.0","rollup-plugin-sizes":"^1.0.6","rollup-plugin-typescript2":"^0.31.2","rollup-plugin-visualizer":"^5.12.0","size-limit":"^11.1.6","socket.io-client":"^4.5.1","stream-browserify":"^3.0.0","ts-jest":"^29.0.3","ts-node":"^10.9.1",typescript:"^5.6.3"},peerDependencies:{"cross-fetch":"^4.0.0",eciesjs:"*",eventemitter2:"^6.4.9","readable-stream":"^3.6.2","socket.io-client":"^4.5.1"},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"},lavamoat:{allowScripts:{"@lavamoat/preinstall-always-fail":!1,canvas:!0,"eciesjs>secp256k1":!1,"socket.io-client>engine.io-client>ws>bufferutil":!1,"socket.io-client>engine.io-client>ws>utf-8-validate":!1,bufferutil:!1,"utf-8-validate":!1}}};const Dd="https://metamask-sdk.api.cx.metamask.io/",Ad=["websocket"],kd=6048e5,Od=3e3,xd={METAMASK_GETPROVIDERSTATE:"metamask_getProviderState",ETH_REQUESTACCOUNTS:"eth_requestAccounts"};function Rd(e){const{context:a}=e;bd.RemoteCommunication(`[RemoteCommunication: clean()] context=${a}`),e.channelConfig=void 0,e.ready=!1,e.originatorConnectStarted=!1}var Md,Pd,Id,Vd,Ld,Bd,jd;(jd=Md||(Md={})).DISCONNECTED="disconnected",jd.WAITING="waiting",jd.TIMEOUT="timeout",jd.LINKED="linked",jd.PAUSED="paused",jd.TERMINATED="terminated",function(e){e.KEY_INFO="key_info",e.SERVICE_STATUS="service_status",e.PROVIDER_UPDATE="provider_update",e.RPC_UPDATE="rpc_update",e.KEYS_EXCHANGED="keys_exchanged",e.JOIN_CHANNEL="join_channel",e.PUBLIC_KEY="public_key",e.CHANNEL_CREATED="channel_created",e.CLIENTS_CONNECTED="clients_connected",e.CLIENTS_DISCONNECTED="clients_disconnected",e.CLIENTS_WAITING="clients_waiting",e.CLIENTS_READY="clients_ready",e.REJECTED="rejected",e.WALLET_INIT="wallet_init",e.CHANNEL_PERSISTENCE="channel_persistence",e.CONFIG="config",e.MESSAGE_ACK="ack",e.SOCKET_DISCONNECTED="socket_disconnected",e.SOCKET_RECONNECT="socket_reconnect",e.OTP="otp",e.SDK_RPC_CALL="sdk_rpc_call",e.AUTHORIZED="authorized",e.CONNECTION_STATUS="connection_status",e.MESSAGE="message",e.TERMINATE="terminate"}(Pd||(Pd={})),(Id||(Id={})).KEY_EXCHANGE="key_exchange",function(e){e.KEY_HANDSHAKE_START="key_handshake_start",e.KEY_HANDSHAKE_CHECK="key_handshake_check",e.KEY_HANDSHAKE_SYN="key_handshake_SYN",e.KEY_HANDSHAKE_SYNACK="key_handshake_SYNACK",e.KEY_HANDSHAKE_ACK="key_handshake_ACK",e.KEY_HANDSHAKE_WALLET="key_handshake_wallet",e.KEY_HANDSHAKE_NONE="none"}(Vd||(Vd={}));class Kd extends c{constructor({communicationLayer:e,otherPublicKey:a,context:t,ecies:p,logging:d}){super(),this.keysExchanged=!1,this.step=Vd.KEY_HANDSHAKE_NONE,this.debug=!1,this.context=t,this.communicationLayer=e,(null==p?void 0:p.privateKey)&&a&&(bd.KeyExchange(`[KeyExchange: constructor()] otherPubKey=${a} set keysExchanged to true!`,p),this.keysExchanged=!0),this.myECIES=new Td(Object.assign(Object.assign({},p),{debug:null==d?void 0:d.eciesLayer})),this.communicationLayer.state.eciesInstance=this.myECIES,this.myPublicKey=this.myECIES.getPublicKey(),this.debug=!0===(null==d?void 0:d.keyExchangeLayer),a&&this.setOtherPublicKey(a),this.communicationLayer.on(Id.KEY_EXCHANGE,this.onKeyExchangeMessage.bind(this))}onKeyExchangeMessage(e){const{relayPersistence:a}=this.communicationLayer.remote.state;if(bd.KeyExchange(`[KeyExchange: onKeyExchangeMessage()] context=${this.context} keysExchanged=${this.keysExchanged} relayPersistence=${a}`,e),a)return void bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] Ignoring key exchange message because relay persistence is activated");const{message:t}=e;this.keysExchanged&&bd.KeyExchange(`[KeyExchange: onKeyExchangeMessage()] context=${this.context} received handshake while already exchanged. step=${this.step} otherPubKey=${this.otherPublicKey}`),this.emit(Pd.KEY_INFO,t.type),t.type===Vd.KEY_HANDSHAKE_SYN?(this.checkStep([Vd.KEY_HANDSHAKE_NONE,Vd.KEY_HANDSHAKE_ACK]),bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_SYN",t),t.pubkey&&this.setOtherPublicKey(t.pubkey),this.communicationLayer.sendMessage({type:Vd.KEY_HANDSHAKE_SYNACK,pubkey:this.myPublicKey}).catch((e=>{bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] Error sending KEY_HANDSHAKE_SYNACK",e)})),this.setStep(Vd.KEY_HANDSHAKE_ACK)):t.type===Vd.KEY_HANDSHAKE_SYNACK?(this.checkStep([Vd.KEY_HANDSHAKE_SYNACK,Vd.KEY_HANDSHAKE_ACK,Vd.KEY_HANDSHAKE_NONE]),bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_SYNACK"),t.pubkey&&this.setOtherPublicKey(t.pubkey),this.communicationLayer.sendMessage({type:Vd.KEY_HANDSHAKE_ACK}).catch((e=>{bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] Error sending KEY_HANDSHAKE_ACK",e)})),this.keysExchanged=!0,this.setStep(Vd.KEY_HANDSHAKE_ACK),this.emit(Pd.KEYS_EXCHANGED)):t.type===Vd.KEY_HANDSHAKE_ACK&&(bd.KeyExchange("[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_ACK set keysExchanged to true!"),this.checkStep([Vd.KEY_HANDSHAKE_ACK,Vd.KEY_HANDSHAKE_NONE]),this.keysExchanged=!0,this.setStep(Vd.KEY_HANDSHAKE_ACK),this.emit(Pd.KEYS_EXCHANGED))}resetKeys(e){this.clean(),this.myECIES=new Td(e)}clean(){bd.KeyExchange(`[KeyExchange: clean()] context=${this.context} reset handshake state`),this.setStep(Vd.KEY_HANDSHAKE_NONE),this.emit(Pd.KEY_INFO,this.step),this.keysExchanged=!1}start({isOriginator:e,force:a}){const{relayPersistence:t,protocolVersion:p}=this.communicationLayer.remote.state,d=p>=2;t?bd.KeyExchange("[KeyExchange: start()] Ignoring key exchange message because relay persistence is activated"):(bd.KeyExchange(`[KeyExchange: start()] context=${this.context} protocolVersion=${p} isOriginator=${e} step=${this.step} force=${a} relayPersistence=${t} keysExchanged=${this.keysExchanged}`),e?!(this.keysExchanged||this.step!==Vd.KEY_HANDSHAKE_NONE&&this.step!==Vd.KEY_HANDSHAKE_SYNACK)||a?(bd.KeyExchange(`[KeyExchange: start()] context=${this.context} -- start key exchange (force=${a}) -- step=${this.step}`,this.step),this.clean(),this.setStep(Vd.KEY_HANDSHAKE_SYNACK),this.communicationLayer.sendMessage({type:Vd.KEY_HANDSHAKE_SYN,pubkey:this.myPublicKey,v:2}).catch((e=>{bd.KeyExchange("[KeyExchange: start()] Error sending KEY_HANDSHAKE_SYN",e)}))):bd.KeyExchange(`[KeyExchange: start()] context=${this.context} -- key exchange already ${this.keysExchanged?"done":"in progress"} -- aborted.`,this.step):this.keysExchanged&&!0!==a?bd.KeyExchange("[KeyExchange: start()] don't send KEY_HANDSHAKE_START -- exchange already done."):d?this.communicationLayer.sendMessage({type:Vd.KEY_HANDSHAKE_SYNACK,pubkey:this.myPublicKey,v:2}).catch((e=>{bd.KeyExchange("[KeyExchange: start()] Error sending KEY_HANDSHAKE_SYNACK",e)})):(this.communicationLayer.sendMessage({type:Vd.KEY_HANDSHAKE_START}).catch((e=>{bd.KeyExchange("[KeyExchange: start()] Error sending KEY_HANDSHAKE_START",e)})),this.clean()))}setStep(e){this.step=e,this.emit(Pd.KEY_INFO,e)}checkStep(e){e.length>0&&e.indexOf(this.step.toString())}setRelayPersistence({localKey:e,otherKey:a}){this.otherPublicKey=a,this.myECIES=new Td({privateKey:e,debug:this.debug}),this.keysExchanged=!0}setKeysExchanged(e){this.keysExchanged=e}areKeysExchanged(){return this.keysExchanged}getMyPublicKey(){return this.myPublicKey}getOtherPublicKey(){return this.otherPublicKey}setOtherPublicKey(e){bd.KeyExchange("[KeyExchange: setOtherPubKey()]",e),this.otherPublicKey=e}encryptMessage(e){if(!this.otherPublicKey)throw new Error("encryptMessage: Keys not exchanged - missing otherPubKey");return this.myECIES.encrypt(e,this.otherPublicKey)}decryptMessage(e){if(!this.otherPublicKey)throw new Error("decryptMessage: Keys not exchanged - missing otherPubKey");return this.myECIES.decrypt(e)}getKeyInfo(){return{ecies:Object.assign(Object.assign({},this.myECIES.getKeyInfo()),{otherPubKey:this.otherPublicKey}),step:this.step,keysExchanged:this.areKeysExchanged()}}toString(){const e={keyInfo:this.getKeyInfo(),keysExchanged:this.keysExchanged,step:this.step};return JSON.stringify(e)}}!function(e){e.TERMINATE="terminate",e.ANSWER="answer",e.OFFER="offer",e.CANDIDATE="candidate",e.JSONRPC="jsonrpc",e.WALLET_INFO="wallet_info",e.WALLET_INIT="wallet_init",e.ORIGINATOR_INFO="originator_info",e.PAUSE="pause",e.OTP="otp",e.AUTHORIZED="authorized",e.PING="ping",e.READY="ready"}(Ld||(Ld={})),function(e){e.REQUEST="sdk_connect_request_started",e.REQUEST_MOBILE="sdk_connect_request_started_mobile",e.RECONNECT="sdk_reconnect_request_started",e.CONNECTED="sdk_connection_established",e.CONNECTED_MOBILE="sdk_connection_established_mobile",e.AUTHORIZED="sdk_connection_authorized",e.REJECTED="sdk_connection_rejected",e.TERMINATED="sdk_connection_terminated",e.DISCONNECTED="sdk_disconnected",e.SDK_USE_EXTENSION="sdk_use_extension",e.SDK_RPC_REQUEST="sdk_rpc_request",e.SDK_RPC_REQUEST_RECEIVED="sdk_rpc_request_received",e.SDK_RPC_REQUEST_DONE="sdk_rpc_request_done",e.SDK_EXTENSION_UTILIZED="sdk_extension_utilized",e.SDK_USE_INAPP_BROWSER="sdk_use_inapp_browser"}(Bd||(Bd={}));const Ud=(a,t,p)=>e(void 0,void 0,void 0,(function*(){var e,d,i,n,r,o;const{remote:s,state:l}=a,{channelId:m,isOriginator:c}=l;if("error_terminated"===t)return bd.SocketService(`handleJoinChannelResults: Channel ${m} terminated`),void a.emit(Pd.TERMINATE);if(!p)return void bd.SocketService(`handleJoinChannelResults: No result for channel ${m}`);const{persistence:u,walletKey:h,rejected:v}=p;if(bd.SocketService(`handleJoinChannelResults: Channel ${m} persistence=${u} walletKey=${h} rejected=${v}`),v)return bd.SocketService(`handleJoinChannelResults: Channel ${m} rejected`),yield a.remote.disconnect({terminate:!0}),a.remote.emit(Pd.REJECTED,{channelId:m}),void a.remote.emitServiceStatusEvent();if(h&&!(null===(e=s.state.channelConfig)||void 0===e?void 0:e.otherKey)){a.getKeyExchange().setOtherPublicKey(h),null===(d=a.state.keyExchange)||void 0===d||d.setKeysExchanged(!0),s.state.ready=!0,s.state.authorized=!0,s.emit(Pd.AUTHORIZED);const{communicationLayer:e,storageManager:t}=s.state,p=Object.assign(Object.assign({},s.state.channelConfig),{channelId:null!==(i=s.state.channelId)&&void 0!==i?i:"",validUntil:Date.now()+kd,localKey:null==e?void 0:e.getKeyInfo().ecies.private,otherKey:h});a.sendMessage({type:Vd.KEY_HANDSHAKE_ACK}).catch((e=>{})),null===(n=a.state.socket)||void 0===n||n.emit(Ld.PING,{id:m,clientType:c?"dapp":"wallet",context:"on_channel_reconnect",message:""}),yield null==t?void 0:t.persistChannelConfig(p),s.emitServiceStatusEvent(),s.setConnectionStatus(Md.LINKED)}u&&(a.emit(Pd.CHANNEL_PERSISTENCE),null===(r=a.state.keyExchange)||void 0===r||r.setKeysExchanged(!0),s.state.ready=!0,s.state.authorized=!0,s.emit(Pd.AUTHORIZED),Nd(Object.assign(Object.assign({id:null!=m?m:"",event:c?Bd.CONNECTED:Bd.CONNECTED_MOBILE},a.remote.state.originatorInfo),{sdkVersion:a.remote.state.sdkVersion,commLayer:a.state.communicationLayerPreference,commLayerVersion:Cd.version,walletVersion:null===(o=a.remote.state.walletInfo)||void 0===o?void 0:o.version}),l.communicationServerUrl).catch((e=>{})))})),Fd=e=>new Promise((a=>{setTimeout(a,e)})),$d=(a,t,...p)=>e(void 0,[a,t,...p],void 0,(function*(e,a,t=200){let p;const d=Date.now();let i=!1;for(;!i;){if(i=Date.now()-d>3e5,p=a[e],void 0!==p.elapsedTime)return p;yield Fd(t)}throw new Error(`RPC ${e} timed out`)})),Hd=a=>e(void 0,void 0,void 0,(function*(){const{state:t}=a,{socket:p,channelId:d,context:i,isOriginator:n,isReconnecting:r}=t;if(r)return bd.SocketService("[SocketService: reconnectSocket()] Reconnection already in progress, skipping",a),!1;if(!p)return bd.SocketService("[SocketService: reconnectSocket()] socket is not defined",a),!1;if(!d)return!1;const{connected:o}=p;t.isReconnecting=!0,t.reconnectionAttempts=0,bd.SocketService(`[SocketService: reconnectSocket()] connected=${o} trying to reconnect after socketio disconnection`,a);try{for(;3>t.reconnectionAttempts;){if(bd.SocketService(`[SocketService: reconnectSocket()] Attempt ${t.reconnectionAttempts+1} of 3`,a),yield Fd(200),p.connected)return bd.SocketService("Socket already connected --- ping to retrieve messages"),p.emit(Ld.PING,{id:d,clientType:n?"dapp":"wallet",context:"on_channel_config",message:""}),!0;t.resumed=!0,p.connect(),a.emit(Pd.SOCKET_RECONNECT);try{if(yield new Promise(((t,r)=>{p.emit(Pd.JOIN_CHANNEL,{channelId:d,context:`${i}connect_again`,clientType:n?"dapp":"wallet"},((p,d)=>e(void 0,void 0,void 0,(function*(){try{yield Ud(a,p,d),t()}catch(e){r(e)}}))))})),yield Fd(100),p.connected)return bd.SocketService(`Reconnection successful on attempt ${t.reconnectionAttempts+1}`),!0}catch(e){bd.SocketService(`Error during reconnection attempt ${t.reconnectionAttempts+1}:`,e)}t.reconnectionAttempts+=1,3>t.reconnectionAttempts&&(yield Fd(200))}return bd.SocketService("Failed to reconnect after 3 attempts"),!1}finally{t.isReconnecting=!1,t.reconnectionAttempts=0}}));function zd(a,t){return e(this,void 0,void 0,(function*(){var e;const p=null===(e=a.state.keyExchange)||void 0===e?void 0:e.encryptMessage(JSON.stringify(t)),d={id:a.state.channelId,context:a.state.context,clientType:a.state.isOriginator?"dapp":"wallet",message:p,plaintext:a.state.hasPlaintext?JSON.stringify(t):void 0};return bd.SocketService(`[SocketService: encryptAndSendMessage()] context=${a.state.context}`,d),t.type===Ld.TERMINATE&&(a.state.manualDisconnect=!0),new Promise(((e,t)=>{var p;null===(p=a.state.socket)||void 0===p||p.emit(Pd.MESSAGE,d,((a,p)=>{var d;a&&(bd.SocketService(`[SocketService: encryptAndSendMessage()] error=${a}`),t(a)),bd.SocketService("[encryptAndSendMessage] response",p),e(null!==(d=null==p?void 0:p.success)&&void 0!==d&&d)}))}))}))}var qd;!function(e){e.RPC_CHECK="rpcCheck",e.SKIPPED_RPC="skippedRpc"}(qd||(qd={}));const Wd=["eth_sendTransaction","eth_signTypedData","eth_signTransaction","personal_sign","wallet_requestPermissions","wallet_switchEthereumChain","eth_signTypedData_v3","eth_signTypedData_v4","metamask_connectSign","metamask_connectWith","metamask_batch"].map((e=>e.toLowerCase()));const Gd=[{event:Pd.CLIENTS_CONNECTED,handler:function(a,t){return p=>e(this,void 0,void 0,(function*(){var e,p,d,i,n,r,o,s,l,m,c;const u=null!==(p=null===(e=a.remote.state.channelConfig)||void 0===e?void 0:e.relayPersistence)&&void 0!==p&&p;if(bd.SocketService(`[SocketService: handleClientsConnected()] context=${a.state.context} on 'clients_connected-${t}' relayPersistence=${u} resumed=${a.state.resumed}  clientsPaused=${a.state.clientsPaused} keysExchanged=${null===(d=a.state.keyExchange)||void 0===d?void 0:d.areKeysExchanged()} isOriginator=${a.state.isOriginator}`),a.emit(Pd.CLIENTS_CONNECTED,{isOriginator:a.state.isOriginator,keysExchanged:null===(i=a.state.keyExchange)||void 0===i?void 0:i.areKeysExchanged(),context:a.state.context}),a.state.resumed)a.state.isOriginator||(bd.SocketService(`[SocketService: handleClientsConnected()] context=${a.state.context} 'clients_connected' / keysExchanged=${null===(n=a.state.keyExchange)||void 0===n?void 0:n.areKeysExchanged()} -- backward compatibility`),null===(r=a.state.keyExchange)||void 0===r||r.start({isOriginator:null!==(o=a.state.isOriginator)&&void 0!==o&&o})),a.state.resumed=!1;else if(a.state.clientsPaused)bd.SocketService("[SocketService: handleClientsConnected()] 'clients_connected' skip sending originatorInfo on pause");else if(!a.state.isOriginator){const e=!u;bd.SocketService(`[SocketService: handleClientsConnected()] context=${a.state.context} on 'clients_connected' / keysExchanged=${null===(s=a.state.keyExchange)||void 0===s?void 0:s.areKeysExchanged()} -- force=${e} -- backward compatibility`),bd.SocketService(`[SocketService: handleClientsConnected()] context=${a.state.context} on 'clients_connected' / keysExchanged=${null===(l=a.state.keyExchange)||void 0===l?void 0:l.areKeysExchanged()} -- force=${e} -- backward compatibility`),null===(m=a.state.keyExchange)||void 0===m||m.start({isOriginator:null!==(c=a.state.isOriginator)&&void 0!==c&&c,force:e})}a.state.clientsConnected=!0,a.state.clientsPaused=!1}))}},{event:Pd.CHANNEL_CREATED,handler:function(e,a){return t=>{bd.SocketService(`[SocketService: handleChannelCreated()] context=${e.state.context} on 'channel_created-${a}'`,t),e.emit(Pd.CHANNEL_CREATED,t)}}},{event:Pd.CLIENTS_DISCONNECTED,handler:function(e,a){return()=>{var t;e.state.clientsConnected=!1,bd.SocketService(`[SocketService: handlesClientsDisconnected()] context=${e.state.context} on 'clients_disconnected-${a}'`),e.remote.state.relayPersistence?bd.SocketService(`[SocketService: handlesClientsDisconnected()] context=${e.state.context} on 'clients_disconnected-${a}' - relayPersistence enabled, skipping key exchange cleanup.`):(e.state.isOriginator&&!e.state.clientsPaused&&(null===(t=e.state.keyExchange)||void 0===t||t.clean()),e.emit(Pd.CLIENTS_DISCONNECTED,a))}}},{event:Pd.CONFIG,handler:function(a,t){return p=>e(this,void 0,void 0,(function*(){var e,d,i;bd.SocketService(`[SocketService: handleChannelConfig()] update relayPersistence on 'config-${t}'`,p);const{persistence:n,walletKey:r}=p;a.state.isOriginator&&a.remote.state.channelConfig?(p.walletKey&&!a.remote.state.channelConfig.otherKey&&(bd.SocketService(`Setting wallet key ${r}`),a.remote.state.channelConfig.otherKey=r,a.getKeyExchange().setOtherPublicKey(p.walletKey),null===(e=a.state.keyExchange)||void 0===e||e.setKeysExchanged(!0),yield a.remote.sendMessage({type:Vd.KEY_HANDSHAKE_ACK}),yield a.remote.sendMessage({type:Ld.PING}),yield null===(d=a.remote.state.storageManager)||void 0===d?void 0:d.persistChannelConfig(a.remote.state.channelConfig)),!0!==n||a.remote.state.channelConfig.relayPersistence||(bd.SocketService(`Setting relay persistence ${n}`),a.remote.state.channelConfig.relayPersistence=n,a.remote.state.relayPersistence=!0,a.remote.emit(Pd.CHANNEL_PERSISTENCE),a.remote.state.authorized=!0,a.remote.state.ready=!0,a.remote.emit(Pd.AUTHORIZED),yield null===(i=a.remote.state.storageManager)||void 0===i?void 0:i.persistChannelConfig(a.remote.state.channelConfig))):a.state.isOriginator||p.persistence&&(a.remote.state.relayPersistence=!0,a.remote.emit(Pd.CHANNEL_PERSISTENCE))}))}},{event:Pd.MESSAGE,handler:function(e,a){return t=>{var p,d,i,n,r,o,s,l,m,c,u,h,v,f,g,w,y,b;const{ackId:S,message:_,error:E}=t,N=null!==(p=e.remote.state.relayPersistence)&&void 0!==p&&p;if(bd.SocketService(`[SocketService handleMessage()]  relayPersistence=${N}  context=${e.state.context} on 'message' ${a} keysExchanged=${null===(d=e.state.keyExchange)||void 0===d?void 0:d.areKeysExchanged()}`,t),E)throw bd.SocketService(`\n      [SocketService handleMessage()] context=${e.state.context}::on 'message' error=${E}`),new Error(E);const T="string"==typeof _;if(!T&&(null==_?void 0:_.type)===Vd.KEY_HANDSHAKE_START){if(N)return;return bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' received HANDSHAKE_START isOriginator=${e.state.isOriginator}`,_),void(null===(i=e.state.keyExchange)||void 0===i||i.start({isOriginator:null!==(n=e.state.isOriginator)&&void 0!==n&&n,force:!0}))}if(!T&&(null===(r=null==_?void 0:_.type)||void 0===r?void 0:r.startsWith("key_handshake"))){if(N)return;return bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' emit KEY_EXCHANGE`,_),void e.emit(Id.KEY_EXCHANGE,{message:_,context:e.state.context})}if(T&&!(null===(o=e.state.keyExchange)||void 0===o?void 0:o.areKeysExchanged())){let a=!1;try{bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' trying to decrypt message`),null===(s=e.state.keyExchange)||void 0===s||s.decryptMessage(_),a=!0}catch(a){bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' error`,a)}if(!a)return e.state.isOriginator?null===(m=e.state.keyExchange)||void 0===m||m.start({isOriginator:null!==(c=e.state.isOriginator)&&void 0!==c&&c}):e.sendMessage({type:Vd.KEY_HANDSHAKE_START}).catch((e=>{})),void bd.SocketService(`Message ignored because invalid key exchange status. step=${null===(u=e.state.keyExchange)||void 0===u?void 0:u.getKeyInfo().step}`,null===(h=e.state.keyExchange)||void 0===h?void 0:h.getKeyInfo(),_);bd.SocketService("Invalid key exchange status detected --- updating it."),null===(l=e.state.keyExchange)||void 0===l||l.setKeysExchanged(!0)}else if(!T&&(null==_?void 0:_.type))return void e.emit(Pd.MESSAGE,_);if(!T)return void e.emit(Pd.MESSAGE,_);const C=null===(v=e.state.keyExchange)||void 0===v?void 0:v.decryptMessage(_),D=JSON.parse(null!=C?C:"{}");if(S&&(null==S?void 0:S.length)>0&&(bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' ackid=${S} channelId=${a}`),null===(f=e.state.socket)||void 0===f||f.emit(Pd.MESSAGE_ACK,{ackId:S,channelId:a,clientType:e.state.isOriginator?"dapp":"wallet"})),e.state.clientsPaused=(null==D?void 0:D.type)===Ld.PAUSE,e.state.isOriginator&&D.data){const a=D.data,t=e.state.rpcMethodTracker[a.id];if(t){const p=Date.now()-t.timestamp;bd.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' received answer for id=${a.id} method=${t.method} responseTime=${p}`,D),e.remote.state.analytics&&Wd.includes(t.method.toLowerCase())&&Nd(Object.assign(Object.assign({id:null!==(g=e.remote.state.channelId)&&void 0!==g?g:"",event:Bd.SDK_RPC_REQUEST_DONE,sdkVersion:e.remote.state.sdkVersion,commLayerVersion:Cd.version},e.remote.state.originatorInfo),{walletVersion:null===(w=e.remote.state.walletInfo)||void 0===w?void 0:w.version,params:{method:t.method,from:"mobile"}}),e.remote.state.communicationServerUrl).catch((e=>{}));const d=Object.assign(Object.assign({},t),{result:a.result,error:a.error?{code:null===(y=a.error)||void 0===y?void 0:y.code,message:null===(b=a.error)||void 0===b?void 0:b.message}:void 0,elapsedTime:p});e.state.rpcMethodTracker[a.id]=d,e.emit(Pd.RPC_UPDATE,d)}}e.emit(Pd.MESSAGE,{message:D})}}},{event:Pd.REJECTED,handler:function(a,t){return p=>e(this,void 0,void 0,(function*(){var e;a.state.isOriginator&&!a.remote.state.ready?(bd.SocketService(`[SocketService: handleChannelRejected()] context=${a.state.context} channelId=${t} isOriginator=${a.state.isOriginator} ready=${a.remote.state.ready}`,a.remote.state.originatorInfo),Nd(Object.assign(Object.assign({id:t,event:Bd.REJECTED},a.remote.state.originatorInfo),{sdkVersion:a.remote.state.sdkVersion,commLayer:a.state.communicationLayerPreference,commLayerVersion:Cd.version,walletVersion:null===(e=a.remote.state.walletInfo)||void 0===e?void 0:e.version}),a.remote.state.communicationServerUrl).catch((e=>{})),yield a.remote.disconnect({terminate:!0}),a.remote.emit(Pd.REJECTED,{channelId:t}),a.remote.setConnectionStatus(Md.DISCONNECTED)):bd.SocketService(`[SocketService: handleChannelRejected()] SKIP -- channelId=${t} isOriginator=${a.state.isOriginator} ready=${a.remote.state.ready}`)}))}},{event:"clients_waiting_to_join",handler:function(e,a){return t=>{bd.SocketService(`[SocketService: handleClientsWaitingToJoin()] context=${e.state.context} on 'clients_waiting_to_join-${a}'`,t),e.emit(Pd.CLIENTS_WAITING,t)}}}],Yd=[{event:Pd.KEY_INFO,handler:function(e){return a=>{bd.SocketService("[SocketService: handleKeyInfo()] on 'KEY_INFO'",a),e.emit(Pd.KEY_INFO,a)}}},{event:Pd.KEYS_EXCHANGED,handler:function(e){return()=>{var a,t,p;bd.SocketService(`[SocketService: handleKeysExchanged()] on 'keys_exchanged' keyschanged=${null===(a=e.state.keyExchange)||void 0===a?void 0:a.areKeysExchanged()}`);const{channelConfig:d}=e.remote.state;if(d){const a=e.getKeyExchange().getKeyInfo().ecies;d.localKey=a.private,d.otherKey=a.otherPubKey,e.remote.state.channelConfig=d,null===(t=e.remote.state.storageManager)||void 0===t||t.persistChannelConfig(d).catch((e=>{}))}e.emit(Pd.KEYS_EXCHANGED,{keysExchanged:null===(p=e.state.keyExchange)||void 0===p?void 0:p.areKeysExchanged(),isOriginator:e.state.isOriginator});const i={keyInfo:e.getKeyInfo()};e.emit(Pd.SERVICE_STATUS,i)}}}];function Jd(e,a){bd.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} setting socket listeners for channel ${a}...`);const{socket:t}=e.state,{keyExchange:p}=e.state;t&&e.state.isOriginator&&(e.state.debug&&(null==t||t.io.on("error",(a=>{bd.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=error`,a)})),null==t||t.io.on("reconnect",(a=>{bd.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect`,a),Hd(e).catch((e=>{}))})),null==t||t.io.on("reconnect_error",(a=>{bd.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect_error`,a)})),null==t||t.io.on("reconnect_failed",(()=>{bd.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect_failed`)}))),null==t||t.on("disconnect",(a=>(bd.SocketService(`[SocketService: setupChannelListener()] on 'disconnect' -- MetaMaskSDK socket disconnected '${a}' begin recovery...`),function(e){return a=>{bd.SocketService(`[SocketService: handleDisconnect()] on 'disconnect' manualDisconnect=${e.state.manualDisconnect}`,a),e.state.manualDisconnect||(e.emit(Pd.SOCKET_DISCONNECTED),Hd(e).catch((e=>{})))}}(e)(a))))),Gd.forEach((({event:p,handler:d})=>{null==t||t.on(`${p}-${a}`,d(e,a))})),Yd.forEach((({event:a,handler:t})=>{null==p||p.on(a,t(e))})),e.state.setupChannelListeners=!0}class Zd extends c{constructor(e){super(),this.state={clientsConnected:!1,clientsPaused:!1,manualDisconnect:!1,lastRpcId:void 0,rpcMethodTracker:{},hasPlaintext:!1,communicationServerUrl:"",focusListenerAdded:!1,removeFocusListener:void 0,isReconnecting:!1,reconnectionAttempts:0},this.options=e;const{reconnect:a,communicationLayerPreference:t,communicationServerUrl:p,context:d,remote:i,logging:n}=e;this.state.resumed=a,this.state.context=d,this.state.isOriginator=i.state.isOriginator,this.state.communicationLayerPreference=t,this.state.debug=!0===(null==n?void 0:n.serviceLayer),this.remote=i,!0===(null==n?void 0:n.serviceLayer)&&r.enable("SocketService:Layer"),this.state.communicationServerUrl=p,this.state.hasPlaintext=this.state.communicationServerUrl!==Dd&&!0===(null==n?void 0:n.plaintext),bd.SocketService(`[SocketService: constructor()] Socket IO url: ${this.state.communicationServerUrl}`),this.initSocket()}initSocket(){var e;const{otherPublicKey:a,ecies:t,logging:p}=this.options,d={autoConnect:!1,transports:Ad,withCredentials:!0},i=this.state.communicationServerUrl;bd.SocketService(`[SocketService: initSocket()] Socket IO url: ${i}`),this.state.socket=v(i,d),function(e){if("undefined"!=typeof window&&"undefined"!=typeof document&&(bd.SocketService(`[SocketService: setupSocketFocusListener()] hasFocus=${document.hasFocus()}`,e),!e.state.focusListenerAdded)){const a=()=>{bd.SocketService("Document has focus --- reconnecting socket"),Hd(e).catch((e=>{}))};window.addEventListener("focus",a),e.state.focusListenerAdded=!0,e.state.removeFocusListener=()=>{window.removeEventListener("focus",a),e.state.focusListenerAdded=!1}}}(this);const n={communicationLayer:this,otherPublicKey:a,sendPublicKey:!1,context:null!==(e=this.state.context)&&void 0!==e?e:"",ecies:t,logging:p};this.state.keyExchange=new Kd(n)}resetKeys(){return bd.SocketService("[SocketService: resetKeys()] Resetting keys."),void(null===(e=this.state.keyExchange)||void 0===e||e.resetKeys());var e}createChannel(){return e(this,void 0,void 0,(function*(){return function(a){return e(this,void 0,void 0,(function*(){var t,p,d;if(bd.SocketService(`[SocketService: createChannel()] context=${a.state.context}`),a.state.socket||a.initSocket(),null===(t=a.state.socket)||void 0===t?void 0:t.connected)throw new Error("socket already connected");null===(p=a.state.socket)||void 0===p||p.connect(),a.state.manualDisconnect=!1,a.state.isOriginator=!0;const i=h();a.state.channelId=i,Jd(a,i),yield new Promise(((t,p)=>{var d;null===(d=a.state.socket)||void 0===d||d.emit(Pd.JOIN_CHANNEL,{channelId:i,context:`${a.state.context}createChannel`,clientType:"dapp"},((d,i)=>e(this,void 0,void 0,(function*(){try{yield Ud(a,d,i),t()}catch(e){p(e)}}))))}));const n=null===(d=a.state.keyExchange)||void 0===d?void 0:d.getKeyInfo();return{channelId:i,pubKey:(null==n?void 0:n.ecies.public)||"",privKey:(null==n?void 0:n.ecies.private)||""}}))}(this)}))}connectToChannel({channelId:a,withKeyExchange:t=!1,authorized:p}){return function(a){return e(this,arguments,void 0,(function*({options:a,instance:t}){const{channelId:p,authorized:d,withKeyExchange:i}=a,{state:n,remote:r}=t,{isOriginator:o=!1,socket:s,keyExchange:l}=n,{channelConfig:m}=r.state;if(null==s?void 0:s.connected)throw new Error("socket already connected");if(o&&(null==m?void 0:m.relayPersistence)){const{localKey:e,otherKey:a}=m;e&&a&&(null==l||l.setRelayPersistence({localKey:e,otherKey:a}))}return Object.assign(n,{manualDisconnect:!1,withKeyExchange:i,isOriginator:o,channelId:p}),null==s||s.connect(),Jd(t,p),!o&&d&&(null==l||l.setKeysExchanged(!0),Object.assign(r.state,{ready:!0,authorized:!0})),new Promise((a=>{var i;const r=null===(i=null==l?void 0:l.getKeyInfo())||void 0===i?void 0:i.ecies.public;null==s||s.emit(Pd.JOIN_CHANNEL,{channelId:p,context:`${n.context}_connectToChannel`,clientType:o?"dapp":"wallet",publicKey:d&&!o?r:void 0},((p,d)=>e(this,void 0,void 0,(function*(){yield Ud(t,p,d),a()}))))}))}))}({options:{channelId:a,withKeyExchange:t,authorized:p},instance:this})}getKeyInfo(){return this.state.keyExchange.getKeyInfo()}keyCheck(){var e,a;null===(a=(e=this).state.socket)||void 0===a||a.emit(Pd.MESSAGE,{id:e.state.channelId,context:e.state.context,message:{type:Vd.KEY_HANDSHAKE_CHECK,pubkey:e.getKeyInfo().ecies.otherPubKey}})}getKeyExchange(){return this.state.keyExchange}sendMessage(a){return e(this,void 0,void 0,(function*(){return function(a,t){return e(this,void 0,void 0,(function*(){var p,d,i;if(!a.state.channelId)throw bd.SocketService("handleSendMessage: no channelId - Create a channel first"),new Error("Create a channel first");if(bd.SocketService(`[SocketService: handleSendMessage()] context=${a.state.context} areKeysExchanged=${null===(p=a.state.keyExchange)||void 0===p?void 0:p.areKeysExchanged()}`,t),null===(d=null==t?void 0:t.type)||void 0===d?void 0:d.startsWith("key_handshake"))return function(e,a){var t;bd.SocketService(`[SocketService: handleKeyHandshake()] context=${e.state.context}`,a),null===(t=e.state.socket)||void 0===t||t.emit(Pd.MESSAGE,{id:e.state.channelId,context:e.state.context,clientType:e.state.isOriginator?"dapp":"wallet",message:a})}(a,t),!0;!function(e,a){var t;if(!(null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged())&&!e.remote.state.relayPersistence)throw bd.SocketService(`[SocketService: validateKeyExchange()] context=${e.state.context} ERROR keys not exchanged`,a),new Error("Keys not exchanged BBB")}(a,t),function(e,a){var t;const p=null!==(t=null==a?void 0:a.method)&&void 0!==t?t:"",d=null==a?void 0:a.id;e.state.isOriginator&&d&&(e.state.rpcMethodTracker[d]={id:d,timestamp:Date.now(),method:p},e.emit(Pd.RPC_UPDATE,e.state.rpcMethodTracker[d]))}(a,t);const n=yield zd(a,t);return a.remote.state.analytics&&a.remote.state.isOriginator&&t.method&&Wd.includes(t.method.toLowerCase())&&Nd({id:null!==(i=a.remote.state.channelId)&&void 0!==i?i:"",event:Bd.SDK_RPC_REQUEST,params:{method:t.method,from:"mobile"}},a.remote.state.communicationServerUrl).catch((e=>{})),function(a,t){return e(this,void 0,void 0,(function*(){var p;const d=null==t?void 0:t.id,i=null!==(p=null==t?void 0:t.method)&&void 0!==p?p:"";if(a.state.isOriginator&&d)try{const p=$d(d,a.state.rpcMethodTracker,200).then((e=>({type:qd.RPC_CHECK,result:e}))),n=(()=>e(this,void 0,void 0,(function*(){const t=yield(a=>e(void 0,[a],void 0,(function*({rpcId:e,instance:a}){for(;a.state.lastRpcId===e||void 0===a.state.lastRpcId;)yield Fd(200);return a.state.lastRpcId})))({instance:a,rpcId:d}),p=yield $d(t,a.state.rpcMethodTracker,200);return{type:qd.SKIPPED_RPC,result:p}})))(),r=yield Promise.race([p,n]);if(r.type===qd.RPC_CHECK){const e=r.result;bd.SocketService(`[SocketService:handleRpcReplies()] id=${t.id} ${i} ( ${e.elapsedTime} ms)`,e.result)}else{if(r.type!==qd.SKIPPED_RPC)throw new Error(`Error handling RPC replies for ${d}`);{const e=Object.assign(Object.assign({},a.state.rpcMethodTracker[d]),{error:new Error("SDK_CONNECTION_ISSUE")});a.emit(Pd.RPC_UPDATE,e);const t={data:Object.assign(Object.assign({},e),{jsonrpc:"2.0"}),name:"metamask-provider"};a.emit(Pd.MESSAGE,{message:t})}}}catch(e){throw e}}))}(a,t).catch((e=>{})),n}))}(this,a)}))}ping(){return function(a){return e(this,void 0,void 0,(function*(){var e,t;bd.SocketService(`[SocketService: ping()] context=${a.state.context} originator=${a.state.isOriginator} keysExchanged=${null===(e=a.state.keyExchange)||void 0===e?void 0:e.areKeysExchanged()}`),null===(t=a.state.socket)||void 0===t||t.emit(Ld.PING,{id:a.state.channelId,context:"ping",clientType:a.remote.state.isOriginator?"dapp":"wallet",message:""})}))}(this)}pause(){return function(a){return e(this,void 0,void 0,(function*(){var e,t;bd.SocketService(`[SocketService: pause()] context=${a.state.context}`),a.state.manualDisconnect=!0,(null===(e=a.state.keyExchange)||void 0===e?void 0:e.areKeysExchanged())&&(yield a.sendMessage({type:Ld.PAUSE})),null===(t=a.state.socket)||void 0===t||t.disconnect()}))}(this)}isConnected(){var e;return null===(e=this.state.socket)||void 0===e?void 0:e.connected}resume(){return function(a){return e(this,void 0,void 0,(function*(){const{state:t,remote:p}=a,{socket:d,channelId:i,context:n,keyExchange:r,isOriginator:o}=t,{isOriginator:s}=p.state;if(bd.SocketService(`[SocketService: resume()] channelId=${i} context=${n} connected=${null==d?void 0:d.connected} manualDisconnect=${t.manualDisconnect} resumed=${t.resumed} keysExchanged=${null==r?void 0:r.areKeysExchanged()}`),!i)throw bd.SocketService("[SocketService: resume()] channelId is not defined"),new Error("ChannelId is not defined");(null==d?void 0:d.connected)?(bd.SocketService("[SocketService: resume()] already connected."),d.emit(Ld.PING,{id:i,clientType:s?"dapp":"wallet",context:"on_channel_config",message:""}),p.hasRelayPersistence()||(null==r?void 0:r.areKeysExchanged())||(o?yield a.sendMessage({type:Ld.READY}):null==r||r.start({isOriginator:!1}))):(null==d||d.connect(),bd.SocketService(`[SocketService: resume()] after connecting socket --\x3e connected=${null==d?void 0:d.connected}`),null==d||d.emit(Pd.JOIN_CHANNEL,{channelId:i,context:`${n}_resume`,clientType:s?"dapp":"wallet"},((t,p)=>e(this,void 0,void 0,(function*(){try{yield Ud(a,t,p)}catch(e){}}))))),t.manualDisconnect=!1,t.resumed=!0}))}(this)}getRPCMethodTracker(){return this.state.rpcMethodTracker}disconnect(e){return function(e,a){var t,p,d,i,n;bd.SocketService(`[SocketService: disconnect()] context=${e.state.context}`,a),(null==a?void 0:a.terminate)&&(null===(p=(t=e.state).removeFocusListener)||void 0===p||p.call(t),e.state.channelId=a.channelId,null===(d=e.state.socket)||void 0===d||d.removeAllListeners(),null===(i=e.state.keyExchange)||void 0===i||i.clean(),e.remote.state.ready=!1,e.state.socket=void 0,e.state.rpcMethodTracker={}),e.state.manualDisconnect=!0,null===(n=e.state.socket)||void 0===n||n.disconnect()}(this,e)}}var Xd,Qd,ei;function ai(a){return()=>e(this,void 0,void 0,(function*(){var t,p,d;const{state:i}=a;if(i.authorized)return;yield(()=>e(this,void 0,void 0,(function*(){for(;!i.walletInfo;)yield Fd(500)})))();const n="7.3".localeCompare((null===(t=i.walletInfo)||void 0===t?void 0:t.version)||"");if(bd.RemoteCommunication(`[RemoteCommunication: handleAuthorizedEvent()] HACK 'authorized' version=${null===(p=i.walletInfo)||void 0===p?void 0:p.version} compareValue=${n}`),1!==n)return;const r=i.platformType===Qd.MobileWeb||i.platformType===Qd.ReactNative||i.platformType===Qd.MetaMaskMobileWebview;bd.RemoteCommunication(`[RemoteCommunication: handleAuthorizedEvent()] HACK 'authorized' platform=${i.platformType} secure=${r} channel=${i.channelId} walletVersion=${null===(d=i.walletInfo)||void 0===d?void 0:d.version}`),r&&(i.authorized=!0,a.emit(Pd.AUTHORIZED))}))}function ti(e){return a=>{const{state:t}=e;bd.RemoteCommunication(`[RemoteCommunication: handleChannelCreatedEvent()] context=${t.context} on 'channel_created' channelId=${a}`),e.emit(Pd.CHANNEL_CREATED,a)}}function pi(e,a){return()=>{var t,p,d,i;const{state:n}=e;bd.RemoteCommunication(`[RemoteCommunication: handleClientsConnectedEvent()] on 'clients_connected' channel=${n.channelId} keysExchanged=${null===(p=null===(t=n.communicationLayer)||void 0===t?void 0:t.getKeyInfo())||void 0===p?void 0:p.keysExchanged}`),n.analytics&&Nd(Object.assign(Object.assign({id:null!==(d=n.channelId)&&void 0!==d?d:"",event:n.reconnection?Bd.RECONNECT:n.isOriginator?Bd.REQUEST:Bd.REQUEST_MOBILE},n.originatorInfo),{commLayer:a,sdkVersion:n.sdkVersion,walletVersion:null===(i=n.walletInfo)||void 0===i?void 0:i.version,commLayerVersion:Cd.version}),n.communicationServerUrl).catch((e=>{})),n.clientsConnected=!0,n.originatorInfoSent=!1,e.emit(Pd.CLIENTS_CONNECTED)}}function di(e){return a=>{const{state:t}=e;bd.RemoteCommunication(`[RemoteCommunication: handleClientsDisconnectedEvent()] context=${t.context} on 'clients_disconnected' channelId=${a}`),t.relayPersistence||(t.clientsConnected=!1,t.ready=!1,t.authorized=!1),e.emit(Pd.CLIENTS_DISCONNECTED,t.channelId),e.setConnectionStatus(Md.DISCONNECTED)}}function ii(e){return a=>{var t;const{state:p}=e;if(bd.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] context=${p.context} on 'clients_waiting' numberUsers=${a} ready=${p.ready} autoStarted=${p.originatorConnectStarted}`),e.setConnectionStatus(Md.WAITING),e.emit(Pd.CLIENTS_WAITING,a),p.originatorConnectStarted){bd.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] on 'clients_waiting' watch autoStarted=${p.originatorConnectStarted} timeout`,p.autoConnectOptions);const a=(null===(t=p.autoConnectOptions)||void 0===t?void 0:t.timeout)||3e3,d=setTimeout((()=>{bd.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] setTimeout(${a}) terminate channelConfig`,p.autoConnectOptions),p.originatorConnectStarted=!1,p.ready||e.setConnectionStatus(Md.TIMEOUT),clearTimeout(d)}),a)}}}function ni(e,a){return t=>{var p,d,i,n,r,o,s,l;const{state:m}=e;if(bd.RemoteCommunication(`[RemoteCommunication: handleKeysExchangedEvent()] context=${m.context} on commLayer.'keys_exchanged' channel=${m.channelId}`,t),null===(d=null===(p=m.communicationLayer)||void 0===p?void 0:p.getKeyInfo())||void 0===d?void 0:d.keysExchanged){const a=Object.assign(Object.assign({},m.channelConfig),{channelId:null!==(i=m.channelId)&&void 0!==i?i:"",validUntil:(null===(n=m.channelConfig)||void 0===n?void 0:n.validUntil)||kd,localKey:m.communicationLayer.getKeyInfo().ecies.private,otherKey:m.communicationLayer.getKeyInfo().ecies.otherPubKey});null===(r=m.storageManager)||void 0===r||r.persistChannelConfig(a).catch((e=>{})),e.setConnectionStatus(Md.LINKED)}!function(e,a){var t,p,d,i,n,r,o,s;const{state:l}=e;bd.RemoteCommunication(`[RemoteCommunication: setLastActiveDate()] channel=${l.channelId}`,a);const m=Object.assign(Object.assign({},l.channelConfig),{channelId:null!==(t=l.channelId)&&void 0!==t?t:"",validUntil:null!==(d=null===(p=l.channelConfig)||void 0===p?void 0:p.validUntil)&&void 0!==d?d:0,relayPersistence:l.relayPersistence,localKey:null===(n=null===(i=l.communicationLayer)||void 0===i?void 0:i.state.keyExchange)||void 0===n?void 0:n.getKeyInfo().ecies.private,otherKey:null===(o=null===(r=l.communicationLayer)||void 0===r?void 0:r.state.keyExchange)||void 0===o?void 0:o.getKeyInfo().ecies.otherPubKey,lastActive:a.getTime()});null===(s=l.storageManager)||void 0===s||s.persistChannelConfig(m)}(e,new Date),m.analytics&&m.channelId&&Nd(Object.assign(Object.assign({id:m.channelId,event:t.isOriginator?Bd.CONNECTED:Bd.CONNECTED_MOBILE},m.originatorInfo),{sdkVersion:m.sdkVersion,commLayer:a,commLayerVersion:Cd.version,walletVersion:null===(o=m.walletInfo)||void 0===o?void 0:o.version}),m.communicationServerUrl).catch((e=>{})),m.isOriginator=t.isOriginator,t.isOriginator||(null===(s=m.communicationLayer)||void 0===s||s.sendMessage({type:Ld.READY}),m.ready=!0,m.paused=!1),t.isOriginator&&!m.originatorInfoSent&&(null===(l=m.communicationLayer)||void 0===l||l.sendMessage({type:Ld.ORIGINATOR_INFO,originatorInfo:m.originatorInfo,originator:m.originatorInfo}),m.originatorInfoSent=!0)}}function ri(a){return t=>{let p=t;t.message&&(p=p.message),function(a,t){const{state:p}=t;if(bd.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] context=${p.context} on 'message' typeof=${typeof a}`,a),t.state.ready=!0,p.isOriginator||a.type!==Ld.ORIGINATOR_INFO)if(p.isOriginator&&a.type===Ld.WALLET_INFO)!function(e,a){const{state:t}=e;t.walletInfo=a.walletInfo,t.paused=!1}(t,a);else{if(p.isOriginator&&a.type===Ld.WALLET_INIT)(function(a,t){return e(this,void 0,void 0,(function*(){var e,p,d;const{state:i}=a;if(i.isOriginator){const i=t.data||{};if("object"==typeof i&&"accounts"in i&&"chainId"in i&&"walletKey"in i)try{const{channelConfig:t}=a.state;if(bd.RemoteCommunication("WALLET_INIT: channelConfig",JSON.stringify(t,null,2)),t){const n=i.accounts,r=i.chainId,o=i.walletKey;let s,l=!1;"deeplinkProtocol"in i&&(l=Boolean(i.deeplinkProtocol),a.state.deeplinkProtocolAvailable=l),"walletVersion"in i&&(s=i.walletVersion),yield null===(e=a.state.storageManager)||void 0===e?void 0:e.persistChannelConfig(Object.assign(Object.assign({},t),{otherKey:o,walletVersion:s,deeplinkProtocolAvailable:l,relayPersistence:!0})),yield null===(p=a.state.storageManager)||void 0===p?void 0:p.persistAccounts(n),yield null===(d=a.state.storageManager)||void 0===d?void 0:d.persistChainId(r)}a.emit(Pd.WALLET_INIT,{accounts:i.accounts,chainId:i.chainId})}catch(e){}}}))})(t,a).catch((e=>{bd.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] error=${e}`)}));else if(a.type===Ld.TERMINATE)(function(a){return e(this,void 0,void 0,(function*(){const{state:e}=a;e.isOriginator&&(yield ci({options:{terminate:!0,sendMessage:!1},instance:a}),a.emit(Pd.TERMINATE))}))})(t).catch((e=>{bd.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] error=${e}`)}));else if(a.type===Ld.PAUSE)!function(e){const{state:a}=e;a.paused=!0,e.setConnectionStatus(Md.PAUSED)}(t);else if(a.type===Ld.READY&&p.isOriginator)!function(e){const{state:a}=e;e.setConnectionStatus(Md.LINKED);const t=a.paused;a.paused=!1,e.emit(Pd.CLIENTS_READY,{isOriginator:a.isOriginator,walletInfo:a.walletInfo}),t&&(a.authorized=!0,e.emit(Pd.AUTHORIZED))}(t);else{if(a.type===Ld.OTP&&p.isOriginator)return void function(e,a){var t;const{state:p}=e;e.emit(Pd.OTP,a.otpAnswer),1==="6.6".localeCompare((null===(t=p.walletInfo)||void 0===t?void 0:t.version)||"")&&e.emit(Pd.SDK_RPC_CALL,{method:xd.ETH_REQUESTACCOUNTS,params:[]})}(t,a);a.type===Ld.AUTHORIZED&&p.isOriginator&&function(e){const{state:a}=e;a.authorized=!0,e.emit(Pd.AUTHORIZED)}(t)}t.emit(Pd.MESSAGE,a)}else!function(e,a){var t;const{state:p}=e;null===(t=p.communicationLayer)||void 0===t||t.sendMessage({type:Ld.WALLET_INFO,walletInfo:p.walletInfo}),p.originatorInfo=a.originatorInfo||a.originator,e.emit(Pd.CLIENTS_READY,{isOriginator:p.isOriginator,originatorInfo:p.originatorInfo}),p.paused=!1}(t,a)}(p,a)}}function oi(e){return()=>{const{state:a}=e;bd.RemoteCommunication("[RemoteCommunication: handleSocketReconnectEvent()] on 'socket_reconnect' -- reset key exchange status / set ready to false"),a.ready=!1,a.authorized=!1,Rd(a),e.emitServiceStatusEvent({context:"socket_reconnect"})}}function si(e){return()=>{const{state:a}=e;bd.RemoteCommunication("[RemoteCommunication: handleSocketDisconnectedEvent()] on 'socket_Disconnected' set ready to false"),a.ready=!1}}function li(a){return()=>e(this,void 0,void 0,(function*(){var e,t,p,d,i,n,r;const{state:o}=a;bd.RemoteCommunication(`[RemoteCommunication: handleFullPersistenceEvent()] context=${o.context}`),a.state.ready=!0,a.state.clientsConnected=!0,a.state.authorized=!0,a.state.relayPersistence=!0,null===(e=a.state.communicationLayer)||void 0===e||e.getKeyExchange().setKeysExchanged(!0),a.emit(Pd.KEYS_EXCHANGED,{keysExchanged:!0,isOriginator:!0}),a.emit(Pd.AUTHORIZED),a.emit(Pd.CLIENTS_READY),a.emit(Pd.CHANNEL_PERSISTENCE);try{o.channelConfig=Object.assign(Object.assign({},o.channelConfig),{localKey:null===(t=o.communicationLayer)||void 0===t?void 0:t.getKeyExchange().getKeyInfo().ecies.private,otherKey:null===(p=o.communicationLayer)||void 0===p?void 0:p.getKeyExchange().getOtherPublicKey(),channelId:null!==(d=o.channelId)&&void 0!==d?d:"",validUntil:null!==(n=null===(i=o.channelConfig)||void 0===i?void 0:i.validUntil)&&void 0!==n?n:kd,relayPersistence:!0}),yield null===(r=o.storageManager)||void 0===r?void 0:r.persistChannelConfig(o.channelConfig)}catch(e){}}))}function mi({communicationLayerPreference:e,otherPublicKey:a,reconnect:t,ecies:p,communicationServerUrl:d=Dd,instance:i}){var n,r,o,s,l,m,c,u,h,v,f;const{state:g}=i;if(bd.RemoteCommunication("[initCommunicationLayer()] ",JSON.stringify(g,null,2)),e!==Xd.SOCKET)throw new Error("Invalid communication protocol");g.communicationLayer=new Zd({communicationLayerPreference:e,otherPublicKey:a,reconnect:t,transports:g.transports,communicationServerUrl:d,context:g.context,ecies:p,logging:g.logging,remote:i});let w="undefined"!=typeof document&&document.URL||"",y="undefined"!=typeof document&&document.title||"";(null===(n=g.dappMetadata)||void 0===n?void 0:n.url)&&(w=g.dappMetadata.url),(null===(r=g.dappMetadata)||void 0===r?void 0:r.name)&&(y=g.dappMetadata.name);const b=null!==(m=null!==(s=null===(o=g.dappMetadata)||void 0===o?void 0:o.name)&&void 0!==s?s:null===(l=g.dappMetadata)||void 0===l?void 0:l.url)&&void 0!==m?m:"N/A",S="undefined"!=typeof window&&void 0!==window.location&&null!==(c=window.location.hostname)&&void 0!==c?c:b,_={url:w,title:y,source:null===(u=g.dappMetadata)||void 0===u?void 0:u.source,dappId:S,icon:(null===(h=g.dappMetadata)||void 0===h?void 0:h.iconUrl)||(null===(v=g.dappMetadata)||void 0===v?void 0:v.base64Icon),platform:g.platformType,apiVersion:Cd.version,connector:null===(f=g.dappMetadata)||void 0===f?void 0:f.connector};g.originatorInfo=_;const E={[Pd.AUTHORIZED]:ai(i),[Pd.MESSAGE]:ri(i),[Pd.CHANNEL_PERSISTENCE]:li(i),[Pd.CLIENTS_CONNECTED]:pi(i,e),[Pd.KEYS_EXCHANGED]:ni(i,e),[Pd.SOCKET_DISCONNECTED]:si(i),[Pd.SOCKET_RECONNECT]:oi(i),[Pd.CLIENTS_DISCONNECTED]:di(i),[Pd.KEY_INFO]:()=>{},[Pd.CHANNEL_CREATED]:ti(i),[Pd.CLIENTS_WAITING]:ii(i),[Pd.RPC_UPDATE]:e=>{i.emit(Pd.RPC_UPDATE,e)}};for(const[a,t]of Object.entries(E))try{g.communicationLayer.on(a,t)}catch(e){}}function ci(a){return e(this,arguments,void 0,(function*({options:e,instance:a}){const{state:t}=a;return bd.RemoteCommunication(`[RemoteCommunication: disconnect()] channel=${t.channelId}`,e),new Promise(((p,d)=>{var i,n,r,o,s,l;(null==e?void 0:e.terminate)?(a.state.ready&&Nd({id:null!==(i=a.state.channelId)&&void 0!==i?i:"",event:Bd.TERMINATED},a.state.communicationServerUrl).catch((e=>{})),t.ready=!1,t.paused=!1,null===(n=t.storageManager)||void 0===n||n.terminate(null!==(r=t.channelId)&&void 0!==r?r:""),a.state.terminated=!0,e.sendMessage?(null===(o=t.communicationLayer)||void 0===o?void 0:o.getKeyInfo().keysExchanged)&&a.state.communicationLayer&&zd(a.state.communicationLayer,{type:Ld.TERMINATE}).then((()=>{p(!0)})).catch((e=>{d(e)})):p(!0),t.authorized=!1,t.relayPersistence=!1,t.channelId=h(),e.channelId=t.channelId,t.channelConfig=void 0,t.originatorConnectStarted=!1,null===(s=t.communicationLayer)||void 0===s||s.disconnect(e),a.setConnectionStatus(Md.TERMINATED)):(null===(l=t.communicationLayer)||void 0===l||l.disconnect(e),a.setConnectionStatus(Md.DISCONNECTED),p(!0))}))}))}(Xd||(Xd={})).SOCKET="socket",function(e){e.NonBrowser="nodejs",e.MetaMaskMobileWebview="in-app-browser",e.DesktopWeb="web-desktop",e.MobileWeb="web-mobile",e.ReactNative="react-native"}(Qd||(Qd={}));class ui extends c{constructor(e){super(),this.state={ready:!1,authorized:!1,isOriginator:!1,terminated:!1,protocolVersion:1,paused:!1,deeplinkProtocolAvailable:!1,platformType:"metamask-mobile",analytics:!1,reconnection:!1,originatorInfoSent:!1,communicationServerUrl:Dd,context:"",persist:!1,clientsConnected:!1,sessionDuration:kd,originatorConnectStarted:!1,debug:!1,_connectionStatus:Md.DISCONNECTED},this._options=e;const{platformType:a,communicationLayerPreference:t,otherPublicKey:p,reconnect:d,walletInfo:i,dappMetadata:n,protocolVersion:o,transports:s,context:l,relayPersistence:m,ecies:c,analytics:u=!1,storage:h,sdkVersion:v,communicationServerUrl:f=Dd,logging:g,autoConnect:w={timeout:Od}}=e;this.state.otherPublicKey=p,this.state.dappMetadata=n,this.state.walletInfo=i,this.state.transports=s,this.state.platformType=a,this.state.analytics=u,this.state.protocolVersion=null!=o?o:1,this.state.isOriginator=!p,this.state.relayPersistence=m,this.state.communicationServerUrl=f,this.state.context=l,this.state.terminated=!1,this.state.sdkVersion=v,this.setMaxListeners(50),this.setConnectionStatus(Md.DISCONNECTED),(null==h?void 0:h.duration)&&(this.state.sessionDuration=kd),this.state.storageOptions=h,this.state.autoConnectOptions=w,this.state.debug=!0===(null==g?void 0:g.remoteLayer),!0===(null==g?void 0:g.remoteLayer)&&r.enable("RemoteCommunication:Layer"),!0===(null==g?void 0:g.serviceLayer)&&r.enable("SocketService:Layer"),!0===(null==g?void 0:g.eciesLayer)&&r.enable("ECIES:Layer"),!0===(null==g?void 0:g.keyExchangeLayer)&&r.enable("KeyExchange:Layer"),this.state.logging=g,(null==h?void 0:h.storageManager)&&(this.state.storageManager=h.storageManager),bd.RemoteCommunication(`[RemoteCommunication: constructor()] protocolVersion=${o} relayPersistence=${m} isOriginator=${this.state.isOriginator} communicationLayerPreference=${t} otherPublicKey=${p} reconnect=${d}`),this.state.isOriginator||mi({communicationLayerPreference:t,otherPublicKey:p,reconnect:d,ecies:c,communicationServerUrl:f,instance:this}),this.emitServiceStatusEvent({context:"constructor"})}initFromDappStorage(){return e(this,void 0,void 0,(function*(){var e;if(this.state.storageManager){const a=yield this.state.storageManager.getPersistedChannelConfig({});a&&(this.state.channelConfig=a,this.state.channelId=a.channelId,this.state.deeplinkProtocolAvailable=null!==(e=a.deeplinkProtocolAvailable)&&void 0!==e&&e,a.relayPersistence&&(this.state.authorized=!0,this.state.ready=!0,this.setConnectionStatus(Md.LINKED),yield this.connectToChannel({channelId:a.channelId})))}mi({communicationLayerPreference:Xd.SOCKET,otherPublicKey:this.state.otherPublicKey,reconnect:this._options.reconnect,ecies:this._options.ecies,communicationServerUrl:this.state.communicationServerUrl,instance:this})}))}originatorSessionConnect(){return e(this,void 0,void 0,(function*(){return yield function(a){return e(this,void 0,void 0,(function*(){var e;const{state:t}=a;if(!t.storageManager)return void bd.RemoteCommunication("[RemoteCommunication: originatorSessionConnect()] no storage manager defined - skip");const p=yield t.storageManager.getPersistedChannelConfig({});if(bd.RemoteCommunication(`[RemoteCommunication: originatorSessionConnect()] autoStarted=${t.originatorConnectStarted} channelConfig`,p),null===(e=t.communicationLayer)||void 0===e?void 0:e.isConnected())return bd.RemoteCommunication("[RemoteCommunication: originatorSessionConnect()] socket already connected - skip"),p;if(p){if(p.validUntil>Date.now())return t.channelConfig=p,t.originatorConnectStarted=!0,t.channelId=null==p?void 0:p.channelId,t.reconnection=!0,p;bd.RemoteCommunication("[RemoteCommunication: autoConnect()] Session has expired")}t.originatorConnectStarted=!1}))}(this)}))}generateChannelIdConnect(){return e(this,void 0,void 0,(function*(){return function(a){return e(this,void 0,void 0,(function*(){var e,t,p,d,i,n;if(!a.communicationLayer)throw new Error("communication layer not initialized");if(a.ready)throw new Error("Channel already connected");if(a.channelId&&(null===(e=a.communicationLayer)||void 0===e?void 0:e.isConnected()))return a.channelConfig=Object.assign(Object.assign({},a.channelConfig),{channelId:a.channelId,validUntil:Date.now()+a.sessionDuration}),null===(t=a.storageManager)||void 0===t||t.persistChannelConfig(a.channelConfig),{channelId:a.channelId,privKey:null===(d=null===(p=a.communicationLayer)||void 0===p?void 0:p.getKeyInfo())||void 0===d?void 0:d.ecies.private,pubKey:null===(n=null===(i=a.communicationLayer)||void 0===i?void 0:i.getKeyInfo())||void 0===n?void 0:n.ecies.public};bd.RemoteCommunication("[RemoteCommunication: generateChannelId()]");const r=yield a.communicationLayer.createChannel();bd.RemoteCommunication("[RemoteCommunication: generateChannelId()] channel created",r);const o=Object.assign(Object.assign({},a.channelConfig),{channelId:r.channelId,localKey:r.privKey,validUntil:Date.now()+a.sessionDuration});return a.channelId=r.channelId,a.channelConfig=o,{channelId:a.channelId,pubKey:r.pubKey,privKey:r.privKey}}))}(this.state)}))}clean(){return Rd(this.state)}connectToChannel({channelId:a,withKeyExchange:t,authorized:p}){return function(a){return e(this,arguments,void 0,(function*({channelId:e,withKeyExchange:a,authorized:t,state:p}){var d,i,n;if(!u(e))throw bd.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${p.context} invalid channel channelId=${e}`),new Error(`Invalid channel ${e}`);if(bd.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${p.context} channelId=${e} withKeyExchange=${a}`),null===(d=p.communicationLayer)||void 0===d?void 0:d.isConnected())return void bd.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${p.context} already connected - interrupt connection.`);p.channelId=e,yield null===(i=p.communicationLayer)||void 0===i?void 0:i.connectToChannel({channelId:e,authorized:t,withKeyExchange:a});const r=Object.assign(Object.assign({},p.channelConfig),{channelId:e,validUntil:Date.now()+p.sessionDuration});p.channelConfig=r,null===(n=p.storageManager)||void 0===n||n.persistChannelConfig(r)}))}({channelId:a,authorized:p,withKeyExchange:t,state:this.state})}sendMessage(a){return function(a,t){return e(this,void 0,void 0,(function*(){var p,d;const{state:i}=a;bd.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context} paused=${i.paused} ready=${i.ready} relayPersistence=${i.relayPersistence} authorized=${i.authorized} socket=${null===(p=i.communicationLayer)||void 0===p?void 0:p.isConnected()} clientsConnected=${i.clientsConnected} status=${i._connectionStatus}`,t),i.relayPersistence||i.ready&&(null===(d=i.communicationLayer)||void 0===d?void 0:d.isConnected())&&i.clientsConnected||(bd.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context}  SKIP message waiting for MM mobile readiness.`),yield new Promise((e=>{a.once(Pd.CLIENTS_READY,e)})),bd.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context}  AFTER SKIP / READY -- sending pending message`));try{const p=yield function(a,t){return e(this,void 0,void 0,(function*(){return new Promise((e=>{var p;const{state:d}=a;bd.RemoteCommunication(`[RemoteCommunication: handleAuthorization()] context=${d.context} ready=${d.ready} authorized=${d.authorized} method=${t.method}`),!d.isOriginator||d.authorized||d.relayPersistence?null===(p=d.communicationLayer)||void 0===p||p.sendMessage(t).then((a=>{e(a)})).catch((a=>{e(!1)})):a.once(Pd.AUTHORIZED,(()=>{var a;bd.RemoteCommunication(`[RemoteCommunication: handleAuthorization()] context=${d.context}  AFTER SKIP / AUTHORIZED -- sending pending message`),null===(a=d.communicationLayer)||void 0===a||a.sendMessage(t).then((a=>{e(a)})).catch((a=>{e(!1)}))}))}))}))}(a,t);return p}catch(e){throw e}}))}(this,a)}testStorage(){return e(this,void 0,void 0,(function*(){return function(a){return e(this,void 0,void 0,(function*(){var e;const t=yield null===(e=a.storageManager)||void 0===e?void 0:e.getPersistedChannelConfig();bd.RemoteCommunication("[RemoteCommunication: testStorage()] res",t)}))}(this.state)}))}hasDeeplinkProtocol(){return this.state.deeplinkProtocolAvailable}getChannelConfig(){return this.state.channelConfig}isReady(){return this.state.ready}isConnected(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.isConnected()}isAuthorized(){return this.state.authorized}isPaused(){return this.state.paused}getCommunicationLayer(){return this.state.communicationLayer}ping(){return e(this,void 0,void 0,(function*(){var e;bd.RemoteCommunication(`[RemoteCommunication: ping()] channel=${this.state.channelId}`),yield null===(e=this.state.communicationLayer)||void 0===e?void 0:e.ping()}))}testLogger(){bd.RemoteCommunication(`testLogger() channel=${this.state.channelId}`),bd.SocketService(`testLogger() channel=${this.state.channelId}`),bd.Ecies(`testLogger() channel=${this.state.channelId}`),bd.KeyExchange(`testLogger() channel=${this.state.channelId}`)}keyCheck(){var e;bd.RemoteCommunication(`[RemoteCommunication: keyCheck()] channel=${this.state.channelId}`),null===(e=this.state.communicationLayer)||void 0===e||e.keyCheck()}setConnectionStatus(e){this.state._connectionStatus!==e&&(this.state._connectionStatus=e,this.emit(Pd.CONNECTION_STATUS,e),this.emitServiceStatusEvent({context:"setConnectionStatus"}))}emitServiceStatusEvent(e={}){this.emit(Pd.SERVICE_STATUS,this.getServiceStatus())}getConnectionStatus(){return this.state._connectionStatus}getServiceStatus(){return{originatorInfo:this.state.originatorInfo,keyInfo:this.getKeyInfo(),connectionStatus:this.state._connectionStatus,channelConfig:this.state.channelConfig,channelId:this.state.channelId}}getKeyInfo(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.getKeyInfo()}resetKeys(){var e;null===(e=this.state.communicationLayer)||void 0===e||e.resetKeys()}setOtherPublicKey(e){var a;const t=null===(a=this.state.communicationLayer)||void 0===a?void 0:a.getKeyExchange();if(!t)throw new Error("KeyExchange is not initialized.");t.getOtherPublicKey()!==e&&t.setOtherPublicKey(e)}pause(){return e(this,void 0,void 0,(function*(){var e;bd.RemoteCommunication(`[RemoteCommunication: pause()] channel=${this.state.channelId}`),yield null===(e=this.state.communicationLayer)||void 0===e?void 0:e.pause(),this.setConnectionStatus(Md.PAUSED)}))}getVersion(){return Cd.version}hasRelayPersistence(){var e;return null!==(e=this.state.relayPersistence)&&void 0!==e&&e}resume(){return e(this,void 0,void 0,(function*(){return function(a){return e(this,void 0,void 0,(function*(){var e;const{state:t}=a;bd.RemoteCommunication(`[RemoteCommunication: resume()] channel=${t.channelId}`),yield null===(e=t.communicationLayer)||void 0===e?void 0:e.resume(),a.setConnectionStatus(Md.LINKED)}))}(this)}))}encrypt(e){var a,t,p;const d=null===(a=this.state.communicationLayer)||void 0===a?void 0:a.getKeyExchange(),i=null==d?void 0:d.getOtherPublicKey();if(!i)throw new Error("KeyExchange not completed");return null===(p=null===(t=this.state.communicationLayer)||void 0===t?void 0:t.state.eciesInstance)||void 0===p?void 0:p.encrypt(e,i)}decrypt(e){var a,t,p;if(!(null===(a=this.state.communicationLayer)||void 0===a?void 0:a.state.eciesInstance))throw new Error("ECIES instance is not initialized");return null===(p=null===(t=this.state.communicationLayer)||void 0===t?void 0:t.state.eciesInstance)||void 0===p?void 0:p.decrypt(e)}getChannelId(){return this.state.channelId}getRPCMethodTracker(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.getRPCMethodTracker()}reject({channelId:a}){return function(a){return e(this,arguments,void 0,(function*({channelId:e,state:a}){var t,p,d;if(!u(e))throw bd.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${a.context} invalid channel channelId=${e}`),new Error(`Invalid channel ${e}`);if(a.isOriginator)return void bd.RemoteCommunication(`[RemoteCommunication: reject()] context=${a.context} isOriginator=${a.isOriginator} channelId=${e}`);const{socket:i}=null!==(p=null===(t=a.communicationLayer)||void 0===t?void 0:t.state)&&void 0!==p?p:{};(null==i?void 0:i.connected)||(bd.RemoteCommunication(`[RemoteCommunication: reject()] context=${a.context} socket already connected`),null==i||i.connect()),Nd(Object.assign(Object.assign({id:e,event:Bd.REJECTED},a.originatorInfo),{sdkVersion:a.sdkVersion,commLayerVersion:Cd.version,walletVersion:null===(d=a.walletInfo)||void 0===d?void 0:d.version}),a.communicationServerUrl).catch((e=>{})),yield new Promise(((t,p)=>{null==i||i.emit(Pd.REJECTED,{channelId:e},((e,d)=>{bd.RemoteCommunication(`[RemoteCommunication: reject()] context=${a.context} socket=${null==i?void 0:i.id}`,{error:e,response:d}),e?p(e):t(d)}))}))}))}({channelId:a,state:this.state})}disconnect(a){return e(this,void 0,void 0,(function*(){return ci({options:a,instance:this})}))}}!function(e){e.RENEW="renew",e.LINK="link"}(ei||(ei={}));var hi="ERC721",vi="ERC1155",fi={errors:{disconnected:()=>"MetaMask: Disconnected from chain. Attempting to connect.",permanentlyDisconnected:()=>"MetaMask: Disconnected from MetaMask background. Page reload required.",sendSiteMetadata:()=>"MetaMask: Failed to send site metadata. This is an internal error, please report this bug.",unsupportedSync:e=>`MetaMask: The MetaMask Ethereum provider does not support synchronous methods like ${e} without a callback parameter.`,invalidDuplexStream:()=>"Must provide a Node.js-style duplex stream.",invalidNetworkParams:()=>"MetaMask: Received invalid network parameters. Please report this bug.",invalidRequestArgs:()=>"Expected a single, non-array, object argument.",invalidRequestMethod:()=>"'args.method' must be a non-empty string.",invalidRequestParams:()=>"'args.params' must be an object or array if provided.",invalidLoggerObject:()=>"'args.logger' must be an object if provided.",invalidLoggerMethod:e=>`'args.logger' must include required method '${e}'.`},info:{connected:e=>`MetaMask: Connected to chain with ID "${e}".`},warnings:{chainIdDeprecation:"MetaMask: 'ethereum.chainId' is deprecated and may be removed in the future. Please use the 'eth_chainId' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23",networkVersionDeprecation:"MetaMask: 'ethereum.networkVersion' is deprecated and may be removed in the future. Please use the 'net_version' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23",selectedAddressDeprecation:"MetaMask: 'ethereum.selectedAddress' is deprecated and may be removed in the future. Please use the 'eth_accounts' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23",enableDeprecation:"MetaMask: 'ethereum.enable()' is deprecated and may be removed in the future. Please use the 'eth_requestAccounts' RPC method instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1102",sendDeprecation:"MetaMask: 'ethereum.send(...)' is deprecated and may be removed in the future. Please use 'ethereum.sendAsync(...)' or 'ethereum.request(...)' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193",events:{close:"MetaMask: The event 'close' is deprecated and may be removed in the future. Please use 'disconnect' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#disconnect",data:"MetaMask: The event 'data' is deprecated and will be removed in the future. Use 'message' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message",networkChanged:"MetaMask: The event 'networkChanged' is deprecated and may be removed in the future. Use 'chainChanged' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#chainchanged",notification:"MetaMask: The event 'notification' is deprecated and may be removed in the future. Use 'message' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message"},rpc:{ethDecryptDeprecation:"MetaMask: The RPC method 'eth_decrypt' is deprecated and may be removed in the future.\nFor more information, see: https://medium.com/metamask/metamask-api-method-deprecation-2b0564a84686",ethGetEncryptionPublicKeyDeprecation:"MetaMask: The RPC method 'eth_getEncryptionPublicKey' is deprecated and may be removed in the future.\nFor more information, see: https://medium.com/metamask/metamask-api-method-deprecation-2b0564a84686",walletWatchAssetNFTExperimental:"MetaMask: The RPC method 'wallet_watchAsset' is experimental for ERC721/ERC1155 assets and may change in the future.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-1.md and https://github.com/MetaMask/metamask-improvement-proposals/blob/main/PROCESS-GUIDE.md#proposal-lifecycle"},experimentalMethods:"MetaMask: 'ethereum._metamask' exposes non-standard, experimental methods. They may be removed or changed without warning."}};function gi(e){const a={ethDecryptDeprecation:!1,ethGetEncryptionPublicKeyDeprecation:!1,walletWatchAssetNFTExperimental:!1};return(t,p,d)=>{a.ethDecryptDeprecation||"eth_decrypt"!==t.method?a.ethGetEncryptionPublicKeyDeprecation||"eth_getEncryptionPublicKey"!==t.method?!a.walletWatchAssetNFTExperimental&&"wallet_watchAsset"===t.method&&[hi,vi].includes(t.params?.type||"")&&(e.warn(fi.warnings.rpc.walletWatchAssetNFTExperimental),a.walletWatchAssetNFTExperimental=!0):(e.warn(fi.warnings.rpc.ethGetEncryptionPublicKeyDeprecation),a.ethGetEncryptionPublicKeyDeprecation=!0):(e.warn(fi.warnings.rpc.ethDecryptDeprecation),a.ethDecryptDeprecation=!0),d()}}var wi=4294967295,yi=Math.floor(Math.random()*wi);function bi(){return(e,a,t,p)=>{const d=e.id,i=yi=(yi+1)%wi;e.id=i,a.id=i,t((t=>{e.id=d,a.id=d,t()}))}}var Si=(e,a,t)=>{if(!a.has(e))throw TypeError("Cannot "+t)},_i=(e,a,t)=>(Si(e,a,"read from private field"),t?t.call(e):a.get(e)),Ei=(e,a,t)=>{if(a.has(e))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(e):a.set(e,t)},Ni=(e,a,t,p)=>(Si(e,a,"write to private field"),a.set(e,t),t),Ti=(e,a,t)=>(Si(e,a,"access private method"),t),Ci={invalidInput:-32e3,resourceNotFound:-32001,resourceUnavailable:-32002,transactionRejected:-32003,methodNotSupported:-32004,limitExceeded:-32005,parse:-32700,invalidRequest:-32600,methodNotFound:-32601,invalidParams:-32602,internal:-32603},Di={"-32700":{standard:"JSON RPC 2.0",message:"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."},"-32600":{standard:"JSON RPC 2.0",message:"The JSON sent is not a valid Request object."},"-32601":{standard:"JSON RPC 2.0",message:"The method does not exist / is not available."},"-32602":{standard:"JSON RPC 2.0",message:"Invalid method parameter(s)."},"-32603":{standard:"JSON RPC 2.0",message:"Internal JSON-RPC error."},"-32000":{standard:"EIP-1474",message:"Invalid input."},"-32001":{standard:"EIP-1474",message:"Resource not found."},"-32002":{standard:"EIP-1474",message:"Resource unavailable."},"-32003":{standard:"EIP-1474",message:"Transaction rejected."},"-32004":{standard:"EIP-1474",message:"Method not supported."},"-32005":{standard:"EIP-1474",message:"Request limit exceeded."},4001:{standard:"EIP-1193",message:"User rejected the request."},4100:{standard:"EIP-1193",message:"The requested account and/or method has not been authorized by the user."},4200:{standard:"EIP-1193",message:"The requested method is not supported by this Ethereum provider."},4900:{standard:"EIP-1193",message:"The provider is disconnected from all chains."},4901:{standard:"EIP-1193",message:"The provider is disconnected from the specified chain."}};function Ai(e){return Boolean(e)&&"object"==typeof e&&!Array.isArray(e)}var ki=(e,a)=>Object.hasOwnProperty.call(e,a);class Oi extends TypeError{constructor(e,a){let t;const{message:p,explanation:d,...i}=e,{path:n}=e,r=0===n.length?p:`At path: ${n.join(".")} -- ${p}`;super(d??r),null!=d&&(this.cause=r),Object.assign(this,i),this.name=this.constructor.name,this.failures=()=>t??(t=[e,...a()])}}function xi(e){return"object"==typeof e&&null!=e}function Ri(e){return"symbol"==typeof e?e.toString():"string"==typeof e?JSON.stringify(e):`${e}`}function Mi(e,a,t,p){if(!0===e)return;!1===e?e={}:"string"==typeof e&&(e={message:e});const{path:d,branch:i}=a,{type:n}=t,{refinement:r,message:o=`Expected a value of type \`${n}\`${r?` with refinement \`${r}\``:""}, but received: \`${Ri(p)}\``}=e;return{value:p,type:n,refinement:r,key:d[d.length-1],path:d,branch:i,...e,message:o}}function*Pi(e,a,t,p){(function(e){return xi(e)&&"function"==typeof e[Symbol.iterator]})(e)||(e=[e]);for(const d of e){const e=Mi(d,a,t,p);e&&(yield e)}}function*Ii(e,a,t={}){const{path:p=[],branch:d=[e],coerce:i=!1,mask:n=!1}=t,r={path:p,branch:d};if(i&&(e=a.coercer(e,r),n&&"type"!==a.type&&xi(a.schema)&&xi(e)&&!Array.isArray(e)))for(const t in e)void 0===a.schema[t]&&delete e[t];let o="valid";for(const p of a.validator(e,r))p.explanation=t.message,o="not_valid",yield[p,void 0];for(let[s,l,m]of a.entries(e,r)){const a=Ii(l,m,{path:void 0===s?p:[...p,s],branch:void 0===s?d:[...d,l],coerce:i,mask:n,message:t.message});for(const t of a)t[0]?(o=null!=t[0].refinement?"not_refined":"not_valid",yield[t[0],void 0]):i&&(l=t[1],void 0===s?e=l:e instanceof Map?e.set(s,l):e instanceof Set?e.add(l):xi(e)&&(void 0!==l||s in e)&&(e[s]=l))}if("not_valid"!==o)for(const p of a.refiner(e,r))p.explanation=t.message,o="not_refined",yield[p,void 0];"valid"===o&&(yield[void 0,e])}class Vi{constructor(e){const{type:a,schema:t,validator:p,refiner:d,coercer:i=(e=>e),entries:n=function*(){}}=e;this.type=a,this.schema=t,this.entries=n,this.coercer=i,this.validator=p?(e,a)=>Pi(p(e,a),a,this,e):()=>[],this.refiner=d?(e,a)=>Pi(d(e,a),a,this,e):()=>[]}assert(e,a){return Li(e,this,a)}create(e,a){return Bi(e,this,a)}is(e){return ji(e,this)}mask(e,a){return function(e,a,t){const p=Ki(e,a,{coerce:!0,mask:!0,message:t});if(p[0])throw p[0];return p[1]}(e,this,a)}validate(e,a={}){return Ki(e,this,a)}}function Li(e,a,t){const p=Ki(e,a,{message:t});if(p[0])throw p[0]}function Bi(e,a,t){const p=Ki(e,a,{coerce:!0,message:t});if(p[0])throw p[0];return p[1]}function ji(e,a){return!Ki(e,a)[0]}function Ki(e,a,t={}){const p=Ii(e,a,t),d=function(e){const{done:a,value:t}=e.next();return a?void 0:t}(p);if(d[0]){const e=new Oi(d[0],(function*(){for(const e of p)e[0]&&(yield e[0])}));return[e,void 0]}return[void 0,d[1]]}function Ui(e,a){return new Vi({type:e,schema:null,validator:a})}function Fi(e){let a;return new Vi({type:"lazy",schema:null,*entries(t,p){a??(a=e()),yield*a.entries(t,p)},validator:(t,p)=>(a??(a=e()),a.validator(t,p)),coercer:(t,p)=>(a??(a=e()),a.coercer(t,p)),refiner:(t,p)=>(a??(a=e()),a.refiner(t,p))})}function $i(e){return new Vi({type:"array",schema:e,*entries(a){if(e&&Array.isArray(a))for(const[t,p]of a.entries())yield[t,p,e]},coercer:e=>Array.isArray(e)?e.slice():e,validator:e=>Array.isArray(e)||`Expected an array value, but received: ${Ri(e)}`})}function Hi(e){const a=Ri(e),t=typeof e;return new Vi({type:"literal",schema:"string"===t||"number"===t||"boolean"===t?e:null,validator:t=>t===e||`Expected the literal \`${a}\`, but received: ${Ri(t)}`})}function zi(){return Ui("number",(e=>"number"==typeof e&&!isNaN(e)||`Expected a number, but received: ${Ri(e)}`))}function qi(e){const a=e?Object.keys(e):[],t=Ui("never",(()=>!1));return new Vi({type:"object",schema:e||null,*entries(p){if(e&&xi(p)){const d=new Set(Object.keys(p));for(const t of a)d.delete(t),yield[t,p[t],e[t]];for(const e of d)yield[e,p[e],t]}},validator:e=>xi(e)||`Expected an object, but received: ${Ri(e)}`,coercer:e=>xi(e)?{...e}:e})}function Wi(e){return new Vi({...e,validator:(a,t)=>void 0===a||e.validator(a,t),refiner:(a,t)=>void 0===a||e.refiner(a,t)})}function Gi(e,a){return new Vi({type:"record",schema:null,*entries(t){if(xi(t))for(const p in t){const d=t[p];yield[p,p,e],yield[p,d,a]}},validator:e=>xi(e)||`Expected an object, but received: ${Ri(e)}`})}function Yi(){return Ui("string",(e=>"string"==typeof e||`Expected a string, but received: ${Ri(e)}`))}function Ji(e){const a=e.map((e=>e.type)).join(" | ");return new Vi({type:"union",schema:null,coercer(a){for(const t of e){const[e,p]=t.validate(a,{coerce:!0});if(!e)return p}return a},validator(t,p){const d=[];for(const a of e){const[...e]=Ii(t,a,p),[i]=e;if(!i[0])return[];for(const[a]of e)a&&d.push(a)}return[`Expected the value to satisfy a union of \`${a}\`, but received: ${Ri(t)}`,...d]}})}function Zi(e){return function(e){return function(e){return"object"==typeof e&&null!==e&&"message"in e}(e)&&"string"==typeof e.message?e.message:null==e?"":String(e)}(e).replace(/\.$/u,"")}function Xi(e,a){return t=e,Boolean("string"==typeof t?.prototype?.constructor?.name)?new e({message:a}):e({message:a});var t}var Qi=class extends Error{constructor(e){super(e.message),this.code="ERR_ASSERTION"}};var en=e=>qi(e);function an({path:e,branch:a}){const t=e[e.length-1];return ki(a[a.length-2],t)}function tn(e){return new Vi({...e,type:`optional ${e.type}`,validator:(a,t)=>!an(t)||e.validator(a,t),refiner:(a,t)=>!an(t)||e.refiner(a,t)})}var pn,dn,nn,rn=Ji([Hi(null),Ui("boolean",(e=>"boolean"==typeof e)),Ui("finite number",(e=>ji(e,zi())&&Number.isFinite(e))),Yi(),$i(Fi((()=>rn))),Gi(Yi(),Fi((()=>rn)))]),on=(pn=rn,dn=Ui("any",(()=>!0)),nn=e=>(function(e,a,t="Assertion failed",p=Qi){try{Li(e,a)}catch(e){throw Xi(p,`${t}: ${Zi(e)}.`)}}(e,rn),JSON.parse(JSON.stringify(e,((e,a)=>{if("__proto__"!==e&&"constructor"!==e)return a})))),new Vi({...pn,coercer:(e,a)=>ji(e,dn)?pn.coercer(nn(e,a),a):pn.coercer(e,a)}));function sn(e){try{return function(e){Bi(e,on)}(e),!0}catch{return!1}}var ln=Hi("2.0"),mn=function(e){return new Vi({...e,validator:(a,t)=>null===a||e.validator(a,t),refiner:(a,t)=>null===a||e.refiner(a,t)})}(Ji([zi(),Yi()])),cn=en({code:Ui("integer",(e=>"number"==typeof e&&!isNaN(e)&&Number.isInteger(e)||`Expected an integer, but received: ${Ri(e)}`)),message:Yi(),data:tn(on),stack:tn(Yi())}),un=Ji([Gi(Yi(),on),$i(on)]),hn=en({id:mn,jsonrpc:ln,method:Yi(),params:tn(un)}),vn=en({jsonrpc:ln,method:Yi(),params:tn(un)});function fn(e){return ji(e,hn)}function gn(e){return ji(e,cn)}qi({id:mn,jsonrpc:ln,result:Wi(Ui("unknown",(()=>!0))),error:Wi(cn)}),Ji([en({id:mn,jsonrpc:ln,result:on}),en({id:mn,jsonrpc:ln,error:cn})]);var wn=Ci.internal,yn="Unspecified error message. This is a bug, please report it.",bn={code:wn,message:_n(wn)},Sn="Unspecified server error.";function _n(e,a=yn){if(function(e){return Number.isInteger(e)}(e)){const a=e.toString();if(ki(Di,a))return Di[a].message;if(function(e){return e>=-32099&&e<=-32e3}(e))return Sn}return a}function En(e,{fallbackError:a=bn,shouldIncludeStack:t=!0}={}){if(!gn(a))throw new Error("Must provide fallback error with integer number code and string message.");const p=function(e,a){if(e&&"object"==typeof e&&"serialize"in e&&"function"==typeof e.serialize)return e.serialize();if(gn(e))return e;const t=Nn(e),p={...a,data:{cause:t}};return p}(e,a);return t||delete p.stack,p}function Nn(e){return Array.isArray(e)?e.map((e=>sn(e)?e:Ai(e)?Tn(e):null)):Ai(e)?Tn(e):sn(e)?e:null}function Tn(e){return Object.getOwnPropertyNames(e).reduce(((a,t)=>{const p=e[t];return sn(p)&&(a[t]=p),a}),{})}var Cn=Rn;Rn.default=Rn,Rn.stable=Vn,Rn.stableStringify=Vn;var Dn="[...]",An="[Circular]",kn=[],On=[];function xn(){return{depthLimit:Number.MAX_SAFE_INTEGER,edgesLimit:Number.MAX_SAFE_INTEGER}}function Rn(e,a,t,p){var d;void 0===p&&(p=xn()),Pn(e,"",0,[],void 0,0,p);try{d=0===On.length?JSON.stringify(e,a,t):JSON.stringify(e,Bn(a),t)}catch(e){return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]")}finally{for(;0!==kn.length;){var i=kn.pop();4===i.length?Object.defineProperty(i[0],i[1],i[3]):i[0][i[1]]=i[2]}}return d}function Mn(e,a,t,p){var d=Object.getOwnPropertyDescriptor(p,t);void 0!==d.get?d.configurable?(Object.defineProperty(p,t,{value:e}),kn.push([p,t,a,d])):On.push([a,t,e]):(p[t]=e,kn.push([p,t,a]))}function Pn(e,a,t,p,d,i,n){var r;if(i+=1,"object"==typeof e&&null!==e){for(r=0;r<p.length;r++)if(p[r]===e)return void Mn(An,e,a,d);if(void 0!==n.depthLimit&&i>n.depthLimit)return void Mn(Dn,e,a,d);if(void 0!==n.edgesLimit&&t+1>n.edgesLimit)return void Mn(Dn,e,a,d);if(p.push(e),Array.isArray(e))for(r=0;r<e.length;r++)Pn(e[r],r,r,p,e,i,n);else{var o=Object.keys(e);for(r=0;r<o.length;r++){var s=o[r];Pn(e[s],s,r,p,e,i,n)}}p.pop()}}function In(e,a){return e<a?-1:e>a?1:0}function Vn(e,a,t,p){void 0===p&&(p=xn());var d,i=Ln(e,"",0,[],void 0,0,p)||e;try{d=0===On.length?JSON.stringify(i,a,t):JSON.stringify(i,Bn(a),t)}catch(e){return JSON.stringify("[unable to serialize, circular reference is too complex to analyze]")}finally{for(;0!==kn.length;){var n=kn.pop();4===n.length?Object.defineProperty(n[0],n[1],n[3]):n[0][n[1]]=n[2]}}return d}function Ln(e,a,t,p,d,i,n){var r;if(i+=1,"object"==typeof e&&null!==e){for(r=0;r<p.length;r++)if(p[r]===e)return void Mn(An,e,a,d);try{if("function"==typeof e.toJSON)return}catch(e){return}if(void 0!==n.depthLimit&&i>n.depthLimit)return void Mn(Dn,e,a,d);if(void 0!==n.edgesLimit&&t+1>n.edgesLimit)return void Mn(Dn,e,a,d);if(p.push(e),Array.isArray(e))for(r=0;r<e.length;r++)Ln(e[r],r,r,p,e,i,n);else{var o={},s=Object.keys(e).sort(In);for(r=0;r<s.length;r++){var l=s[r];Ln(e[l],l,r,p,e,i,n),o[l]=e[l]}if(void 0===d)return o;kn.push([d,a,e]),d[a]=o}p.pop()}}function Bn(e){return e=void 0!==e?e:function(e,a){return a},function(a,t){if(On.length>0)for(var p=0;p<On.length;p++){var d=On[p];if(d[1]===a&&d[0]===t){t=d[2],On.splice(p,1);break}}return e.call(this,a,t)}}var jn=S(Cn),Kn=class extends Error{constructor(e,a,t){if(!Number.isInteger(e))throw new Error('"code" must be an integer.');if(!a||"string"!=typeof a)throw new Error('"message" must be a non-empty string.');super(a),this.code=e,void 0!==t&&(this.data=t)}serialize(){const e={code:this.code,message:this.message};return void 0!==this.data&&(e.data=this.data,function(e){if("object"!=typeof e||null===e)return!1;try{let a=e;for(;null!==Object.getPrototypeOf(a);)a=Object.getPrototypeOf(a);return Object.getPrototypeOf(e)===a}catch(e){return!1}}(this.data)&&(e.data.cause=Nn(this.data.cause))),this.stack&&(e.stack=this.stack),e}toString(){return jn(this.serialize(),Un,2)}};function Un(e,a){if("[Circular]"!==a)return a}var Fn=e=>$n(Ci.invalidRequest,e);function $n(e,a){const[t,p]=function(e){if(e){if("string"==typeof e)return[e];if("object"==typeof e&&!Array.isArray(e)){const{message:a,data:t}=e;if(a&&"string"!=typeof a)throw new Error("Must specify string message.");return[a??void 0,t]}}return[]}(a);return new Kn(e,t??_n(e),p)}var Hn={};Object.defineProperty(Hn,"__esModule",{value:!0});const zn=f;function qn(e,a,t){try{Reflect.apply(e,a,t)}catch(e){setTimeout((()=>{throw e}))}}let Wn=class extends zn.EventEmitter{emit(e,...a){let t="error"===e;const p=this._events;if(void 0!==p)t=t&&void 0===p.error;else if(!t)return!1;if(t){let e;if(a.length>0&&([e]=a),e instanceof Error)throw e;const t=new Error("Unhandled error."+(e?` (${e.message})`:""));throw t.context=e,t}const d=p[e];if(void 0===d)return!1;if("function"==typeof d)qn(d,this,a);else{const e=d.length,t=function(e){const a=e.length,t=new Array(a);for(let p=0;p<a;p+=1)t[p]=e[p];return t}(d);for(let p=0;p<e;p+=1)qn(t[p],this,a)}return!0}};var Gn,Yn,Jn,Zn,Xn,Qn,er,ar,tr,pr,dr,ir,nr,rr,or,sr,lr,mr,cr,ur=Hn.default=Wn,hr=class e extends ur{constructor({notificationHandler:e}={}){super(),Ei(this,Zn),Ei(this,Qn),Ei(this,ar),Ei(this,Gn,!1),Ei(this,Yn,void 0),Ei(this,Jn,void 0),Ni(this,Yn,[]),Ni(this,Jn,e)}destroy(){_i(this,Yn).forEach((e=>{"destroy"in e&&"function"==typeof e.destroy&&e.destroy()})),Ni(this,Yn,[]),Ni(this,Gn,!0)}push(e){Ti(this,Zn,Xn).call(this),_i(this,Yn).push(e)}handle(e,a){if(Ti(this,Zn,Xn).call(this),a&&"function"!=typeof a)throw new Error('"callback" must be a function if provided.');return Array.isArray(e)?a?Ti(this,Qn,er).call(this,e,a):Ti(this,Qn,er).call(this,e):a?Ti(this,ar,tr).call(this,e,a):this._promiseHandle(e)}asMiddleware(){return Ti(this,Zn,Xn).call(this),async(a,t,p,d)=>{var i,n;try{const[r,o,s]=await Ti(i=e,ir,nr).call(i,a,t,_i(this,Yn));return o?(await Ti(n=e,sr,lr).call(n,s),d(r)):p((async a=>{var t;try{await Ti(t=e,sr,lr).call(t,s)}catch(e){return a(e)}return a()}))}catch(e){return d(e)}}}async _promiseHandle(e){return new Promise(((a,t)=>{Ti(this,ar,tr).call(this,e,((e,p)=>{e&&void 0===p?t(e):a(p)})).catch(t)}))}};Gn=new WeakMap,Yn=new WeakMap,Jn=new WeakMap,Zn=new WeakSet,Xn=function(){if(_i(this,Gn))throw new Error("This engine is destroyed and can no longer be used.")},Qn=new WeakSet,er=async function(e,a){try{if(0===e.length){const e=[{id:null,jsonrpc:"2.0",error:new Kn(Ci.invalidRequest,"Request batch must contain plain objects. Received an empty array")}];return a?a(null,e):e}const t=(await Promise.all(e.map(this._promiseHandle.bind(this)))).filter((e=>void 0!==e));return a?a(null,t):t}catch(e){if(a)return a(e);throw e}},ar=new WeakSet,tr=async function(e,a){var t;if(!e||Array.isArray(e)||"object"!=typeof e){const t=new Kn(Ci.invalidRequest,"Requests must be plain objects. Received: "+typeof e,{request:e});return a(t,{id:null,jsonrpc:"2.0",error:t})}if("string"!=typeof e.method){const t=new Kn(Ci.invalidRequest,"Must specify a string method. Received: "+typeof e.method,{request:e});return _i(this,Jn)&&!fn(e)?a(null):a(t,{id:e.id??null,jsonrpc:"2.0",error:t})}if(_i(this,Jn)&&ji(e,vn)&&!fn(e)){try{await _i(this,Jn).call(this,e)}catch(e){return a(e)}return a(null)}let p=null;const d={...e},i={id:d.id,jsonrpc:d.jsonrpc};try{await Ti(t=hr,pr,dr).call(t,d,i,_i(this,Yn))}catch(e){p=e}return p&&(delete i.result,i.error||(i.error=En(p))),a(p,i)},pr=new WeakSet,dr=async function(e,a,t){var p,d,i;const[n,r,o]=await Ti(p=hr,ir,nr).call(p,e,a,t);if(Ti(d=hr,mr,cr).call(d,e,a,r),await Ti(i=hr,sr,lr).call(i,o),n)throw n},ir=new WeakSet,nr=async function(e,a,t){var p;const d=[];let i=null,n=!1;for(const r of t)if([i,n]=await Ti(p=hr,rr,or).call(p,e,a,r,d),n)break;return[i,n,d.reverse()]},rr=new WeakSet,or=async function(e,a,t,p){return new Promise((d=>{const i=e=>{const t=e||a.error;t&&(a.error=En(t)),d([t,!0])},n=t=>{a.error?i(a.error):(t&&("function"!=typeof t&&i(new Kn(Ci.internal,`JsonRpcEngine: "next" return handlers must be functions. Received "${typeof t}" for request:\n${fr(e)}`,{request:e})),p.push(t)),d([null,!1]))};try{t(e,a,n,i)}catch(e){i(e)}}))},sr=new WeakSet,lr=async function(e){for(const a of e)await new Promise(((e,t)=>{a((a=>a?t(a):e()))}))},mr=new WeakSet,cr=function(e,a,t){if(!ki(a,"result")&&!ki(a,"error"))throw new Kn(Ci.internal,`JsonRpcEngine: Response has no error or result for request:\n${fr(e)}`,{request:e});if(!t)throw new Kn(Ci.internal,`JsonRpcEngine: Nothing ended request:\n${fr(e)}`,{request:e})},Ei(hr,pr),Ei(hr,ir),Ei(hr,rr),Ei(hr,sr),Ei(hr,mr);var vr=hr;function fr(e){return JSON.stringify(e,null,2)}var gr=Object.freeze(["eth_subscription"]),wr=(e=console)=>{return[bi(),(a=e,(e,t,p)=>{"string"==typeof e.method&&e.method||(t.error=Fn({message:"The request 'method' must be a non-empty string.",data:e})),p((e=>{const{error:p}=t;return p?(a.error(`MetaMask - RPC Error: ${p.message}`,p),e()):e()}))}),gi(e)];var a};var yr=(e,a,t=!0)=>(p,d)=>{p||d.error?a(p||d.error):!t||Array.isArray(d)?e(d):e(d.result)},br=e=>Boolean(e)&&"string"==typeof e&&e.startsWith("0x"),Sr=()=>{};async function _r(e,a){try{const a=await async function(){return{name:Er(window),icon:await Nr(window)}}();e.handle({jsonrpc:"2.0",id:1,method:"metamask_sendDomainMetadata",params:a},Sr)}catch(e){a.error({message:fi.errors.sendSiteMetadata(),originalError:e})}}function Er(e){const{document:a}=e,t=a.querySelector('head > meta[property="og:site_name"]');if(t)return t.content;const p=a.querySelector('head > meta[name="title"]');return p?p.content:a.title&&a.title.length>0?a.title:window.location.hostname}async function Nr(e){const{document:a}=e,t=a.querySelectorAll('head > link[rel~="icon"]');for(const e of Array.from(t))if(e&&await Tr(e.href))return e.href;return null}async function Tr(e){return new Promise(((a,t)=>{try{const t=document.createElement("img");t.onload=()=>a(!0),t.onerror=()=>a(!1),t.src=e}catch(e){t(e)}}))}var Cr=(e,a,t)=>{if(!a.has(e))throw TypeError("Cannot "+t)},Dr=(e,a,t)=>(Cr(e,a,"read from private field"),t?t.call(e):a.get(e)),Ar=(e,a,t)=>{if(a.has(e))throw TypeError("Cannot add the same private member more than once");a instanceof WeakSet?a.add(e):a.set(e,t)},kr=(e,a,t,p)=>(Cr(e,a,"write to private field"),a.set(e,t),t);function Or(e,a,t){try{Reflect.apply(e,a,t)}catch(e){setTimeout((()=>{throw e}))}}class xr extends g{emit(e,...a){let t="error"===e;const p=this._events;if(void 0!==p)t=t&&void 0===p.error;else if(!t)return!1;if(t){let e;if(a.length>0&&([e]=a),e instanceof Error)throw e;const t=new Error("Unhandled error."+(e?` (${e.message})`:""));throw t.context=e,t}const d=p[e];if(void 0===d)return!1;if("function"==typeof d)Or(d,this,a);else{const e=d.length,t=function(e){const a=e.length,t=new Array(a);for(let p=0;p<a;p+=1)t[p]=e[p];return t}(d);for(let p=0;p<e;p+=1)Or(t[p],this,a)}return!0}}var Rr,Mr,Pr=function e(a,t){if(a===t)return!0;if(a&&t&&"object"==typeof a&&"object"==typeof t){if(a.constructor!==t.constructor)return!1;var p,d,i;if(Array.isArray(a)){if((p=a.length)!=t.length)return!1;for(d=p;0!=d--;)if(!e(a[d],t[d]))return!1;return!0}if(a.constructor===RegExp)return a.source===t.source&&a.flags===t.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===t.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===t.toString();if((p=(i=Object.keys(a)).length)!==Object.keys(t).length)return!1;for(d=p;0!=d--;)if(!Object.prototype.hasOwnProperty.call(t,i[d]))return!1;for(d=p;0!=d--;){var n=i[d];if(!e(a[n],t[n]))return!1}return!0}return a!=a&&t!=t},Ir=S(Pr),Vr=class e extends xr{constructor({logger:a=console,maxEventListeners:t=100,rpcMiddleware:p=[]}={}){super(),Ar(this,Rr,void 0),Ar(this,Mr,void 0),this._log=a,this.setMaxListeners(t),this._state={...e._defaultState},kr(this,Mr,null),kr(this,Rr,null),this._handleAccountsChanged=this._handleAccountsChanged.bind(this),this._handleConnect=this._handleConnect.bind(this),this._handleChainChanged=this._handleChainChanged.bind(this),this._handleDisconnect=this._handleDisconnect.bind(this),this._handleUnlockStateChanged=this._handleUnlockStateChanged.bind(this),this._rpcRequest=this._rpcRequest.bind(this),this.request=this.request.bind(this);const d=new vr;p.forEach((e=>d.push(e))),this._rpcEngine=d}get chainId(){return Dr(this,Rr)}get selectedAddress(){return Dr(this,Mr)}isConnected(){return this._state.isConnected}async request(e){if(!e||"object"!=typeof e||Array.isArray(e))throw Fn({message:fi.errors.invalidRequestArgs(),data:e});const{method:a,params:t}=e;if("string"!=typeof a||0===a.length)throw Fn({message:fi.errors.invalidRequestMethod(),data:e});if(void 0!==t&&!Array.isArray(t)&&("object"!=typeof t||null===t))throw Fn({message:fi.errors.invalidRequestParams(),data:e});const p=null==t?{method:a}:{method:a,params:t};return new Promise(((e,a)=>{this._rpcRequest(p,yr(e,a))}))}_initializeState(e){if(this._state.initialized)throw new Error("Provider already initialized.");if(e){const{accounts:a,chainId:t,isUnlocked:p,networkVersion:d}=e;this._handleConnect(t),this._handleChainChanged({chainId:t,networkVersion:d}),this._handleUnlockStateChanged({accounts:a,isUnlocked:p}),this._handleAccountsChanged(a)}this._state.initialized=!0,this.emit("_initialized")}_rpcRequest(e,a){let t=a;return Array.isArray(e)||(e.jsonrpc||(e.jsonrpc="2.0"),"eth_accounts"!==e.method&&"eth_requestAccounts"!==e.method||(t=(t,p)=>{this._handleAccountsChanged(p.result??[],"eth_accounts"===e.method),a(t,p)})),this._rpcEngine.handle(e,t)}_handleConnect(e){this._state.isConnected||(this._state.isConnected=!0,this.emit("connect",{chainId:e}),this._log.debug(fi.info.connected(e)))}_handleDisconnect(e,a){if(this._state.isConnected||!this._state.isPermanentlyDisconnected&&!e){let t;this._state.isConnected=!1,e?(t=new Kn(1013,a??fi.errors.disconnected()),this._log.debug(t)):(t=new Kn(1011,a??fi.errors.permanentlyDisconnected()),this._log.error(t),kr(this,Rr,null),this._state.accounts=null,kr(this,Mr,null),this._state.isUnlocked=!1,this._state.isPermanentlyDisconnected=!0),this.emit("disconnect",t)}}_handleChainChanged({chainId:e}={}){br(e)?(this._handleConnect(e),e!==Dr(this,Rr)&&(kr(this,Rr,e),this._state.initialized&&this.emit("chainChanged",Dr(this,Rr)))):this._log.error(fi.errors.invalidNetworkParams(),{chainId:e})}_handleAccountsChanged(e,a=!1){let t=e;Array.isArray(e)||(this._log.error("MetaMask: Received invalid accounts parameter. Please report this bug.",e),t=[]);for(const a of e)if("string"!=typeof a){this._log.error("MetaMask: Received non-string account. Please report this bug.",e),t=[];break}if(!Ir(this._state.accounts,t)&&(a&&null!==this._state.accounts&&this._log.error("MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.",t),this._state.accounts=t,Dr(this,Mr)!==t[0]&&kr(this,Mr,t[0]||null),this._state.initialized)){const e=[...t];this.emit("accountsChanged",e)}}_handleUnlockStateChanged({accounts:e,isUnlocked:a}={}){"boolean"==typeof a?a!==this._state.isUnlocked&&(this._state.isUnlocked=a,this._handleAccountsChanged(e??[])):this._log.error("MetaMask: Received invalid isUnlocked parameter. Please report this bug.")}};Rr=new WeakMap,Mr=new WeakMap,Vr._defaultState={accounts:null,isConnected:!1,isUnlocked:!1,initialized:!1,isPermanentlyDisconnected:!1};var Lr,Br,jr,Kr,Ur,Fr,$r=Vr,Hr={exports:{}};function zr(){return Br?Lr:(Br=1,Lr=a)}function qr(){if(Kr)return jr;function e(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);a&&(p=p.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,p)}return t}function a(a){for(var p=1;p<arguments.length;p++){var d=null!=arguments[p]?arguments[p]:{};p%2?e(Object(d),!0).forEach((function(e){t(a,e,d[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(d)):e(Object(d)).forEach((function(e){Object.defineProperty(a,e,Object.getOwnPropertyDescriptor(d,e))}))}return a}function t(e,a,t){return(a=d(a))in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function p(e,a,t){return a&&function(e,a){for(var t=0;t<a.length;t++){var p=a[t];p.enumerable=p.enumerable||!1,p.configurable=!0,"value"in p&&(p.writable=!0),Object.defineProperty(e,d(p.key),p)}}(e.prototype,a),Object.defineProperty(e,"prototype",{writable:!1}),e}function d(e){var a=function(e,a){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var p=t.call(e,a||"default");if("object"!=typeof p)return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(e)}(e,"string");return"symbol"==typeof a?a:String(a)}Kr=1;var i=o.Buffer,n=w.inspect,r=n&&n.custom||"inspect";return jr=function(){function e(){!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}return p(e,[{key:"push",value:function(e){var a={data:e,next:null};this.length>0?this.tail.next=a:this.head=a,this.tail=a,++this.length}},{key:"unshift",value:function(e){var a={data:e,next:this.head};0===this.length&&(this.tail=a),this.head=a,++this.length}},{key:"shift",value:function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}}},{key:"clear",value:function(){this.head=this.tail=null,this.length=0}},{key:"join",value:function(e){if(0===this.length)return"";for(var a=this.head,t=""+a.data;a=a.next;)t+=e+a.data;return t}},{key:"concat",value:function(e){if(0===this.length)return i.alloc(0);for(var a,t,p,d=i.allocUnsafe(e>>>0),n=this.head,r=0;n;)a=n.data,t=d,p=r,i.prototype.copy.call(a,t,p),r+=n.data.length,n=n.next;return d}},{key:"consume",value:function(e,a){var t;return e<this.head.data.length?(t=this.head.data.slice(0,e),this.head.data=this.head.data.slice(e)):t=e===this.head.data.length?this.shift():a?this._getString(e):this._getBuffer(e),t}},{key:"first",value:function(){return this.head.data}},{key:"_getString",value:function(e){var a=this.head,t=1,p=a.data;for(e-=p.length;a=a.next;){var d=a.data,i=e>d.length?d.length:e;if(i===d.length?p+=d:p+=d.slice(0,e),0===(e-=i)){i===d.length?(++t,a.next?this.head=a.next:this.head=this.tail=null):(this.head=a,a.data=d.slice(i));break}++t}return this.length-=t,p}},{key:"_getBuffer",value:function(e){var a=i.allocUnsafe(e),t=this.head,p=1;for(t.data.copy(a),e-=t.data.length;t=t.next;){var d=t.data,n=e>d.length?d.length:e;if(d.copy(a,a.length-e,0,n),0===(e-=n)){n===d.length?(++p,t.next?this.head=t.next:this.head=this.tail=null):(this.head=t,t.data=d.slice(n));break}++p}return this.length-=p,a}},{key:r,value:function(e,t){return n(this,a(a({},t),{},{depth:0,customInspect:!1}))}}]),e}(),jr}function Wr(){if(Fr)return Ur;function e(e,p){t(e,p),a(e)}function a(e){e._writableState&&!e._writableState.emitClose||e._readableState&&!e._readableState.emitClose||e.emit("close")}function t(e,a){e.emit("error",a)}return Fr=1,Ur={destroy:function(p,d){var i=this,n=this._readableState&&this._readableState.destroyed,r=this._writableState&&this._writableState.destroyed;return n||r?(d?d(p):p&&(this._writableState?this._writableState.errorEmitted||(this._writableState.errorEmitted=!0,process.nextTick(t,this,p)):process.nextTick(t,this,p)),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(p||null,(function(t){!d&&t?i._writableState?i._writableState.errorEmitted?process.nextTick(a,i):(i._writableState.errorEmitted=!0,process.nextTick(e,i,t)):process.nextTick(e,i,t):d?(process.nextTick(a,i),d(t)):process.nextTick(a,i)})),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finalCalled=!1,this._writableState.prefinished=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)},errorOrDestroy:function(e,a){var t=e._readableState,p=e._writableState;t&&t.autoDestroy||p&&p.autoDestroy?e.destroy(a):e.emit("error",a)}},Ur}var Gr,Yr,Jr,Zr={};function Xr(){if(Gr)return Zr;Gr=1;const e={};function a(a,t,p){p||(p=Error);class d extends p{constructor(e,a,p){super(function(e,a,p){return"string"==typeof t?t:t(e,a,p)}(e,a,p))}}d.prototype.name=p.name,d.prototype.code=a,e[a]=d}function t(e,a){if(Array.isArray(e)){const t=e.length;return e=e.map((e=>String(e))),t>2?`one of ${a} ${e.slice(0,t-1).join(", ")}, or `+e[t-1]:2===t?`one of ${a} ${e[0]} or ${e[1]}`:`of ${a} ${e[0]}`}return`of ${a} ${String(e)}`}return a("ERR_INVALID_OPT_VALUE",(function(e,a){return'The value "'+a+'" is invalid for option "'+e+'"'}),TypeError),a("ERR_INVALID_ARG_TYPE",(function(e,a,p){let d;var i;let n;if("string"==typeof a&&(i="not ",a.substr(0,i.length)===i)?(d="must not be",a=a.replace(/^not /,"")):d="must be",function(e,a,t){return(void 0===t||t>e.length)&&(t=e.length),e.substring(t-a.length,t)===a}(e," argument"))n=`The ${e} ${d} ${t(a,"type")}`;else{const p=function(e,a,t){return"number"!=typeof t&&(t=0),!(t+a.length>e.length)&&-1!==e.indexOf(a,t)}(e,".")?"property":"argument";n=`The "${e}" ${p} ${d} ${t(a,"type")}`}return n+=". Received type "+typeof p,n}),TypeError),a("ERR_STREAM_PUSH_AFTER_EOF","stream.push() after EOF"),a("ERR_METHOD_NOT_IMPLEMENTED",(function(e){return"The "+e+" method is not implemented"})),a("ERR_STREAM_PREMATURE_CLOSE","Premature close"),a("ERR_STREAM_DESTROYED",(function(e){return"Cannot call "+e+" after a stream was destroyed"})),a("ERR_MULTIPLE_CALLBACK","Callback called multiple times"),a("ERR_STREAM_CANNOT_PIPE","Cannot pipe, not readable"),a("ERR_STREAM_WRITE_AFTER_END","write after end"),a("ERR_STREAM_NULL_VALUES","May not write null values to stream",TypeError),a("ERR_UNKNOWN_ENCODING",(function(e){return"Unknown encoding: "+e}),TypeError),a("ERR_STREAM_UNSHIFT_AFTER_END_EVENT","stream.unshift() after end event"),Zr.codes=e,Zr}function Qr(){if(Jr)return Yr;Jr=1;var e=Xr().codes.ERR_INVALID_OPT_VALUE;return Yr={getHighWaterMark:function(a,t,p,d){var i=function(e,a,t){return null!=e.highWaterMark?e.highWaterMark:a?e[t]:null}(t,d,p);if(null!=i){if(!isFinite(i)||Math.floor(i)!==i||i<0)throw new e(d?p:"highWaterMark",i);return Math.floor(i)}return a.objectMode?16:16384}}}var eo,ao,to,po,io,no,ro,oo,so={exports:{}},lo={exports:{}};function mo(){if(ao)return so.exports;ao=1;try{var e=require("util");if("function"!=typeof e.inherits)throw"";so.exports=e.inherits}catch(e){so.exports=(eo||(eo=1,"function"==typeof Object.create?lo.exports=function(e,a){a&&(e.super_=a,e.prototype=Object.create(a.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:lo.exports=function(e,a){if(a){e.super_=a;var t=function(){};t.prototype=a.prototype,e.prototype=new t,e.prototype.constructor=e}}),lo.exports)}return so.exports}function co(){if(no)return io;function e(e){var a=this;this.next=null,this.entry=null,this.finish=function(){!function(e,a,t){var p=e.entry;e.entry=null;for(;p;){var d=p.callback;a.pendingcb--,d(t),p=p.next}a.corkedRequestsFree.next=e}(a,e)}}var a;no=1,io=N,N.WritableState=E;var t={deprecate:po?to:(po=1,to=w.deprecate)},p=zr(),d=o.Buffer,i=(void 0!==b?b:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){};var n,r=Wr(),s=Qr().getHighWaterMark,l=Xr().codes,m=l.ERR_INVALID_ARG_TYPE,c=l.ERR_METHOD_NOT_IMPLEMENTED,u=l.ERR_MULTIPLE_CALLBACK,h=l.ERR_STREAM_CANNOT_PIPE,v=l.ERR_STREAM_DESTROYED,f=l.ERR_STREAM_NULL_VALUES,g=l.ERR_STREAM_WRITE_AFTER_END,y=l.ERR_UNKNOWN_ENCODING,S=r.errorOrDestroy;function _(){}function E(t,p,d){a=a||uo(),t=t||{},"boolean"!=typeof d&&(d=p instanceof a),this.objectMode=!!t.objectMode,d&&(this.objectMode=this.objectMode||!!t.writableObjectMode),this.highWaterMark=s(this,t,"writableHighWaterMark",d),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var i=!1===t.decodeStrings;this.decodeStrings=!i,this.defaultEncoding=t.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,a){var t=e._writableState,p=t.sync,d=t.writecb;if("function"!=typeof d)throw new u;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(t),a)!function(e,a,t,p,d){--a.pendingcb,t?(process.nextTick(d,p),process.nextTick(O,e,a),e._writableState.errorEmitted=!0,S(e,p)):(d(p),e._writableState.errorEmitted=!0,S(e,p),O(e,a))}(e,t,p,a,d);else{var i=A(t)||e.destroyed;i||t.corked||t.bufferProcessing||!t.bufferedRequest||D(e,t),p?process.nextTick(C,e,t,i,d):C(e,t,i,d)}}(p,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.emitClose=!1!==t.emitClose,this.autoDestroy=!!t.autoDestroy,this.bufferedRequestCount=0,this.corkedRequestsFree=new e(this)}function N(e){var t=this instanceof(a=a||uo());if(!t&&!n.call(N,this))return new N(e);this._writableState=new E(e,this,t),this.writable=!0,e&&("function"==typeof e.write&&(this._write=e.write),"function"==typeof e.writev&&(this._writev=e.writev),"function"==typeof e.destroy&&(this._destroy=e.destroy),"function"==typeof e.final&&(this._final=e.final)),p.call(this)}function T(e,a,t,p,d,i,n){a.writelen=p,a.writecb=n,a.writing=!0,a.sync=!0,a.destroyed?a.onwrite(new v("write")):t?e._writev(d,a.onwrite):e._write(d,i,a.onwrite),a.sync=!1}function C(e,a,t,p){t||function(e,a){0===a.length&&a.needDrain&&(a.needDrain=!1,e.emit("drain"))}(e,a),a.pendingcb--,p(),O(e,a)}function D(a,t){t.bufferProcessing=!0;var p=t.bufferedRequest;if(a._writev&&p&&p.next){var d=t.bufferedRequestCount,i=new Array(d),n=t.corkedRequestsFree;n.entry=p;for(var r=0,o=!0;p;)i[r]=p,p.isBuf||(o=!1),p=p.next,r+=1;i.allBuffers=o,T(a,t,!0,t.length,i,"",n.finish),t.pendingcb++,t.lastBufferedRequest=null,n.next?(t.corkedRequestsFree=n.next,n.next=null):t.corkedRequestsFree=new e(t),t.bufferedRequestCount=0}else{for(;p;){var s=p.chunk,l=p.encoding,m=p.callback;if(T(a,t,!1,t.objectMode?1:s.length,s,l,m),p=p.next,t.bufferedRequestCount--,t.writing)break}null===p&&(t.lastBufferedRequest=null)}t.bufferedRequest=p,t.bufferProcessing=!1}function A(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function k(e,a){e._final((function(t){a.pendingcb--,t&&S(e,t),a.prefinished=!0,e.emit("prefinish"),O(e,a)}))}function O(e,a){var t=A(a);if(t&&(function(e,a){a.prefinished||a.finalCalled||("function"!=typeof e._final||a.destroyed?(a.prefinished=!0,e.emit("prefinish")):(a.pendingcb++,a.finalCalled=!0,process.nextTick(k,e,a)))}(e,a),0===a.pendingcb&&(a.finished=!0,e.emit("finish"),a.autoDestroy))){var p=e._readableState;(!p||p.autoDestroy&&p.endEmitted)&&e.destroy()}return t}return mo()(N,p),E.prototype.getBuffer=function(){for(var e=this.bufferedRequest,a=[];e;)a.push(e),e=e.next;return a},function(){try{Object.defineProperty(E.prototype,"buffer",{get:t.deprecate((function(){return this.getBuffer()}),"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"==typeof Symbol&&Symbol.hasInstance&&"function"==typeof Function.prototype[Symbol.hasInstance]?(n=Function.prototype[Symbol.hasInstance],Object.defineProperty(N,Symbol.hasInstance,{value:function(e){return!!n.call(this,e)||this===N&&(e&&e._writableState instanceof E)}})):n=function(e){return e instanceof this},N.prototype.pipe=function(){S(this,new h)},N.prototype.write=function(e,a,t){var p,n=this._writableState,r=!1,o=!n.objectMode&&(p=e,d.isBuffer(p)||p instanceof i);return o&&!d.isBuffer(e)&&(e=function(e){return d.from(e)}(e)),"function"==typeof a&&(t=a,a=null),o?a="buffer":a||(a=n.defaultEncoding),"function"!=typeof t&&(t=_),n.ending?function(e,a){var t=new g;S(e,t),process.nextTick(a,t)}(this,t):(o||function(e,a,t,p){var d;return null===t?d=new f:"string"==typeof t||a.objectMode||(d=new m("chunk",["string","Buffer"],t)),!d||(S(e,d),process.nextTick(p,d),!1)}(this,n,e,t))&&(n.pendingcb++,r=function(e,a,t,p,i,n){if(!t){var r=function(e,a,t){e.objectMode||!1===e.decodeStrings||"string"!=typeof a||(a=d.from(a,t));return a}(a,p,i);p!==r&&(t=!0,i="buffer",p=r)}var o=a.objectMode?1:p.length;a.length+=o;var s=a.length<a.highWaterMark;s||(a.needDrain=!0);if(a.writing||a.corked){var l=a.lastBufferedRequest;a.lastBufferedRequest={chunk:p,encoding:i,isBuf:t,callback:n,next:null},l?l.next=a.lastBufferedRequest:a.bufferedRequest=a.lastBufferedRequest,a.bufferedRequestCount+=1}else T(e,a,!1,o,p,i,n);return s}(this,n,o,e,a,t)),r},N.prototype.cork=function(){this._writableState.corked++},N.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.bufferProcessing||!e.bufferedRequest||D(this,e))},N.prototype.setDefaultEncoding=function(e){if("string"==typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new y(e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(N.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(N.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),N.prototype._write=function(e,a,t){t(new c("_write()"))},N.prototype._writev=null,N.prototype.end=function(e,a,t){var p=this._writableState;return"function"==typeof e?(t=e,e=null,a=null):"function"==typeof a&&(t=a,a=null),null!=e&&this.write(e,a),p.corked&&(p.corked=1,this.uncork()),p.ending||function(e,a,t){a.ending=!0,O(e,a),t&&(a.finished?process.nextTick(t):e.once("finish",t));a.ended=!0,e.writable=!1}(this,p,t),this},Object.defineProperty(N.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(N.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),N.prototype.destroy=r.destroy,N.prototype._undestroy=r.undestroy,N.prototype._destroy=function(e,a){a(e)},io}function uo(){if(oo)return ro;oo=1;var e=Object.keys||function(e){var a=[];for(var t in e)a.push(t);return a};ro=n;var a=Vo(),t=co();mo()(n,a);for(var p=e(t.prototype),d=0;d<p.length;d++){var i=p[d];n.prototype[i]||(n.prototype[i]=t.prototype[i])}function n(e){if(!(this instanceof n))return new n(e);a.call(this,e),t.call(this,e),this.allowHalfOpen=!0,e&&(!1===e.readable&&(this.readable=!1),!1===e.writable&&(this.writable=!1),!1===e.allowHalfOpen&&(this.allowHalfOpen=!1,this.once("end",r)))}function r(){this._writableState.ended||process.nextTick(o,this)}function o(e){e.end()}return Object.defineProperty(n.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(n.prototype,"writableBuffer",{enumerable:!1,get:function(){return this._writableState&&this._writableState.getBuffer()}}),Object.defineProperty(n.prototype,"writableLength",{enumerable:!1,get:function(){return this._writableState.length}}),Object.defineProperty(n.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),ro}var ho,vo,fo,go,wo,yo,bo,So,_o,Eo,No,To,Co,Do,Ao,ko,Oo={},xo={exports:{}};function Ro(){if(vo)return Oo;vo=1;var e=(ho||(ho=1,function(e,a){var t=o,p=t.Buffer;function d(e,a){for(var t in e)a[t]=e[t]}function i(e,a,t){return p(e,a,t)}p.from&&p.alloc&&p.allocUnsafe&&p.allocUnsafeSlow?e.exports=t:(d(t,a),a.Buffer=i),i.prototype=Object.create(p.prototype),d(p,i),i.from=function(e,a,t){if("number"==typeof e)throw new TypeError("Argument must not be a number");return p(e,a,t)},i.alloc=function(e,a,t){if("number"!=typeof e)throw new TypeError("Argument must be a number");var d=p(e);return void 0!==a?"string"==typeof t?d.fill(a,t):d.fill(a):d.fill(0),d},i.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return p(e)},i.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return t.SlowBuffer(e)}}(xo,xo.exports)),xo.exports).Buffer,a=e.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function t(t){var p;switch(this.encoding=function(t){var p=function(e){if(!e)return"utf8";for(var a;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(a)return;e=(""+e).toLowerCase(),a=!0}}(t);if("string"!=typeof p&&(e.isEncoding===a||!a(t)))throw new Error("Unknown encoding: "+t);return p||t}(t),this.encoding){case"utf16le":this.text=i,this.end=n,p=4;break;case"utf8":this.fillLast=d,p=4;break;case"base64":this.text=r,this.end=s,p=3;break;default:return this.write=l,void(this.end=m)}this.lastNeed=0,this.lastTotal=0,this.lastChar=e.allocUnsafe(p)}function p(e){return e<=127?0:e>>5==6?2:e>>4==14?3:e>>3==30?4:e>>6==2?-1:-2}function d(e){var a=this.lastTotal-this.lastNeed,t=function(e,a,t){if(128!=(192&a[0]))return e.lastNeed=0,"�";if(e.lastNeed>1&&a.length>1){if(128!=(192&a[1]))return e.lastNeed=1,"�";if(e.lastNeed>2&&a.length>2&&128!=(192&a[2]))return e.lastNeed=2,"�"}}(this,e);return void 0!==t?t:this.lastNeed<=e.length?(e.copy(this.lastChar,a,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,a,0,e.length),void(this.lastNeed-=e.length))}function i(e,a){if((e.length-a)%2==0){var t=e.toString("utf16le",a);if(t){var p=t.charCodeAt(t.length-1);if(p>=55296&&p<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],t.slice(0,-1)}return t}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",a,e.length-1)}function n(e){var a=e&&e.length?this.write(e):"";if(this.lastNeed){var t=this.lastTotal-this.lastNeed;return a+this.lastChar.toString("utf16le",0,t)}return a}function r(e,a){var t=(e.length-a)%3;return 0===t?e.toString("base64",a):(this.lastNeed=3-t,this.lastTotal=3,1===t?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",a,e.length-t))}function s(e){var a=e&&e.length?this.write(e):"";return this.lastNeed?a+this.lastChar.toString("base64",0,3-this.lastNeed):a}function l(e){return e.toString(this.encoding)}function m(e){return e&&e.length?this.write(e):""}return Oo.StringDecoder=t,t.prototype.write=function(e){if(0===e.length)return"";var a,t;if(this.lastNeed){if(void 0===(a=this.fillLast(e)))return"";t=this.lastNeed,this.lastNeed=0}else t=0;return t<e.length?a?a+this.text(e,t):this.text(e,t):a||""},t.prototype.end=function(e){var a=e&&e.length?this.write(e):"";return this.lastNeed?a+"�":a},t.prototype.text=function(e,a){var t=function(e,a,t){var d=a.length-1;if(d<t)return 0;var i=p(a[d]);if(i>=0)return i>0&&(e.lastNeed=i-1),i;if(--d<t||-2===i)return 0;if(i=p(a[d]),i>=0)return i>0&&(e.lastNeed=i-2),i;if(--d<t||-2===i)return 0;if(i=p(a[d]),i>=0)return i>0&&(2===i?i=0:e.lastNeed=i-3),i;return 0}(this,e,a);if(!this.lastNeed)return e.toString("utf8",a);this.lastTotal=t;var d=e.length-(t-this.lastNeed);return e.copy(this.lastChar,0,d),e.toString("utf8",a,d)},t.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length},Oo}function Mo(){if(go)return fo;go=1;var e=Xr().codes.ERR_STREAM_PREMATURE_CLOSE;function a(){}return fo=function t(p,d,i){if("function"==typeof d)return t(p,null,d);d||(d={}),i=function(e){var a=!1;return function(){if(!a){a=!0;for(var t=arguments.length,p=new Array(t),d=0;d<t;d++)p[d]=arguments[d];e.apply(this,p)}}}(i||a);var n=d.readable||!1!==d.readable&&p.readable,r=d.writable||!1!==d.writable&&p.writable,o=function(){p.writable||l()},s=p._writableState&&p._writableState.finished,l=function(){r=!1,s=!0,n||i.call(p)},m=p._readableState&&p._readableState.endEmitted,c=function(){n=!1,m=!0,r||i.call(p)},u=function(e){i.call(p,e)},h=function(){var a;return n&&!m?(p._readableState&&p._readableState.ended||(a=new e),i.call(p,a)):r&&!s?(p._writableState&&p._writableState.ended||(a=new e),i.call(p,a)):void 0},v=function(){p.req.on("finish",l)};return!function(e){return e.setHeader&&"function"==typeof e.abort}(p)?r&&!p._writableState&&(p.on("end",o),p.on("close",o)):(p.on("complete",l),p.on("abort",h),p.req?v():p.on("request",v)),p.on("end",c),p.on("finish",l),!1!==d.error&&p.on("error",u),p.on("close",h),function(){p.removeListener("complete",l),p.removeListener("abort",h),p.removeListener("request",v),p.req&&p.req.removeListener("finish",l),p.removeListener("end",o),p.removeListener("close",o),p.removeListener("finish",l),p.removeListener("end",c),p.removeListener("error",u),p.removeListener("close",h)}},fo}function Po(){if(yo)return wo;var e;function a(e,a,t){return(a=function(e){var a=function(e,a){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var p=t.call(e,a||"default");if("object"!=typeof p)return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(e)}(e,"string");return"symbol"==typeof a?a:String(a)}(a))in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}yo=1;var t=Mo(),p=Symbol("lastResolve"),d=Symbol("lastReject"),i=Symbol("error"),n=Symbol("ended"),r=Symbol("lastPromise"),o=Symbol("handlePromise"),s=Symbol("stream");function l(e,a){return{value:e,done:a}}function m(e){var a=e[p];if(null!==a){var t=e[s].read();null!==t&&(e[r]=null,e[p]=null,e[d]=null,a(l(t,!1)))}}function c(e){process.nextTick(m,e)}var u=Object.getPrototypeOf((function(){})),h=Object.setPrototypeOf((a(e={get stream(){return this[s]},next:function(){var e=this,a=this[i];if(null!==a)return Promise.reject(a);if(this[n])return Promise.resolve(l(void 0,!0));if(this[s].destroyed)return new Promise((function(a,t){process.nextTick((function(){e[i]?t(e[i]):a(l(void 0,!0))}))}));var t,p=this[r];if(p)t=new Promise(function(e,a){return function(t,p){e.then((function(){a[n]?t(l(void 0,!0)):a[o](t,p)}),p)}}(p,this));else{var d=this[s].read();if(null!==d)return Promise.resolve(l(d,!1));t=new Promise(this[o])}return this[r]=t,t}},Symbol.asyncIterator,(function(){return this})),a(e,"return",(function(){var e=this;return new Promise((function(a,t){e[s].destroy(null,(function(e){e?t(e):a(l(void 0,!0))}))}))})),e),u);return wo=function(e){var m,u=Object.create(h,(a(m={},s,{value:e,writable:!0}),a(m,p,{value:null,writable:!0}),a(m,d,{value:null,writable:!0}),a(m,i,{value:null,writable:!0}),a(m,n,{value:e._readableState.endEmitted,writable:!0}),a(m,o,{value:function(e,a){var t=u[s].read();t?(u[r]=null,u[p]=null,u[d]=null,e(l(t,!1))):(u[p]=e,u[d]=a)},writable:!0}),m));return u[r]=null,t(e,(function(e){if(e&&"ERR_STREAM_PREMATURE_CLOSE"!==e.code){var a=u[d];return null!==a&&(u[r]=null,u[p]=null,u[d]=null,a(e)),void(u[i]=e)}var t=u[p];null!==t&&(u[r]=null,u[p]=null,u[d]=null,t(l(void 0,!0))),u[n]=!0})),e.on("readable",c.bind(null,u)),u},wo}function Io(){if(So)return bo;function e(e,a,t,p,d,i,n){try{var r=e[i](n),o=r.value}catch(e){return void t(e)}r.done?a(o):Promise.resolve(o).then(p,d)}function a(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);a&&(p=p.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,p)}return t}function t(e,a,t){return(a=function(e){var a=function(e,a){if("object"!=typeof e||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var p=t.call(e,a||"default");if("object"!=typeof p)return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===a?String:Number)(e)}(e,"string");return"symbol"==typeof a?a:String(a)}(a))in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}So=1;var p=Xr().codes.ERR_INVALID_ARG_TYPE;return bo=function(d,i,n){var r;if(i&&"function"==typeof i.next)r=i;else if(i&&i[Symbol.asyncIterator])r=i[Symbol.asyncIterator]();else{if(!i||!i[Symbol.iterator])throw new p("iterable",["Iterable"],i);r=i[Symbol.iterator]()}var o=new d(function(e){for(var p=1;p<arguments.length;p++){var d=null!=arguments[p]?arguments[p]:{};p%2?a(Object(d),!0).forEach((function(a){t(e,a,d[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(d)):a(Object(d)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(d,a))}))}return e}({objectMode:!0},n)),s=!1;function l(){return m.apply(this,arguments)}function m(){var a;return a=function*(){try{var e=yield r.next(),a=e.value;e.done?o.push(null):o.push(yield a)?l():s=!1}catch(e){o.destroy(e)}},m=function(){var t=this,p=arguments;return new Promise((function(d,i){var n=a.apply(t,p);function r(a){e(n,d,i,r,o,"next",a)}function o(a){e(n,d,i,r,o,"throw",a)}r(void 0)}))},m.apply(this,arguments)}return o._read=function(){s||(s=!0,l())},o},bo}function Vo(){if(Eo)return _o;var e;Eo=1,_o=T,T.ReadableState=N,f.EventEmitter;var a=function(e,a){return e.listeners(a).length},t=zr(),p=o.Buffer,d=(void 0!==b?b:"undefined"!=typeof window?window:"undefined"!=typeof self?self:{}).Uint8Array||function(){};var i,n=w;i=n&&n.debuglog?n.debuglog("stream"):function(){};var r,s,l,m=qr(),c=Wr(),u=Qr().getHighWaterMark,h=Xr().codes,v=h.ERR_INVALID_ARG_TYPE,g=h.ERR_STREAM_PUSH_AFTER_EOF,y=h.ERR_METHOD_NOT_IMPLEMENTED,S=h.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;mo()(T,t);var _=c.errorOrDestroy,E=["error","close","destroy","pause","resume"];function N(a,t,p){e=e||uo(),a=a||{},"boolean"!=typeof p&&(p=t instanceof e),this.objectMode=!!a.objectMode,p&&(this.objectMode=this.objectMode||!!a.readableObjectMode),this.highWaterMark=u(this,a,"readableHighWaterMark",p),this.buffer=new m,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.paused=!0,this.emitClose=!1!==a.emitClose,this.autoDestroy=!!a.autoDestroy,this.destroyed=!1,this.defaultEncoding=a.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,a.encoding&&(r||(r=Ro().StringDecoder),this.decoder=new r(a.encoding),this.encoding=a.encoding)}function T(a){if(e=e||uo(),!(this instanceof T))return new T(a);var p=this instanceof e;this._readableState=new N(a,this,p),this.readable=!0,a&&("function"==typeof a.read&&(this._read=a.read),"function"==typeof a.destroy&&(this._destroy=a.destroy)),t.call(this)}function C(e,a,t,n,r){i("readableAddChunk",a);var o,s=e._readableState;if(null===a)s.reading=!1,function(e,a){if(i("onEofChunk"),a.ended)return;if(a.decoder){var t=a.decoder.end();t&&t.length&&(a.buffer.push(t),a.length+=a.objectMode?1:t.length)}a.ended=!0,a.sync?O(e):(a.needReadable=!1,a.emittedReadable||(a.emittedReadable=!0,x(e)))}(e,s);else if(r||(o=function(e,a){var t;i=a,p.isBuffer(i)||i instanceof d||"string"==typeof a||void 0===a||e.objectMode||(t=new v("chunk",["string","Buffer","Uint8Array"],a));var i;return t}(s,a)),o)_(e,o);else if(s.objectMode||a&&a.length>0)if("string"==typeof a||s.objectMode||Object.getPrototypeOf(a)===p.prototype||(a=function(e){return p.from(e)}(a)),n)s.endEmitted?_(e,new S):D(e,s,a,!0);else if(s.ended)_(e,new g);else{if(s.destroyed)return!1;s.reading=!1,s.decoder&&!t?(a=s.decoder.write(a),s.objectMode||0!==a.length?D(e,s,a,!1):R(e,s)):D(e,s,a,!1)}else n||(s.reading=!1,R(e,s));return!s.ended&&(s.length<s.highWaterMark||0===s.length)}function D(e,a,t,p){a.flowing&&0===a.length&&!a.sync?(a.awaitDrain=0,e.emit("data",t)):(a.length+=a.objectMode?1:t.length,p?a.buffer.unshift(t):a.buffer.push(t),a.needReadable&&O(e)),R(e,a)}Object.defineProperty(T.prototype,"destroyed",{enumerable:!1,get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),T.prototype.destroy=c.destroy,T.prototype._undestroy=c.undestroy,T.prototype._destroy=function(e,a){a(e)},T.prototype.push=function(e,a){var t,d=this._readableState;return d.objectMode?t=!0:"string"==typeof e&&((a=a||d.defaultEncoding)!==d.encoding&&(e=p.from(e,a),a=""),t=!0),C(this,e,a,!1,t)},T.prototype.unshift=function(e){return C(this,e,null,!0,!1)},T.prototype.isPaused=function(){return!1===this._readableState.flowing},T.prototype.setEncoding=function(e){r||(r=Ro().StringDecoder);var a=new r(e);this._readableState.decoder=a,this._readableState.encoding=this._readableState.decoder.encoding;for(var t=this._readableState.buffer.head,p="";null!==t;)p+=a.write(t.data),t=t.next;return this._readableState.buffer.clear(),""!==p&&this._readableState.buffer.push(p),this._readableState.length=p.length,this};var A=1073741824;function k(e,a){return e<=0||0===a.length&&a.ended?0:a.objectMode?1:e!=e?a.flowing&&a.length?a.buffer.head.data.length:a.length:(e>a.highWaterMark&&(a.highWaterMark=function(e){return e>=A?e=A:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=a.length?e:a.ended?a.length:(a.needReadable=!0,0))}function O(e){var a=e._readableState;i("emitReadable",a.needReadable,a.emittedReadable),a.needReadable=!1,a.emittedReadable||(i("emitReadable",a.flowing),a.emittedReadable=!0,process.nextTick(x,e))}function x(e){var a=e._readableState;i("emitReadable_",a.destroyed,a.length,a.ended),a.destroyed||!a.length&&!a.ended||(e.emit("readable"),a.emittedReadable=!1),a.needReadable=!a.flowing&&!a.ended&&a.length<=a.highWaterMark,L(e)}function R(e,a){a.readingMore||(a.readingMore=!0,process.nextTick(M,e,a))}function M(e,a){for(;!a.reading&&!a.ended&&(a.length<a.highWaterMark||a.flowing&&0===a.length);){var t=a.length;if(i("maybeReadMore read 0"),e.read(0),t===a.length)break}a.readingMore=!1}function P(e){var a=e._readableState;a.readableListening=e.listenerCount("readable")>0,a.resumeScheduled&&!a.paused?a.flowing=!0:e.listenerCount("data")>0&&e.resume()}function I(e){i("readable nexttick read 0"),e.read(0)}function V(e,a){i("resume",a.reading),a.reading||e.read(0),a.resumeScheduled=!1,e.emit("resume"),L(e),a.flowing&&!a.reading&&e.read(0)}function L(e){var a=e._readableState;for(i("flow",a.flowing);a.flowing&&null!==e.read(););}function B(e,a){return 0===a.length?null:(a.objectMode?t=a.buffer.shift():!e||e>=a.length?(t=a.decoder?a.buffer.join(""):1===a.buffer.length?a.buffer.first():a.buffer.concat(a.length),a.buffer.clear()):t=a.buffer.consume(e,a.decoder),t);var t}function j(e){var a=e._readableState;i("endReadable",a.endEmitted),a.endEmitted||(a.ended=!0,process.nextTick(K,a,e))}function K(e,a){if(i("endReadableNT",e.endEmitted,e.length),!e.endEmitted&&0===e.length&&(e.endEmitted=!0,a.readable=!1,a.emit("end"),e.autoDestroy)){var t=a._writableState;(!t||t.autoDestroy&&t.finished)&&a.destroy()}}function U(e,a){for(var t=0,p=e.length;t<p;t++)if(e[t]===a)return t;return-1}return T.prototype.read=function(e){i("read",e),e=parseInt(e,10);var a=this._readableState,t=e;if(0!==e&&(a.emittedReadable=!1),0===e&&a.needReadable&&((0!==a.highWaterMark?a.length>=a.highWaterMark:a.length>0)||a.ended))return i("read: emitReadable",a.length,a.ended),0===a.length&&a.ended?j(this):O(this),null;if(0===(e=k(e,a))&&a.ended)return 0===a.length&&j(this),null;var p,d=a.needReadable;return i("need readable",d),(0===a.length||a.length-e<a.highWaterMark)&&i("length less than watermark",d=!0),a.ended||a.reading?i("reading or ended",d=!1):d&&(i("do read"),a.reading=!0,a.sync=!0,0===a.length&&(a.needReadable=!0),this._read(a.highWaterMark),a.sync=!1,a.reading||(e=k(t,a))),null===(p=e>0?B(e,a):null)?(a.needReadable=a.length<=a.highWaterMark,e=0):(a.length-=e,a.awaitDrain=0),0===a.length&&(a.ended||(a.needReadable=!0),t!==e&&a.ended&&j(this)),null!==p&&this.emit("data",p),p},T.prototype._read=function(e){_(this,new y("_read()"))},T.prototype.pipe=function(e,t){var p=this,d=this._readableState;switch(d.pipesCount){case 0:d.pipes=e;break;case 1:d.pipes=[d.pipes,e];break;default:d.pipes.push(e)}d.pipesCount+=1,i("pipe count=%d opts=%j",d.pipesCount,t);var n=(!t||!1!==t.end)&&e!==process.stdout&&e!==process.stderr?o:v;function r(a,t){i("onunpipe"),a===p&&t&&!1===t.hasUnpiped&&(t.hasUnpiped=!0,i("cleanup"),e.removeListener("close",u),e.removeListener("finish",h),e.removeListener("drain",s),e.removeListener("error",c),e.removeListener("unpipe",r),p.removeListener("end",o),p.removeListener("end",v),p.removeListener("data",m),l=!0,!d.awaitDrain||e._writableState&&!e._writableState.needDrain||s())}function o(){i("onend"),e.end()}d.endEmitted?process.nextTick(n):p.once("end",n),e.on("unpipe",r);var s=function(e){return function(){var t=e._readableState;i("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&a(e,"data")&&(t.flowing=!0,L(e))}}(p);e.on("drain",s);var l=!1;function m(a){i("ondata");var t=e.write(a);i("dest.write",t),!1===t&&((1===d.pipesCount&&d.pipes===e||d.pipesCount>1&&-1!==U(d.pipes,e))&&!l&&(i("false write response, pause",d.awaitDrain),d.awaitDrain++),p.pause())}function c(t){i("onerror",t),v(),e.removeListener("error",c),0===a(e,"error")&&_(e,t)}function u(){e.removeListener("finish",h),v()}function h(){i("onfinish"),e.removeListener("close",u),v()}function v(){i("unpipe"),p.unpipe(e)}return p.on("data",m),function(e,a,t){if("function"==typeof e.prependListener)return e.prependListener(a,t);e._events&&e._events[a]?Array.isArray(e._events[a])?e._events[a].unshift(t):e._events[a]=[t,e._events[a]]:e.on(a,t)}(e,"error",c),e.once("close",u),e.once("finish",h),e.emit("pipe",p),d.flowing||(i("pipe resume"),p.resume()),e},T.prototype.unpipe=function(e){var a=this._readableState,t={hasUnpiped:!1};if(0===a.pipesCount)return this;if(1===a.pipesCount)return e&&e!==a.pipes||(e||(e=a.pipes),a.pipes=null,a.pipesCount=0,a.flowing=!1,e&&e.emit("unpipe",this,t)),this;if(!e){var p=a.pipes,d=a.pipesCount;a.pipes=null,a.pipesCount=0,a.flowing=!1;for(var i=0;i<d;i++)p[i].emit("unpipe",this,{hasUnpiped:!1});return this}var n=U(a.pipes,e);return-1===n||(a.pipes.splice(n,1),a.pipesCount-=1,1===a.pipesCount&&(a.pipes=a.pipes[0]),e.emit("unpipe",this,t)),this},T.prototype.on=function(e,a){var p=t.prototype.on.call(this,e,a),d=this._readableState;return"data"===e?(d.readableListening=this.listenerCount("readable")>0,!1!==d.flowing&&this.resume()):"readable"===e&&(d.endEmitted||d.readableListening||(d.readableListening=d.needReadable=!0,d.flowing=!1,d.emittedReadable=!1,i("on readable",d.length,d.reading),d.length?O(this):d.reading||process.nextTick(I,this))),p},T.prototype.addListener=T.prototype.on,T.prototype.removeListener=function(e,a){var p=t.prototype.removeListener.call(this,e,a);return"readable"===e&&process.nextTick(P,this),p},T.prototype.removeAllListeners=function(e){var a=t.prototype.removeAllListeners.apply(this,arguments);return"readable"!==e&&void 0!==e||process.nextTick(P,this),a},T.prototype.resume=function(){var e=this._readableState;return e.flowing||(i("resume"),e.flowing=!e.readableListening,function(e,a){a.resumeScheduled||(a.resumeScheduled=!0,process.nextTick(V,e,a))}(this,e)),e.paused=!1,this},T.prototype.pause=function(){return i("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(i("pause"),this._readableState.flowing=!1,this.emit("pause")),this._readableState.paused=!0,this},T.prototype.wrap=function(e){var a=this,t=this._readableState,p=!1;for(var d in e.on("end",(function(){if(i("wrapped end"),t.decoder&&!t.ended){var e=t.decoder.end();e&&e.length&&a.push(e)}a.push(null)})),e.on("data",(function(d){(i("wrapped data"),t.decoder&&(d=t.decoder.write(d)),t.objectMode&&null==d)||(t.objectMode||d&&d.length)&&(a.push(d)||(p=!0,e.pause()))})),e)void 0===this[d]&&"function"==typeof e[d]&&(this[d]=function(a){return function(){return e[a].apply(e,arguments)}}(d));for(var n=0;n<E.length;n++)e.on(E[n],this.emit.bind(this,E[n]));return this._read=function(a){i("wrapped _read",a),p&&(p=!1,e.resume())},this},"function"==typeof Symbol&&(T.prototype[Symbol.asyncIterator]=function(){return void 0===s&&(s=Po()),s(this)}),Object.defineProperty(T.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),Object.defineProperty(T.prototype,"readableBuffer",{enumerable:!1,get:function(){return this._readableState&&this._readableState.buffer}}),Object.defineProperty(T.prototype,"readableFlowing",{enumerable:!1,get:function(){return this._readableState.flowing},set:function(e){this._readableState&&(this._readableState.flowing=e)}}),T._fromList=B,Object.defineProperty(T.prototype,"readableLength",{enumerable:!1,get:function(){return this._readableState.length}}),"function"==typeof Symbol&&(T.from=function(e,a){return void 0===l&&(l=Io()),l(T,e,a)}),_o}function Lo(){if(To)return No;To=1,No=r;var e=Xr().codes,a=e.ERR_METHOD_NOT_IMPLEMENTED,t=e.ERR_MULTIPLE_CALLBACK,p=e.ERR_TRANSFORM_ALREADY_TRANSFORMING,d=e.ERR_TRANSFORM_WITH_LENGTH_0,i=uo();function n(e,a){var p=this._transformState;p.transforming=!1;var d=p.writecb;if(null===d)return this.emit("error",new t);p.writechunk=null,p.writecb=null,null!=a&&this.push(a),d(e);var i=this._readableState;i.reading=!1,(i.needReadable||i.length<i.highWaterMark)&&this._read(i.highWaterMark)}function r(e){if(!(this instanceof r))return new r(e);i.call(this,e),this._transformState={afterTransform:n.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"==typeof e.transform&&(this._transform=e.transform),"function"==typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",o)}function o(){var e=this;"function"!=typeof this._flush||this._readableState.destroyed?s(this,null,null):this._flush((function(a,t){s(e,a,t)}))}function s(e,a,t){if(a)return e.emit("error",a);if(null!=t&&e.push(t),e._writableState.length)throw new d;if(e._transformState.transforming)throw new p;return e.push(null)}return mo()(r,i),r.prototype.push=function(e,a){return this._transformState.needTransform=!1,i.prototype.push.call(this,e,a)},r.prototype._transform=function(e,t,p){p(new a("_transform()"))},r.prototype._write=function(e,a,t){var p=this._transformState;if(p.writecb=t,p.writechunk=e,p.writeencoding=a,!p.transforming){var d=this._readableState;(p.needTransform||d.needReadable||d.length<d.highWaterMark)&&this._read(d.highWaterMark)}},r.prototype._read=function(e){var a=this._transformState;null===a.writechunk||a.transforming?a.needTransform=!0:(a.transforming=!0,this._transform(a.writechunk,a.writeencoding,a.afterTransform))},r.prototype._destroy=function(e,a){i.prototype._destroy.call(this,e,(function(e){a(e)}))},No}function Bo(){if(ko)return Ao;var e;ko=1;var a=Xr().codes,t=a.ERR_MISSING_ARGS,p=a.ERR_STREAM_DESTROYED;function d(e){if(e)throw e}function i(e){e()}function n(e,a){return e.pipe(a)}return Ao=function(){for(var a=arguments.length,r=new Array(a),o=0;o<a;o++)r[o]=arguments[o];var s,l=function(e){return e.length?"function"!=typeof e[e.length-1]?d:e.pop():d}(r);if(Array.isArray(r[0])&&(r=r[0]),r.length<2)throw new t("streams");var m=r.map((function(a,t){var d=t<r.length-1;return function(a,t,d,i){i=function(e){var a=!1;return function(){a||(a=!0,e.apply(void 0,arguments))}}(i);var n=!1;a.on("close",(function(){n=!0})),void 0===e&&(e=Mo()),e(a,{readable:t,writable:d},(function(e){if(e)return i(e);n=!0,i()}));var r=!1;return function(e){if(!n&&!r)return r=!0,function(e){return e.setHeader&&"function"==typeof e.abort}(a)?a.abort():"function"==typeof a.destroy?a.destroy():void i(e||new p("pipe"))}}(a,d,t>0,(function(e){s||(s=e),e&&m.forEach(i),d||(m.forEach(i),l(s))}))}));return r.reduce(n)},Ao}!function(e,t){var p=a;"disable"===process.env.READABLE_STREAM&&p?(e.exports=p.Readable,Object.assign(e.exports,p),e.exports.Stream=p):((t=e.exports=Vo()).Stream=p||t,t.Readable=t,t.Writable=co(),t.Duplex=uo(),t.Transform=Lo(),t.PassThrough=function(){if(Do)return Co;Do=1,Co=a;var e=Lo();function a(t){if(!(this instanceof a))return new a(t);e.call(this,t)}return mo()(a,e),a.prototype._transform=function(e,a,t){t(null,e)},Co}(),t.finished=Mo(),t.pipeline=Bo())}(Hr,Hr.exports);var jo=Hr.exports;function Ko(e={}){const a={},t=new jo.Duplex({objectMode:!0,read:()=>{},write:function(t,i,n){let r=null;try{!t.id?function(t){e?.retryOnMessage&&t.method===e.retryOnMessage&&Object.values(a).forEach((({req:e,retryCount:t=0})=>{if(!e.id)return;if(t>=3)throw new Error(`StreamMiddleware - Retry limit exceeded for request id "${e.id}"`);const p=a[e.id];p&&(p.retryCount=t+1),d(e)}));p.emit("notification",t)}(t):function(e){const{id:t}=e;if(null===t)return;const p=a[t];if(!p)return void console.warn(`StreamMiddleware - Unknown response id "${t}"`);delete a[t],Object.assign(p.res,e),setTimeout(p.end)}(t)}catch(e){r=e}n(r)}}),p=new ur;return{events:p,middleware:(e,t,p,i)=>{a[e.id]={req:e,res:t,next:p,end:i},d(e)},stream:t};function d(e){t.push(e)}}var Uo={},Fo={exports:{}},$o=function e(a,t){if(a&&t)return e(a)(t);if("function"!=typeof a)throw new TypeError("need wrapper function");return Object.keys(a).forEach((function(e){p[e]=a[e]})),p;function p(){for(var e=new Array(arguments.length),t=0;t<e.length;t++)e[t]=arguments[t];var p=a.apply(this,e),d=e[e.length-1];return"function"==typeof p&&p!==d&&Object.keys(d).forEach((function(e){p[e]=d[e]})),p}};var Ho=$o;function zo(e){var a=function(){return a.called?a.value:(a.called=!0,a.value=e.apply(this,arguments))};return a.called=!1,a}function qo(e){var a=function(){if(a.called)throw new Error(a.onceError);return a.called=!0,a.value=e.apply(this,arguments)},t=e.name||"Function wrapped with `once`";return a.onceError=t+" shouldn't be called more than once",a.called=!1,a}Fo.exports=Ho(zo),Fo.exports.strict=Ho(qo),zo.proto=zo((function(){Object.defineProperty(Function.prototype,"once",{value:function(){return zo(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return qo(this)},configurable:!0})}));var Wo=Fo.exports,Go={};Object.defineProperty(Go,"__esModule",{value:!0}),Go.Substream=void 0;const Yo=jo;class Jo extends Yo.Duplex{constructor({parent:e,name:a}){super({objectMode:!0}),this._parent=e,this._name=a}_read(){}_write(e,a,t){this._parent.push({name:this._name,data:e}),t()}}Go.Substream=Jo;var Zo=b&&b.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Uo,"__esModule",{value:!0}),Uo.ObjectMultiplex=void 0;const Xo=jo,Qo=Zo(Wo),es=Go,as=Symbol("IGNORE_SUBSTREAM");let ts=class extends Xo.Duplex{constructor(e={}){super(Object.assign(Object.assign({},e),{objectMode:!0})),this._substreams={}}createStream(e){if(this.destroyed)throw new Error(`ObjectMultiplex - parent stream for name "${e}" already destroyed`);if(this._readableState.ended||this._writableState.ended)throw new Error(`ObjectMultiplex - parent stream for name "${e}" already ended`);if(!e)throw new Error("ObjectMultiplex - name must not be empty");if(this._substreams[e])throw new Error(`ObjectMultiplex - Substream for name "${e}" already exists`);const a=new es.Substream({parent:this,name:e});return this._substreams[e]=a,function(e,a){const t=(0,Qo.default)(a);(0,Xo.finished)(e,{readable:!1},t),(0,Xo.finished)(e,{writable:!1},t)}(this,(e=>a.destroy(e||void 0))),a}ignoreStream(e){if(!e)throw new Error("ObjectMultiplex - name must not be empty");if(this._substreams[e])throw new Error(`ObjectMultiplex - Substream for name "${e}" already exists`);this._substreams[e]=as}_read(){}_write(e,a,t){const{name:p,data:d}=e;if(!p)return console.warn(`ObjectMultiplex - malformed chunk without name "${e}"`),t();const i=this._substreams[p];return i?(i!==as&&i.push(d),t()):(console.warn(`ObjectMultiplex - orphaned data for stream "${p}"`),t())}};Uo.ObjectMultiplex=ts;var ps=S(Uo.ObjectMultiplex);const ds=e=>null!==e&&"object"==typeof e&&"function"==typeof e.pipe;ds.writable=e=>ds(e)&&!1!==e.writable&&"function"==typeof e._write&&"object"==typeof e._writableState,ds.readable=e=>ds(e)&&!1!==e.readable&&"function"==typeof e._read&&"object"==typeof e._readableState,ds.duplex=e=>ds.writable(e)&&ds.readable(e),ds.transform=e=>ds.duplex(e)&&"function"==typeof e._transform;var is,ns=ds,rs=class extends $r{constructor(e,{jsonRpcStreamName:a,logger:t=console,maxEventListeners:p=100,rpcMiddleware:d=[]}){if(super({logger:t,maxEventListeners:p,rpcMiddleware:d}),!ns.duplex(e))throw new Error(fi.errors.invalidDuplexStream());this._handleStreamDisconnect=this._handleStreamDisconnect.bind(this);const i=new ps;jo.pipeline(e,i,e,this._handleStreamDisconnect.bind(this,"MetaMask")),this._jsonRpcConnection=Ko({retryOnMessage:"METAMASK_EXTENSION_CONNECT_CAN_RETRY"}),jo.pipeline(this._jsonRpcConnection.stream,i.createStream(a),this._jsonRpcConnection.stream,this._handleStreamDisconnect.bind(this,"MetaMask RpcProvider")),this._rpcEngine.push(this._jsonRpcConnection.middleware),this._jsonRpcConnection.events.on("notification",(a=>{const{method:t,params:p}=a;"metamask_accountsChanged"===t?this._handleAccountsChanged(p):"metamask_unlockStateChanged"===t?this._handleUnlockStateChanged(p):"metamask_chainChanged"===t?this._handleChainChanged(p):gr.includes(t)?this.emit("message",{type:t,data:p}):"METAMASK_STREAM_FAILURE"===t&&e.destroy(new Error(fi.errors.permanentlyDisconnected()))}))}async _initializeStateAsync(){let e;try{e=await this.request({method:"metamask_getProviderState"})}catch(e){this._log.error("MetaMask: Failed to get initial state. Please report this bug.",e)}this._initializeState(e)}_handleStreamDisconnect(e,a){let t=`MetaMask: Lost connection to "${e}".`;a?.stack&&(t+=`\n${a.stack}`),this._log.warn(t),this.listenerCount("error")>0&&this.emit("error",t),this._handleDisconnect(!1,a?a.message:void 0)}_handleChainChanged({chainId:e,networkVersion:a}={}){br(e)&&(e=>Boolean(e)&&"string"==typeof e)(a)?"loading"===a?this._handleDisconnect(!0):super._handleChainChanged({chainId:e}):this._log.error(fi.errors.invalidNetworkParams(),{chainId:e,networkVersion:a})}},os=class extends rs{constructor(e,{jsonRpcStreamName:a="metamask-provider",logger:t=console,maxEventListeners:p=100,shouldSendMetadata:d}={}){if(super(e,{jsonRpcStreamName:a,logger:t,maxEventListeners:p,rpcMiddleware:wr(t)}),this._sentWarnings={chainId:!1,networkVersion:!1,selectedAddress:!1,enable:!1,experimentalMethods:!1,send:!1,events:{close:!1,data:!1,networkChanged:!1,notification:!1}},Ar(this,is,void 0),this._initializeStateAsync(),kr(this,is,null),this.isMetaMask=!0,this._sendSync=this._sendSync.bind(this),this.enable=this.enable.bind(this),this.send=this.send.bind(this),this.sendAsync=this.sendAsync.bind(this),this._warnOfDeprecation=this._warnOfDeprecation.bind(this),this._metamask=this._getExperimentalApi(),this._jsonRpcConnection.events.on("notification",(e=>{const{method:a}=e;gr.includes(a)&&(this.emit("data",e),this.emit("notification",e.params.result))})),d)if("complete"===document.readyState)_r(this._rpcEngine,this._log);else{const e=()=>{_r(this._rpcEngine,this._log),window.removeEventListener("DOMContentLoaded",e)};window.addEventListener("DOMContentLoaded",e)}}get chainId(){return this._sentWarnings.chainId||(this._log.warn(fi.warnings.chainIdDeprecation),this._sentWarnings.chainId=!0),super.chainId}get networkVersion(){return this._sentWarnings.networkVersion||(this._log.warn(fi.warnings.networkVersionDeprecation),this._sentWarnings.networkVersion=!0),Dr(this,is)}get selectedAddress(){return this._sentWarnings.selectedAddress||(this._log.warn(fi.warnings.selectedAddressDeprecation),this._sentWarnings.selectedAddress=!0),super.selectedAddress}sendAsync(e,a){this._rpcRequest(e,a)}addListener(e,a){return this._warnOfDeprecation(e),super.addListener(e,a)}on(e,a){return this._warnOfDeprecation(e),super.on(e,a)}once(e,a){return this._warnOfDeprecation(e),super.once(e,a)}prependListener(e,a){return this._warnOfDeprecation(e),super.prependListener(e,a)}prependOnceListener(e,a){return this._warnOfDeprecation(e),super.prependOnceListener(e,a)}_handleDisconnect(e,a){super._handleDisconnect(e,a),Dr(this,is)&&!e&&kr(this,is,null)}_warnOfDeprecation(e){!1===this._sentWarnings?.events[e]&&(this._log.warn(fi.warnings.events[e]),this._sentWarnings.events[e]=!0)}async enable(){return this._sentWarnings.enable||(this._log.warn(fi.warnings.enableDeprecation),this._sentWarnings.enable=!0),new Promise(((e,a)=>{try{this._rpcRequest({method:"eth_requestAccounts",params:[]},yr(e,a))}catch(e){a(e)}}))}send(e,a){return this._sentWarnings.send||(this._log.warn(fi.warnings.sendDeprecation),this._sentWarnings.send=!0),"string"!=typeof e||a&&!Array.isArray(a)?e&&"object"==typeof e&&"function"==typeof a?this._rpcRequest(e,a):this._sendSync(e):new Promise(((t,p)=>{try{this._rpcRequest({method:e,params:a},yr(t,p,!1))}catch(e){p(e)}}))}_sendSync(e){let a;switch(e.method){case"eth_accounts":a=this.selectedAddress?[this.selectedAddress]:[];break;case"eth_coinbase":a=this.selectedAddress??null;break;case"eth_uninstallFilter":this._rpcRequest(e,Sr),a=!0;break;case"net_version":a=Dr(this,is)??null;break;default:throw new Error(fi.errors.unsupportedSync(e.method))}return{id:e.id,jsonrpc:e.jsonrpc,result:a}}_getExperimentalApi(){return new Proxy({isUnlocked:async()=>(this._state.initialized||await new Promise((e=>{this.on("_initialized",(()=>e()))})),this._state.isUnlocked),requestBatch:async e=>{if(!Array.isArray(e))throw Fn({message:"Batch requests must be made with an array of request objects.",data:e});return new Promise(((a,t)=>{this._rpcRequest(e,yr(a,t))}))}},{get:(e,a,...t)=>(this._sentWarnings.experimentalMethods||(this._log.warn(fi.warnings.experimentalMethods),this._sentWarnings.experimentalMethods=!0),Reflect.get(e,a,...t))})}_handleChainChanged({chainId:e,networkVersion:a}={}){super._handleChainChanged({chainId:e,networkVersion:a}),this._state.isConnected&&a!==Dr(this,is)&&(kr(this,is,a),this._state.initialized&&this.emit("networkChanged",Dr(this,is)))}};is=new WeakMap;const ss=r("MM_SDK");ss.color="#FFAC1C";var ls={},ms={};Object.defineProperty(ms,"__esModule",{value:!0}),ms.EthereumProviderError=ms.EthereumRpcError=void 0;const cs=Cn;class us extends Error{constructor(e,a,t){if(!Number.isInteger(e))throw new Error('"code" must be an integer.');if(!a||"string"!=typeof a)throw new Error('"message" must be a nonempty string.');super(a),this.code=e,void 0!==t&&(this.data=t)}serialize(){const e={code:this.code,message:this.message};return void 0!==this.data&&(e.data=this.data),this.stack&&(e.stack=this.stack),e}toString(){return cs.default(this.serialize(),hs,2)}}ms.EthereumRpcError=us;function hs(e,a){if("[Circular]"!==a)return a}ms.EthereumProviderError=class extends us{constructor(e,a,t){if(!function(e){return Number.isInteger(e)&&e>=1e3&&e<=4999}(e))throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');super(e,a,t)}};var vs={},fs={};Object.defineProperty(fs,"__esModule",{value:!0}),fs.errorValues=fs.errorCodes=void 0,fs.errorCodes={rpc:{invalidInput:-32e3,resourceNotFound:-32001,resourceUnavailable:-32002,transactionRejected:-32003,methodNotSupported:-32004,limitExceeded:-32005,parse:-32700,invalidRequest:-32600,methodNotFound:-32601,invalidParams:-32602,internal:-32603},provider:{userRejectedRequest:4001,unauthorized:4100,unsupportedMethod:4200,disconnected:4900,chainDisconnected:4901}},fs.errorValues={"-32700":{standard:"JSON RPC 2.0",message:"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."},"-32600":{standard:"JSON RPC 2.0",message:"The JSON sent is not a valid Request object."},"-32601":{standard:"JSON RPC 2.0",message:"The method does not exist / is not available."},"-32602":{standard:"JSON RPC 2.0",message:"Invalid method parameter(s)."},"-32603":{standard:"JSON RPC 2.0",message:"Internal JSON-RPC error."},"-32000":{standard:"EIP-1474",message:"Invalid input."},"-32001":{standard:"EIP-1474",message:"Resource not found."},"-32002":{standard:"EIP-1474",message:"Resource unavailable."},"-32003":{standard:"EIP-1474",message:"Transaction rejected."},"-32004":{standard:"EIP-1474",message:"Method not supported."},"-32005":{standard:"EIP-1474",message:"Request limit exceeded."},4001:{standard:"EIP-1193",message:"User rejected the request."},4100:{standard:"EIP-1193",message:"The requested account and/or method has not been authorized by the user."},4200:{standard:"EIP-1193",message:"The requested method is not supported by this Ethereum provider."},4900:{standard:"EIP-1193",message:"The provider is disconnected from all chains."},4901:{standard:"EIP-1193",message:"The provider is disconnected from the specified chain."}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.serializeError=e.isValidCode=e.getMessageFromCode=e.JSON_RPC_SERVER_ERROR_MESSAGE=void 0;const a=fs,t=ms,p=a.errorCodes.rpc.internal,d="Unspecified error message. This is a bug, please report it.",i={code:p,message:n(p)};function n(t,p=d){if(Number.isInteger(t)){const p=t.toString();if(l(a.errorValues,p))return a.errorValues[p].message;if(o(t))return e.JSON_RPC_SERVER_ERROR_MESSAGE}return p}function r(e){if(!Number.isInteger(e))return!1;const t=e.toString();return!!a.errorValues[t]||!!o(e)}function o(e){return e>=-32099&&e<=-32e3}function s(e){return e&&"object"==typeof e&&!Array.isArray(e)?Object.assign({},e):e}function l(e,a){return Object.prototype.hasOwnProperty.call(e,a)}e.JSON_RPC_SERVER_ERROR_MESSAGE="Unspecified server error.",e.getMessageFromCode=n,e.isValidCode=r,e.serializeError=function(e,{fallbackError:a=i,shouldIncludeStack:p=!1}={}){var d,o;if(!a||!Number.isInteger(a.code)||"string"!=typeof a.message)throw new Error("Must provide fallback error with integer number code and string message.");if(e instanceof t.EthereumRpcError)return e.serialize();const m={};if(e&&"object"==typeof e&&!Array.isArray(e)&&l(e,"code")&&r(e.code)){const a=e;m.code=a.code,a.message&&"string"==typeof a.message?(m.message=a.message,l(a,"data")&&(m.data=a.data)):(m.message=n(m.code),m.data={originalError:s(e)})}else{m.code=a.code;const t=null===(d=e)||void 0===d?void 0:d.message;m.message=t&&"string"==typeof t?t:a.message,m.data={originalError:s(e)}}const c=null===(o=e)||void 0===o?void 0:o.stack;return p&&e&&c&&"string"==typeof c&&(m.stack=c),m}}(vs);var gs={};Object.defineProperty(gs,"__esModule",{value:!0}),gs.ethErrors=void 0;const ws=ms,ys=vs,bs=fs;function Ss(e,a){const[t,p]=Es(a);return new ws.EthereumRpcError(e,t||ys.getMessageFromCode(e),p)}function _s(e,a){const[t,p]=Es(a);return new ws.EthereumProviderError(e,t||ys.getMessageFromCode(e),p)}function Es(e){if(e){if("string"==typeof e)return[e];if("object"==typeof e&&!Array.isArray(e)){const{message:a,data:t}=e;if(a&&"string"!=typeof a)throw new Error("Must specify string message.");return[a||void 0,t]}}return[]}gs.ethErrors={rpc:{parse:e=>Ss(bs.errorCodes.rpc.parse,e),invalidRequest:e=>Ss(bs.errorCodes.rpc.invalidRequest,e),invalidParams:e=>Ss(bs.errorCodes.rpc.invalidParams,e),methodNotFound:e=>Ss(bs.errorCodes.rpc.methodNotFound,e),internal:e=>Ss(bs.errorCodes.rpc.internal,e),server:e=>{if(!e||"object"!=typeof e||Array.isArray(e))throw new Error("Ethereum RPC Server errors must provide single object argument.");const{code:a}=e;if(!Number.isInteger(a)||a>-32005||a<-32099)throw new Error('"code" must be an integer such that: -32099 <= code <= -32005');return Ss(a,e)},invalidInput:e=>Ss(bs.errorCodes.rpc.invalidInput,e),resourceNotFound:e=>Ss(bs.errorCodes.rpc.resourceNotFound,e),resourceUnavailable:e=>Ss(bs.errorCodes.rpc.resourceUnavailable,e),transactionRejected:e=>Ss(bs.errorCodes.rpc.transactionRejected,e),methodNotSupported:e=>Ss(bs.errorCodes.rpc.methodNotSupported,e),limitExceeded:e=>Ss(bs.errorCodes.rpc.limitExceeded,e)},provider:{userRejectedRequest:e=>_s(bs.errorCodes.provider.userRejectedRequest,e),unauthorized:e=>_s(bs.errorCodes.provider.unauthorized,e),unsupportedMethod:e=>_s(bs.errorCodes.provider.unsupportedMethod,e),disconnected:e=>_s(bs.errorCodes.provider.disconnected,e),chainDisconnected:e=>_s(bs.errorCodes.provider.chainDisconnected,e),custom:e=>{if(!e||"object"!=typeof e||Array.isArray(e))throw new Error("Ethereum Provider custom errors must provide single object argument.");const{code:a,message:t,data:p}=e;if(!t||"string"!=typeof t)throw new Error('"message" must be a nonempty string');return new ws.EthereumProviderError(a,t,p)}}},function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.getMessageFromCode=e.serializeError=e.EthereumProviderError=e.EthereumRpcError=e.ethErrors=e.errorCodes=void 0;const a=ms;Object.defineProperty(e,"EthereumRpcError",{enumerable:!0,get:function(){return a.EthereumRpcError}}),Object.defineProperty(e,"EthereumProviderError",{enumerable:!0,get:function(){return a.EthereumProviderError}});const t=vs;Object.defineProperty(e,"serializeError",{enumerable:!0,get:function(){return t.serializeError}}),Object.defineProperty(e,"getMessageFromCode",{enumerable:!0,get:function(){return t.getMessageFromCode}});const p=gs;Object.defineProperty(e,"ethErrors",{enumerable:!0,get:function(){return p.ethErrors}});const d=fs;Object.defineProperty(e,"errorCodes",{enumerable:!0,get:function(){return d.errorCodes}})}(ls);const Ns={METAMASK_GETPROVIDERSTATE:"metamask_getProviderState",METAMASK_CONNECTSIGN:"metamask_connectSign",METAMASK_CONNECTWITH:"metamask_connectWith",METAMASK_OPEN:"metamask_open",METAMASK_BATCH:"metamask_batch",PERSONAL_SIGN:"personal_sign",WALLET_REQUESTPERMISSIONS:"wallet_requestPermissions",WALLET_REVOKEPERMISSIONS:"wallet_revokePermissions",WALLET_GETPERMISSIONS:"wallet_getPermissions",WALLET_WATCHASSET:"wallet_watchAsset",WALLET_ADDETHEREUMCHAIN:"wallet_addEthereumChain",WALLET_SWITCHETHETHEREUMCHAIN:"wallet_switchEthereumChain",ETH_REQUESTACCOUNTS:"eth_requestAccounts",ETH_ACCOUNTS:"eth_accounts",ETH_CHAINID:"eth_chainId",ETH_SENDTRANSACTION:"eth_sendTransaction",ETH_SIGNTYPEDDATA:"eth_signTypedData",ETH_SIGNTYPEDDATA_V3:"eth_signTypedData_v3",ETH_SIGNTYPEDDATA_V4:"eth_signTypedData_v4",ETH_SIGNTRANSACTION:"eth_signTransaction",ETH_SIGN:"eth_sign",PERSONAL_EC_RECOVER:"personal_ecRecover"},Ts={[Ns.ETH_REQUESTACCOUNTS]:!0,[Ns.ETH_SENDTRANSACTION]:!0,[Ns.ETH_SIGNTRANSACTION]:!0,[Ns.ETH_SIGN]:!0,[Ns.PERSONAL_SIGN]:!0,[Ns.ETH_ACCOUNTS]:!1,[Ns.ETH_CHAINID]:!1,[Ns.PERSONAL_SIGN]:!0,[Ns.ETH_SIGNTYPEDDATA]:!0,[Ns.ETH_SIGNTYPEDDATA_V3]:!0,[Ns.ETH_SIGNTYPEDDATA_V4]:!0,[Ns.WALLET_REQUESTPERMISSIONS]:!0,[Ns.WALLET_GETPERMISSIONS]:!0,[Ns.WALLET_WATCHASSET]:!0,[Ns.WALLET_ADDETHEREUMCHAIN]:!0,[Ns.WALLET_SWITCHETHETHEREUMCHAIN]:!0,[Ns.METAMASK_CONNECTSIGN]:!0,[Ns.METAMASK_CONNECTWITH]:!0,[Ns.PERSONAL_EC_RECOVER]:!0,[Ns.METAMASK_BATCH]:!0,[Ns.METAMASK_OPEN]:!0},Cs=Object.keys(Ts).map((e=>e.toLowerCase())),Ds=["eth_signTypedData","eth_signTypedData_v3","eth_signTypedData_v4","eth_sign"].map((e=>e.toLowerCase())),As=".sdk-comm",ks="providerType",Os=".MMSDK_cached_address",xs=".MMSDK_cached_chainId",Rs={CHAIN_CHANGED:"chainChanged",ACCOUNTS_CHANGED:"accountsChanged",DISCONNECT:"disconnect",CONNECT:"connect",CONNECTED:"connected"};class Ms{constructor({enabled:e}={enabled:!1}){this.enabled=!1,this.enabled=e}persistChannelConfig(a){return e(this,void 0,void 0,(function*(){const e=JSON.stringify(a);ss(`[StorageManagerNode: persistChannelConfig()] enabled=${this.enabled}`,a),y.writeFileSync(As,e)}))}persistAccounts(a){return e(this,void 0,void 0,(function*(){ss(`[StorageManagerNode: persistAccounts()] enabled=${this.enabled}`,a);const e=JSON.stringify(a);y.writeFileSync(Os,e)}))}getCachedAccounts(){return e(this,void 0,void 0,(function*(){try{if(!y.existsSync(Os))return[];const e=y.readFileSync(Os).toString("utf-8");return JSON.parse(e)}catch(e){throw console.error("[StorageManagerNode: getCachedAccounts()] Error reading cached accounts",e),e}}))}persistChainId(a){return e(this,void 0,void 0,(function*(){ss(`[StorageManagerNode: persistChainId()] enabled=${this.enabled}`,a),y.writeFileSync(xs,a)}))}getCachedChainId(){return e(this,void 0,void 0,(function*(){try{if(!y.existsSync(xs))return;const e=y.readFileSync(xs).toString("utf-8");if(-1===e.indexOf("0x"))return;return e}catch(e){throw console.error("[StorageManagerNode: getCachedChainId()] Error reading cached chainId",e),e}}))}getPersistedChannelConfig(){return e(this,void 0,void 0,(function*(){if(!y.existsSync(As))return Promise.resolve(void 0);const e=y.readFileSync(As).toString("utf-8");if(ss(`[StorageManagerNode: getPersistedChannelConfig()] enabled=${this.enabled}`,e),!e)return Promise.resolve(void 0);const a=JSON.parse(e);return ss("[StorageManagerNode: getPersisChannel()] channelConfig",a),Promise.resolve(a)}))}terminate(){return e(this,void 0,void 0,(function*(){ss(`[StorageManagerNode: terminate()] enabled=${this.enabled}`),y.existsSync(As)&&y.unlinkSync(As),y.existsSync(Os)&&y.unlinkSync(Os),y.existsSync(xs)&&y.unlinkSync(xs)}))}}const Ps=e=>new Ms(e);class Is extends os{constructor({connectionStream:e,shouldSendMetadata:a,autoRequestAccounts:t=!1}){super(e,{logger:console,maxEventListeners:100,shouldSendMetadata:a}),this.state={accounts:null,autoRequestAccounts:!1,providerStateRequested:!1,chainId:"",networkVersion:""},ss(`[SDKProvider: constructor()] autoRequestAccounts=${t}`),this.state.autoRequestAccounts=t}forceInitializeState(){return e(this,void 0,void 0,(function*(){return ss(`[SDKProvider: forceInitializeState()] autoRequestAccounts=${this.state.autoRequestAccounts}`),this._initializeStateAsync()}))}_setConnected(){ss("[SDKProvider: _setConnected()] Setting connected state"),this._state.isConnected=!0}getState(){return this._state}getSDKProviderState(){return this.state}getSelectedAddress(){var e;const{accounts:a}=this._state;return a&&0!==a.length?(null===(e=a[0])||void 0===e?void 0:e.toLowerCase())||"":(ss("[SDKProvider: getSelectedAddress] No accounts found"),null)}getChainId(){return this.state.chainId}getNetworkVersion(){return this.state.networkVersion}setSDKProviderState(e){this.state=Object.assign(Object.assign({},this.state),e)}handleAccountsChanged(e,a){return this._handleAccountsChanged(e,a)}handleDisconnect({terminate:e=!1}){!function({terminate:e=!1,instance:a}){const{state:t}=a;ss(`[SDKProvider: handleDisconnect()] cleaning up provider state terminate=${e}`,a),e&&(a._state.accounts=null,a._state.isUnlocked=!1,a._state.isPermanentlyDisconnected=!0,a._state.initialized=!1),a._handleAccountsChanged([]),a._state.isConnected=!1,a.emit("disconnect",ls.ethErrors.provider.disconnected()),t.providerStateRequested=!1}({terminate:e,instance:this})}_initializeStateAsync(){return e(this,void 0,void 0,(function*(){return function(a){var t,p;return e(this,void 0,void 0,(function*(){void 0===a.state&&(a.state={accounts:null,autoRequestAccounts:!1,providerStateRequested:!1,chainId:""});const{state:e}=a;let d;if(e.providerStateRequested)ss("[SDKProvider: initializeStateAsync()] initialization already in progress");else{let i;e.providerStateRequested=!0;let n=null,r=!1,o=!1;const s=Ps({enabled:!0});if(s){const e=yield s.getPersistedChannelConfig({});r=null!==(t=null==e?void 0:e.relayPersistence)&&void 0!==t&&t,i=yield s.getCachedChainId();const a=yield s.getCachedAccounts();a.length>0&&(n=a[0])}if(ss(`[SDKProvider: initializeStateAsync()] relayPersistence=${r}`,{relayPersistence:r,cachedChainId:i,cachedSelectedAddress:n}),r)if(i&&n)d={accounts:[n],chainId:i,isUnlocked:!1},o=!0;else try{d=yield a.request({method:"metamask_getProviderState"})}catch(t){return a._log.error("MetaMask: Failed to get initial state. Please report this bug.",t),void(e.providerStateRequested=!1)}if(0===(null===(p=null==d?void 0:d.accounts)||void 0===p?void 0:p.length))if(a.getSelectedAddress())d.accounts=[a.getSelectedAddress()];else{ss("[SDKProvider: initializeStateAsync()] Fetch accounts remotely.");const e=yield a.request({method:"eth_requestAccounts",params:[]});d.accounts=e}a._initializeState(d),e.providerStateRequested=!1,o&&(a._state.isConnected=!0,a.emit("connect",{chainId:null==d?void 0:d.chainId}))}}))}(this)}))}_initializeState(e){return ss("[SDKProvider: _initializeState()]",e),function(e,a,t){return ss("[SDKProvider: initializeState()] set state._initialized to false"),e._state.initialized=!1,a(t)}(this,super._initializeState.bind(this),e)}_handleChainChanged({chainId:e,networkVersion:a}={}){this.state.chainId=e,this.state.networkVersion=a,function({instance:e,chainId:a,networkVersion:t,superHandleChainChanged:p}){ss(`[SDKProvider: handleChainChanged()] chainId=${a} networkVersion=${t}`);let d=t;t||(ss("[SDKProvider: handleChainChanged()] forced network version to prevent provider error"),d="1"),e._state.isConnected=!0,e.emit("connect",{chainId:a}),p({chainId:a,networkVersion:d})}({instance:this,chainId:e,networkVersion:a,superHandleChainChanged:super._handleChainChanged.bind(this)})}}const Vs={type:"logger",log(e){this.output("log",e)},warn(e){this.output("warn",e)},error(e){this.output("error",e)},output(e,a){console&&console[e]&&console[e].apply(console,a)}};class Ls{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.init(e,a)}init(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.prefix=a.prefix||"i18next:",this.logger=e||Vs,this.options=a,this.debug=a.debug}log(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"log","",!0)}warn(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"warn","",!0)}error(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"error","")}deprecate(){for(var e=arguments.length,a=new Array(e),t=0;t<e;t++)a[t]=arguments[t];return this.forward(a,"warn","WARNING DEPRECATED: ",!0)}forward(e,a,t,p){return p&&!this.debug?null:("string"==typeof e[0]&&(e[0]=`${t}${this.prefix} ${e[0]}`),this.logger[a](e))}create(e){return new Ls(this.logger,{prefix:`${this.prefix}:${e}:`,...this.options})}clone(e){return(e=e||this.options).prefix=e.prefix||this.prefix,new Ls(this.logger,e)}}var Bs=new Ls;class js{constructor(){this.observers={}}on(e,a){return e.split(" ").forEach((e=>{this.observers[e]||(this.observers[e]=new Map);const t=this.observers[e].get(a)||0;this.observers[e].set(a,t+1)})),this}off(e,a){this.observers[e]&&(a?this.observers[e].delete(a):delete this.observers[e])}emit(e){for(var a=arguments.length,t=new Array(a>1?a-1:0),p=1;p<a;p++)t[p-1]=arguments[p];if(this.observers[e]){Array.from(this.observers[e].entries()).forEach((e=>{let[a,p]=e;for(let e=0;e<p;e++)a(...t)}))}if(this.observers["*"]){Array.from(this.observers["*"].entries()).forEach((a=>{let[p,d]=a;for(let a=0;a<d;a++)p.apply(p,[e,...t])}))}}}function Ks(){let e,a;const t=new Promise(((t,p)=>{e=t,a=p}));return t.resolve=e,t.reject=a,t}function Us(e){return null==e?"":""+e}const Fs=/###/g;function $s(e,a,t){function p(e){return e&&e.indexOf("###")>-1?e.replace(Fs,"."):e}function d(){return!e||"string"==typeof e}const i="string"!=typeof a?a:a.split(".");let n=0;for(;n<i.length-1;){if(d())return{};const a=p(i[n]);!e[a]&&t&&(e[a]=new t),e=Object.prototype.hasOwnProperty.call(e,a)?e[a]:{},++n}return d()?{}:{obj:e,k:p(i[n])}}function Hs(e,a,t){const{obj:p,k:d}=$s(e,a,Object);if(void 0!==p||1===a.length)return void(p[d]=t);let i=a[a.length-1],n=a.slice(0,a.length-1),r=$s(e,n,Object);for(;void 0===r.obj&&n.length;)i=`${n[n.length-1]}.${i}`,n=n.slice(0,n.length-1),r=$s(e,n,Object),r&&r.obj&&void 0!==r.obj[`${r.k}.${i}`]&&(r.obj=void 0);r.obj[`${r.k}.${i}`]=t}function zs(e,a){const{obj:t,k:p}=$s(e,a);if(t)return t[p]}function qs(e,a,t){for(const p in a)"__proto__"!==p&&"constructor"!==p&&(p in e?"string"==typeof e[p]||e[p]instanceof String||"string"==typeof a[p]||a[p]instanceof String?t&&(e[p]=a[p]):qs(e[p],a[p],t):e[p]=a[p]);return e}function Ws(e){return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&")}var Gs={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};function Ys(e){return"string"==typeof e?e.replace(/[&<>"'\/]/g,(e=>Gs[e])):e}const Js=[" ",",","?","!",";"],Zs=new class{constructor(e){this.capacity=e,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(e){const a=this.regExpMap.get(e);if(void 0!==a)return a;const t=new RegExp(e);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(e,t),this.regExpQueue.push(e),t}}(20);function Xs(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:".";if(!e)return;if(e[a])return e[a];const p=a.split(t);let d=e;for(let e=0;e<p.length;){if(!d||"object"!=typeof d)return;let a,i="";for(let n=e;n<p.length;++n)if(n!==e&&(i+=t),i+=p[n],a=d[i],void 0!==a){if(["string","number","boolean"].indexOf(typeof a)>-1&&n<p.length-1)continue;e+=n-e+1;break}d=a}return d}function Qs(e){return e&&e.indexOf("_")>0?e.replace("_","-"):e}class el extends js{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=e||{},this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),void 0===this.options.ignoreJSONStructure&&(this.options.ignoreJSONStructure=!0)}addNamespaces(e){this.options.ns.indexOf(e)<0&&this.options.ns.push(e)}removeNamespaces(e){const a=this.options.ns.indexOf(e);a>-1&&this.options.ns.splice(a,1)}getResource(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const d=void 0!==p.keySeparator?p.keySeparator:this.options.keySeparator,i=void 0!==p.ignoreJSONStructure?p.ignoreJSONStructure:this.options.ignoreJSONStructure;let n;e.indexOf(".")>-1?n=e.split("."):(n=[e,a],t&&(Array.isArray(t)?n.push(...t):"string"==typeof t&&d?n.push(...t.split(d)):n.push(t)));const r=zs(this.data,n);return!r&&!a&&!t&&e.indexOf(".")>-1&&(e=n[0],a=n[1],t=n.slice(2).join(".")),r||!i||"string"!=typeof t?r:Xs(this.data&&this.data[e]&&this.data[e][a],t,d)}addResource(e,a,t,p){let d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{silent:!1};const i=void 0!==d.keySeparator?d.keySeparator:this.options.keySeparator;let n=[e,a];t&&(n=n.concat(i?t.split(i):t)),e.indexOf(".")>-1&&(n=e.split("."),p=a,a=n[1]),this.addNamespaces(a),Hs(this.data,n,p),d.silent||this.emit("added",e,a,t,p)}addResources(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{silent:!1};for(const p in t)("string"==typeof t[p]||Array.isArray(t[p]))&&this.addResource(e,a,p,t[p],{silent:!0});p.silent||this.emit("added",e,a,t)}addResourceBundle(e,a,t,p,d){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{silent:!1,skipCopy:!1},n=[e,a];e.indexOf(".")>-1&&(n=e.split("."),p=t,t=a,a=n[1]),this.addNamespaces(a);let r=zs(this.data,n)||{};i.skipCopy||(t=JSON.parse(JSON.stringify(t))),p?qs(r,t,d):r={...r,...t},Hs(this.data,n,r),i.silent||this.emit("added",e,a,t)}removeResourceBundle(e,a){this.hasResourceBundle(e,a)&&delete this.data[e][a],this.removeNamespaces(a),this.emit("removed",e,a)}hasResourceBundle(e,a){return void 0!==this.getResource(e,a)}getResourceBundle(e,a){return a||(a=this.options.defaultNS),"v1"===this.options.compatibilityAPI?{...this.getResource(e,a)}:this.getResource(e,a)}getDataByLanguage(e){return this.data[e]}hasLanguageSomeTranslations(e){const a=this.getDataByLanguage(e);return!!(a&&Object.keys(a)||[]).find((e=>a[e]&&Object.keys(a[e]).length>0))}toJSON(){return this.data}}var al={processors:{},addPostProcessor(e){this.processors[e.name]=e},handle(e,a,t,p,d){return e.forEach((e=>{this.processors[e]&&(a=this.processors[e].process(a,t,p,d))})),a}};const tl={};class pl extends js{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};super(),function(e,a,t){e.forEach((e=>{a[e]&&(t[e]=a[e])}))}(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],e,this),this.options=a,void 0===this.options.keySeparator&&(this.options.keySeparator="."),this.logger=Bs.create("translator")}changeLanguage(e){e&&(this.language=e)}exists(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}};if(null==e)return!1;const t=this.resolve(e,a);return t&&void 0!==t.res}extractFromKey(e,a){let t=void 0!==a.nsSeparator?a.nsSeparator:this.options.nsSeparator;void 0===t&&(t=":");const p=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator;let d=a.ns||this.options.defaultNS||[];const i=t&&e.indexOf(t)>-1,n=!(this.options.userDefinedKeySeparator||a.keySeparator||this.options.userDefinedNsSeparator||a.nsSeparator||function(e,a,t){a=a||"",t=t||"";const p=Js.filter((e=>a.indexOf(e)<0&&t.indexOf(e)<0));if(0===p.length)return!0;const d=Zs.getRegExp(`(${p.map((e=>"?"===e?"\\?":e)).join("|")})`);let i=!d.test(e);if(!i){const a=e.indexOf(t);a>0&&!d.test(e.substring(0,a))&&(i=!0)}return i}(e,t,p));if(i&&!n){const a=e.match(this.interpolator.nestingRegexp);if(a&&a.length>0)return{key:e,namespaces:d};const i=e.split(t);(t!==p||t===p&&this.options.ns.indexOf(i[0])>-1)&&(d=i.shift()),e=i.join(p)}return"string"==typeof d&&(d=[d]),{key:e,namespaces:d}}translate(e,a,t){if("object"!=typeof a&&this.options.overloadTranslationOptionHandler&&(a=this.options.overloadTranslationOptionHandler(arguments)),"object"==typeof a&&(a={...a}),a||(a={}),null==e)return"";Array.isArray(e)||(e=[String(e)]);const p=void 0!==a.returnDetails?a.returnDetails:this.options.returnDetails,d=void 0!==a.keySeparator?a.keySeparator:this.options.keySeparator,{key:i,namespaces:n}=this.extractFromKey(e[e.length-1],a),r=n[n.length-1],o=a.lng||this.language,s=a.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if(o&&"cimode"===o.toLowerCase()){if(s){const e=a.nsSeparator||this.options.nsSeparator;return p?{res:`${r}${e}${i}`,usedKey:i,exactUsedKey:i,usedLng:o,usedNS:r,usedParams:this.getUsedParamsDetails(a)}:`${r}${e}${i}`}return p?{res:i,usedKey:i,exactUsedKey:i,usedLng:o,usedNS:r,usedParams:this.getUsedParamsDetails(a)}:i}const l=this.resolve(e,a);let m=l&&l.res;const c=l&&l.usedKey||i,u=l&&l.exactUsedKey||i,h=Object.prototype.toString.apply(m),v=void 0!==a.joinArrays?a.joinArrays:this.options.joinArrays,f=!this.i18nFormat||this.i18nFormat.handleAsObject;if(f&&m&&("string"!=typeof m&&"boolean"!=typeof m&&"number"!=typeof m)&&["[object Number]","[object Function]","[object RegExp]"].indexOf(h)<0&&("string"!=typeof v||!Array.isArray(m))){if(!a.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const e=this.options.returnedObjectHandler?this.options.returnedObjectHandler(c,m,{...a,ns:n}):`key '${i} (${this.language})' returned an object instead of string.`;return p?(l.res=e,l.usedParams=this.getUsedParamsDetails(a),l):e}if(d){const e=Array.isArray(m),t=e?[]:{},p=e?u:c;for(const e in m)if(Object.prototype.hasOwnProperty.call(m,e)){const i=`${p}${d}${e}`;t[e]=this.translate(i,{...a,joinArrays:!1,ns:n}),t[e]===i&&(t[e]=m[e])}m=t}}else if(f&&"string"==typeof v&&Array.isArray(m))m=m.join(v),m&&(m=this.extendTranslation(m,e,a,t));else{let p=!1,n=!1;const s=void 0!==a.count&&"string"!=typeof a.count,c=pl.hasDefaultValue(a),u=s?this.pluralResolver.getSuffix(o,a.count,a):"",h=a.ordinal&&s?this.pluralResolver.getSuffix(o,a.count,{ordinal:!1}):"",v=s&&!a.ordinal&&0===a.count&&this.pluralResolver.shouldUseIntlApi(),f=v&&a[`defaultValue${this.options.pluralSeparator}zero`]||a[`defaultValue${u}`]||a[`defaultValue${h}`]||a.defaultValue;!this.isValidLookup(m)&&c&&(p=!0,m=f),this.isValidLookup(m)||(n=!0,m=i);const g=(a.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&n?void 0:m,w=c&&f!==m&&this.options.updateMissing;if(n||p||w){if(this.logger.log(w?"updateKey":"missingKey",o,r,i,w?f:m),d){const e=this.resolve(i,{...a,keySeparator:!1});e&&e.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let e=[];const t=this.languageUtils.getFallbackCodes(this.options.fallbackLng,a.lng||this.language);if("fallback"===this.options.saveMissingTo&&t&&t[0])for(let a=0;a<t.length;a++)e.push(t[a]);else"all"===this.options.saveMissingTo?e=this.languageUtils.toResolveHierarchy(a.lng||this.language):e.push(a.lng||this.language);const p=(e,t,p)=>{const d=c&&p!==m?p:g;this.options.missingKeyHandler?this.options.missingKeyHandler(e,r,t,d,w,a):this.backendConnector&&this.backendConnector.saveMissing&&this.backendConnector.saveMissing(e,r,t,d,w,a),this.emit("missingKey",e,r,t,m)};this.options.saveMissing&&(this.options.saveMissingPlurals&&s?e.forEach((e=>{const t=this.pluralResolver.getSuffixes(e,a);v&&a[`defaultValue${this.options.pluralSeparator}zero`]&&t.indexOf(`${this.options.pluralSeparator}zero`)<0&&t.push(`${this.options.pluralSeparator}zero`),t.forEach((t=>{p([e],i+t,a[`defaultValue${t}`]||f)}))})):p(e,i,f))}m=this.extendTranslation(m,e,a,l,t),n&&m===i&&this.options.appendNamespaceToMissingKey&&(m=`${r}:${i}`),(n||p)&&this.options.parseMissingKeyHandler&&(m="v1"!==this.options.compatibilityAPI?this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${r}:${i}`:i,p?m:void 0):this.options.parseMissingKeyHandler(m))}return p?(l.res=m,l.usedParams=this.getUsedParamsDetails(a),l):m}extendTranslation(e,a,t,p,d){var i=this;if(this.i18nFormat&&this.i18nFormat.parse)e=this.i18nFormat.parse(e,{...this.options.interpolation.defaultVariables,...t},t.lng||this.language||p.usedLng,p.usedNS,p.usedKey,{resolved:p});else if(!t.skipInterpolation){t.interpolation&&this.interpolator.init({...t,interpolation:{...this.options.interpolation,...t.interpolation}});const n="string"==typeof e&&(t&&t.interpolation&&void 0!==t.interpolation.skipOnVariables?t.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let r;if(n){const a=e.match(this.interpolator.nestingRegexp);r=a&&a.length}let o=t.replace&&"string"!=typeof t.replace?t.replace:t;if(this.options.interpolation.defaultVariables&&(o={...this.options.interpolation.defaultVariables,...o}),e=this.interpolator.interpolate(e,o,t.lng||this.language,t),n){const a=e.match(this.interpolator.nestingRegexp);r<(a&&a.length)&&(t.nest=!1)}!t.lng&&"v1"!==this.options.compatibilityAPI&&p&&p.res&&(t.lng=p.usedLng),!1!==t.nest&&(e=this.interpolator.nest(e,(function(){for(var e=arguments.length,p=new Array(e),n=0;n<e;n++)p[n]=arguments[n];return d&&d[0]===p[0]&&!t.context?(i.logger.warn(`It seems you are nesting recursively key: ${p[0]} in key: ${a[0]}`),null):i.translate(...p,a)}),t)),t.interpolation&&this.interpolator.reset()}const n=t.postProcess||this.options.postProcess,r="string"==typeof n?[n]:n;return null!=e&&r&&r.length&&!1!==t.applyPostProcessor&&(e=al.handle(r,e,a,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...p,usedParams:this.getUsedParamsDetails(t)},...t}:t,this)),e}resolve(e){let a,t,p,d,i,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return"string"==typeof e&&(e=[e]),e.forEach((e=>{if(this.isValidLookup(a))return;const r=this.extractFromKey(e,n),o=r.key;t=o;let s=r.namespaces;this.options.fallbackNS&&(s=s.concat(this.options.fallbackNS));const l=void 0!==n.count&&"string"!=typeof n.count,m=l&&!n.ordinal&&0===n.count&&this.pluralResolver.shouldUseIntlApi(),c=void 0!==n.context&&("string"==typeof n.context||"number"==typeof n.context)&&""!==n.context,u=n.lngs?n.lngs:this.languageUtils.toResolveHierarchy(n.lng||this.language,n.fallbackLng);s.forEach((e=>{this.isValidLookup(a)||(i=e,!tl[`${u[0]}-${e}`]&&this.utils&&this.utils.hasLoadedNamespace&&!this.utils.hasLoadedNamespace(i)&&(tl[`${u[0]}-${e}`]=!0,this.logger.warn(`key "${t}" for languages "${u.join(", ")}" won't get resolved as namespace "${i}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),u.forEach((t=>{if(this.isValidLookup(a))return;d=t;const i=[o];if(this.i18nFormat&&this.i18nFormat.addLookupKeys)this.i18nFormat.addLookupKeys(i,o,t,e,n);else{let e;l&&(e=this.pluralResolver.getSuffix(t,n.count,n));const a=`${this.options.pluralSeparator}zero`,p=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(l&&(i.push(o+e),n.ordinal&&0===e.indexOf(p)&&i.push(o+e.replace(p,this.options.pluralSeparator)),m&&i.push(o+a)),c){const t=`${o}${this.options.contextSeparator}${n.context}`;i.push(t),l&&(i.push(t+e),n.ordinal&&0===e.indexOf(p)&&i.push(t+e.replace(p,this.options.pluralSeparator)),m&&i.push(t+a))}}let r;for(;r=i.pop();)this.isValidLookup(a)||(p=r,a=this.getResource(t,e,r,n))})))}))})),{res:a,usedKey:t,exactUsedKey:p,usedLng:d,usedNS:i}}isValidLookup(e){return!(void 0===e||!this.options.returnNull&&null===e||!this.options.returnEmptyString&&""===e)}getResource(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};return this.i18nFormat&&this.i18nFormat.getResource?this.i18nFormat.getResource(e,a,t,p):this.resourceStore.getResource(e,a,t,p)}getUsedParamsDetails(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};const a=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],t=e.replace&&"string"!=typeof e.replace;let p=t?e.replace:e;if(t&&void 0!==e.count&&(p.count=e.count),this.options.interpolation.defaultVariables&&(p={...this.options.interpolation.defaultVariables,...p}),!t){p={...p};for(const e of a)delete p[e]}return p}static hasDefaultValue(e){const a="defaultValue";for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)&&a===t.substring(0,12)&&void 0!==e[t])return!0;return!1}}function dl(e){return e.charAt(0).toUpperCase()+e.slice(1)}class il{constructor(e){this.options=e,this.supportedLngs=this.options.supportedLngs||!1,this.logger=Bs.create("languageUtils")}getScriptPartFromCode(e){if(!(e=Qs(e))||e.indexOf("-")<0)return null;const a=e.split("-");return 2===a.length?null:(a.pop(),"x"===a[a.length-1].toLowerCase()?null:this.formatLanguageCode(a.join("-")))}getLanguagePartFromCode(e){if(!(e=Qs(e))||e.indexOf("-")<0)return e;const a=e.split("-");return this.formatLanguageCode(a[0])}formatLanguageCode(e){if("string"==typeof e&&e.indexOf("-")>-1){const a=["hans","hant","latn","cyrl","cans","mong","arab"];let t=e.split("-");return this.options.lowerCaseLng?t=t.map((e=>e.toLowerCase())):2===t.length?(t[0]=t[0].toLowerCase(),t[1]=t[1].toUpperCase(),a.indexOf(t[1].toLowerCase())>-1&&(t[1]=dl(t[1].toLowerCase()))):3===t.length&&(t[0]=t[0].toLowerCase(),2===t[1].length&&(t[1]=t[1].toUpperCase()),"sgn"!==t[0]&&2===t[2].length&&(t[2]=t[2].toUpperCase()),a.indexOf(t[1].toLowerCase())>-1&&(t[1]=dl(t[1].toLowerCase())),a.indexOf(t[2].toLowerCase())>-1&&(t[2]=dl(t[2].toLowerCase()))),t.join("-")}return this.options.cleanCode||this.options.lowerCaseLng?e.toLowerCase():e}isSupportedCode(e){return("languageOnly"===this.options.load||this.options.nonExplicitSupportedLngs)&&(e=this.getLanguagePartFromCode(e)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(e)>-1}getBestMatchFromCodes(e){if(!e)return null;let a;return e.forEach((e=>{if(a)return;const t=this.formatLanguageCode(e);this.options.supportedLngs&&!this.isSupportedCode(t)||(a=t)})),!a&&this.options.supportedLngs&&e.forEach((e=>{if(a)return;const t=this.getLanguagePartFromCode(e);if(this.isSupportedCode(t))return a=t;a=this.options.supportedLngs.find((e=>e===t?e:e.indexOf("-")<0&&t.indexOf("-")<0?void 0:e.indexOf("-")>0&&t.indexOf("-")<0&&e.substring(0,e.indexOf("-"))===t||0===e.indexOf(t)&&t.length>1?e:void 0))})),a||(a=this.getFallbackCodes(this.options.fallbackLng)[0]),a}getFallbackCodes(e,a){if(!e)return[];if("function"==typeof e&&(e=e(a)),"string"==typeof e&&(e=[e]),Array.isArray(e))return e;if(!a)return e.default||[];let t=e[a];return t||(t=e[this.getScriptPartFromCode(a)]),t||(t=e[this.formatLanguageCode(a)]),t||(t=e[this.getLanguagePartFromCode(a)]),t||(t=e.default),t||[]}toResolveHierarchy(e,a){const t=this.getFallbackCodes(a||this.options.fallbackLng||[],e),p=[],d=e=>{e&&(this.isSupportedCode(e)?p.push(e):this.logger.warn(`rejecting language code not found in supportedLngs: ${e}`))};return"string"==typeof e&&(e.indexOf("-")>-1||e.indexOf("_")>-1)?("languageOnly"!==this.options.load&&d(this.formatLanguageCode(e)),"languageOnly"!==this.options.load&&"currentOnly"!==this.options.load&&d(this.getScriptPartFromCode(e)),"currentOnly"!==this.options.load&&d(this.getLanguagePartFromCode(e))):"string"==typeof e&&d(this.formatLanguageCode(e)),t.forEach((e=>{p.indexOf(e)<0&&d(this.formatLanguageCode(e))})),p}}let nl=[{lngs:["ach","ak","am","arn","br","fil","gun","ln","mfe","mg","mi","oc","pt","pt-BR","tg","tl","ti","tr","uz","wa"],nr:[1,2],fc:1},{lngs:["af","an","ast","az","bg","bn","ca","da","de","dev","el","en","eo","es","et","eu","fi","fo","fur","fy","gl","gu","ha","hi","hu","hy","ia","it","kk","kn","ku","lb","mai","ml","mn","mr","nah","nap","nb","ne","nl","nn","no","nso","pa","pap","pms","ps","pt-PT","rm","sco","se","si","so","son","sq","sv","sw","ta","te","tk","ur","yo"],nr:[1,2],fc:2},{lngs:["ay","bo","cgg","fa","ht","id","ja","jbo","ka","km","ko","ky","lo","ms","sah","su","th","tt","ug","vi","wo","zh"],nr:[1],fc:3},{lngs:["be","bs","cnr","dz","hr","ru","sr","uk"],nr:[1,2,5],fc:4},{lngs:["ar"],nr:[0,1,2,3,11,100],fc:5},{lngs:["cs","sk"],nr:[1,2,5],fc:6},{lngs:["csb","pl"],nr:[1,2,5],fc:7},{lngs:["cy"],nr:[1,2,3,8],fc:8},{lngs:["fr"],nr:[1,2],fc:9},{lngs:["ga"],nr:[1,2,3,7,11],fc:10},{lngs:["gd"],nr:[1,2,3,20],fc:11},{lngs:["is"],nr:[1,2],fc:12},{lngs:["jv"],nr:[0,1],fc:13},{lngs:["kw"],nr:[1,2,3,4],fc:14},{lngs:["lt"],nr:[1,2,10],fc:15},{lngs:["lv"],nr:[1,2,0],fc:16},{lngs:["mk"],nr:[1,2],fc:17},{lngs:["mnk"],nr:[0,1,2],fc:18},{lngs:["mt"],nr:[1,2,11,20],fc:19},{lngs:["or"],nr:[2,1],fc:2},{lngs:["ro"],nr:[1,2,20],fc:20},{lngs:["sl"],nr:[5,1,2,3],fc:21},{lngs:["he","iw"],nr:[1,2,20,21],fc:22}],rl={1:function(e){return Number(e>1)},2:function(e){return Number(1!=e)},3:function(e){return 0},4:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},5:function(e){return Number(0==e?0:1==e?1:2==e?2:e%100>=3&&e%100<=10?3:e%100>=11?4:5)},6:function(e){return Number(1==e?0:e>=2&&e<=4?1:2)},7:function(e){return Number(1==e?0:e%10>=2&&e%10<=4&&(e%100<10||e%100>=20)?1:2)},8:function(e){return Number(1==e?0:2==e?1:8!=e&&11!=e?2:3)},9:function(e){return Number(e>=2)},10:function(e){return Number(1==e?0:2==e?1:e<7?2:e<11?3:4)},11:function(e){return Number(1==e||11==e?0:2==e||12==e?1:e>2&&e<20?2:3)},12:function(e){return Number(e%10!=1||e%100==11)},13:function(e){return Number(0!==e)},14:function(e){return Number(1==e?0:2==e?1:3==e?2:3)},15:function(e){return Number(e%10==1&&e%100!=11?0:e%10>=2&&(e%100<10||e%100>=20)?1:2)},16:function(e){return Number(e%10==1&&e%100!=11?0:0!==e?1:2)},17:function(e){return Number(1==e||e%10==1&&e%100!=11?0:1)},18:function(e){return Number(0==e?0:1==e?1:2)},19:function(e){return Number(1==e?0:0==e||e%100>1&&e%100<11?1:e%100>10&&e%100<20?2:3)},20:function(e){return Number(1==e?0:0==e||e%100>0&&e%100<20?1:2)},21:function(e){return Number(e%100==1?1:e%100==2?2:e%100==3||e%100==4?3:0)},22:function(e){return Number(1==e?0:2==e?1:(e<0||e>10)&&e%10==0?2:3)}};const ol=["v1","v2","v3"],sl=["v4"],ll={zero:0,one:1,two:2,few:3,many:4,other:5};class ml{constructor(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.languageUtils=e,this.options=a,this.logger=Bs.create("pluralResolver"),this.options.compatibilityJSON&&!sl.includes(this.options.compatibilityJSON)||"undefined"!=typeof Intl&&Intl.PluralRules||(this.options.compatibilityJSON="v3",this.logger.error("Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.")),this.rules=function(){const e={};return nl.forEach((a=>{a.lngs.forEach((t=>{e[t]={numbers:a.nr,plurals:rl[a.fc]}}))})),e}()}addRule(e,a){this.rules[e]=a}getRule(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(this.shouldUseIntlApi())try{return new Intl.PluralRules(Qs("dev"===e?"en":e),{type:a.ordinal?"ordinal":"cardinal"})}catch(e){return}return this.rules[e]||this.rules[this.languageUtils.getLanguagePartFromCode(e)]}needsPlural(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const t=this.getRule(e,a);return this.shouldUseIntlApi()?t&&t.resolvedOptions().pluralCategories.length>1:t&&t.numbers.length>1}getPluralFormsOfKey(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return this.getSuffixes(e,t).map((e=>`${a}${e}`))}getSuffixes(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const t=this.getRule(e,a);return t?this.shouldUseIntlApi()?t.resolvedOptions().pluralCategories.sort(((e,a)=>ll[e]-ll[a])).map((e=>`${this.options.prepend}${a.ordinal?`ordinal${this.options.prepend}`:""}${e}`)):t.numbers.map((t=>this.getSuffix(e,t,a))):[]}getSuffix(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const p=this.getRule(e,t);return p?this.shouldUseIntlApi()?`${this.options.prepend}${t.ordinal?`ordinal${this.options.prepend}`:""}${p.select(a)}`:this.getSuffixRetroCompatible(p,a):(this.logger.warn(`no plural rule found for: ${e}`),"")}getSuffixRetroCompatible(e,a){const t=e.noAbs?e.plurals(a):e.plurals(Math.abs(a));let p=e.numbers[t];this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]&&(2===p?p="plural":1===p&&(p=""));const d=()=>this.options.prepend&&p.toString()?this.options.prepend+p.toString():p.toString();return"v1"===this.options.compatibilityJSON?1===p?"":"number"==typeof p?`_plural_${p.toString()}`:d():"v2"===this.options.compatibilityJSON||this.options.simplifyPluralSuffix&&2===e.numbers.length&&1===e.numbers[0]?d():this.options.prepend&&t.toString()?this.options.prepend+t.toString():t.toString()}shouldUseIntlApi(){return!ol.includes(this.options.compatibilityJSON)}}function cl(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:".",d=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=function(e,a,t){const p=zs(e,t);return void 0!==p?p:zs(a,t)}(e,a,t);return!i&&d&&"string"==typeof t&&(i=Xs(e,t,p),void 0===i&&(i=Xs(a,t,p))),i}class ul{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=Bs.create("interpolator"),this.options=e,this.format=e.interpolation&&e.interpolation.format||(e=>e),this.init(e)}init(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};e.interpolation||(e.interpolation={escapeValue:!0});const{escape:a,escapeValue:t,useRawValueToEscape:p,prefix:d,prefixEscaped:i,suffix:n,suffixEscaped:r,formatSeparator:o,unescapeSuffix:s,unescapePrefix:l,nestingPrefix:m,nestingPrefixEscaped:c,nestingSuffix:u,nestingSuffixEscaped:h,nestingOptionsSeparator:v,maxReplaces:f,alwaysFormat:g}=e.interpolation;this.escape=void 0!==a?a:Ys,this.escapeValue=void 0===t||t,this.useRawValueToEscape=void 0!==p&&p,this.prefix=d?Ws(d):i||"{{",this.suffix=n?Ws(n):r||"}}",this.formatSeparator=o||",",this.unescapePrefix=s?"":l||"-",this.unescapeSuffix=this.unescapePrefix?"":s||"",this.nestingPrefix=m?Ws(m):c||Ws("$t("),this.nestingSuffix=u?Ws(u):h||Ws(")"),this.nestingOptionsSeparator=v||",",this.maxReplaces=f||1e3,this.alwaysFormat=void 0!==g&&g,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const e=(e,a)=>e&&e.source===a?(e.lastIndex=0,e):new RegExp(a,"g");this.regexp=e(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=e(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=e(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(e,a,t,p){let d,i,n;const r=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{};function o(e){return e.replace(/\$/g,"$$$$")}const s=e=>{if(e.indexOf(this.formatSeparator)<0){const d=cl(a,r,e,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(d,void 0,t,{...p,...a,interpolationkey:e}):d}const d=e.split(this.formatSeparator),i=d.shift().trim(),n=d.join(this.formatSeparator).trim();return this.format(cl(a,r,i,this.options.keySeparator,this.options.ignoreJSONStructure),n,t,{...p,...a,interpolationkey:i})};this.resetRegExp();const l=p&&p.missingInterpolationHandler||this.options.missingInterpolationHandler,m=p&&p.interpolation&&void 0!==p.interpolation.skipOnVariables?p.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:e=>o(e)},{regex:this.regexp,safeValue:e=>this.escapeValue?o(this.escape(e)):o(e)}].forEach((a=>{for(n=0;d=a.regex.exec(e);){const t=d[1].trim();if(i=s(t),void 0===i)if("function"==typeof l){const a=l(e,d,p);i="string"==typeof a?a:""}else if(p&&Object.prototype.hasOwnProperty.call(p,t))i="";else{if(m){i=d[0];continue}this.logger.warn(`missed to pass in variable ${t} for interpolating ${e}`),i=""}else"string"==typeof i||this.useRawValueToEscape||(i=Us(i));const r=a.safeValue(i);if(e=e.replace(d[0],r),m?(a.regex.lastIndex+=i.length,a.regex.lastIndex-=d[0].length):a.regex.lastIndex=0,n++,n>=this.maxReplaces)break}})),e}nest(e,a){let t,p,d,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};function n(e,a){const t=this.nestingOptionsSeparator;if(e.indexOf(t)<0)return e;const p=e.split(new RegExp(`${t}[ ]*{`));let i=`{${p[1]}`;e=p[0],i=this.interpolate(i,d);const n=i.match(/'/g),r=i.match(/"/g);(n&&n.length%2==0&&!r||r.length%2!=0)&&(i=i.replace(/'/g,'"'));try{d=JSON.parse(i),a&&(d={...a,...d})}catch(a){return this.logger.warn(`failed parsing options string in nesting for key ${e}`,a),`${e}${t}${i}`}return d.defaultValue&&d.defaultValue.indexOf(this.prefix)>-1&&delete d.defaultValue,e}for(;t=this.nestingRegexp.exec(e);){let r=[];d={...i},d=d.replace&&"string"!=typeof d.replace?d.replace:d,d.applyPostProcessor=!1,delete d.defaultValue;let o=!1;if(-1!==t[0].indexOf(this.formatSeparator)&&!/{.*}/.test(t[1])){const e=t[1].split(this.formatSeparator).map((e=>e.trim()));t[1]=e.shift(),r=e,o=!0}if(p=a(n.call(this,t[1].trim(),d),d),p&&t[0]===e&&"string"!=typeof p)return p;"string"!=typeof p&&(p=Us(p)),p||(this.logger.warn(`missed to resolve ${t[1]} for nesting ${e}`),p=""),o&&(p=r.reduce(((e,a)=>this.format(e,a,i.lng,{...i,interpolationkey:t[1].trim()})),p.trim())),e=e.replace(t[0],p),this.regexp.lastIndex=0}return e}}function hl(e){const a={};return function(t,p,d){const i=p+JSON.stringify(d);let n=a[i];return n||(n=e(Qs(p),d),a[i]=n),n(t)}}class vl{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};this.logger=Bs.create("formatter"),this.options=e,this.formats={number:hl(((e,a)=>{const t=new Intl.NumberFormat(e,{...a});return e=>t.format(e)})),currency:hl(((e,a)=>{const t=new Intl.NumberFormat(e,{...a,style:"currency"});return e=>t.format(e)})),datetime:hl(((e,a)=>{const t=new Intl.DateTimeFormat(e,{...a});return e=>t.format(e)})),relativetime:hl(((e,a)=>{const t=new Intl.RelativeTimeFormat(e,{...a});return e=>t.format(e,a.range||"day")})),list:hl(((e,a)=>{const t=new Intl.ListFormat(e,{...a});return e=>t.format(e)}))},this.init(e)}init(e){const a=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{interpolation:{}}).interpolation;this.formatSeparator=a.formatSeparator?a.formatSeparator:a.formatSeparator||","}add(e,a){this.formats[e.toLowerCase().trim()]=a}addCached(e,a){this.formats[e.toLowerCase().trim()]=hl(a)}format(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const d=a.split(this.formatSeparator).reduce(((e,a)=>{const{formatName:d,formatOptions:i}=function(e){let a=e.toLowerCase().trim();const t={};if(e.indexOf("(")>-1){const p=e.split("(");a=p[0].toLowerCase().trim();const d=p[1].substring(0,p[1].length-1);"currency"===a&&d.indexOf(":")<0?t.currency||(t.currency=d.trim()):"relativetime"===a&&d.indexOf(":")<0?t.range||(t.range=d.trim()):d.split(";").forEach((e=>{if(e){const[a,...p]=e.split(":"),d=p.join(":").trim().replace(/^'+|'+$/g,""),i=a.trim();t[i]||(t[i]=d),"false"===d&&(t[i]=!1),"true"===d&&(t[i]=!0),isNaN(d)||(t[i]=parseInt(d,10))}}))}return{formatName:a,formatOptions:t}}(a);if(this.formats[d]){let a=e;try{const n=p&&p.formatParams&&p.formatParams[p.interpolationkey]||{},r=n.locale||n.lng||p.locale||p.lng||t;a=this.formats[d](e,r,{...i,...p,...n})}catch(e){this.logger.warn(e)}return a}return this.logger.warn(`there was no format function for ${d}`),e}),e);return d}}class fl extends js{constructor(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};super(),this.backend=e,this.store=a,this.services=t,this.languageUtils=t.languageUtils,this.options=p,this.logger=Bs.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=p.maxParallelReads||10,this.readingCalls=0,this.maxRetries=p.maxRetries>=0?p.maxRetries:5,this.retryTimeout=p.retryTimeout>=1?p.retryTimeout:350,this.state={},this.queue=[],this.backend&&this.backend.init&&this.backend.init(t,p.backend,p)}queueLoad(e,a,t,p){const d={},i={},n={},r={};return e.forEach((e=>{let p=!0;a.forEach((a=>{const n=`${e}|${a}`;!t.reload&&this.store.hasResourceBundle(e,a)?this.state[n]=2:this.state[n]<0||(1===this.state[n]?void 0===i[n]&&(i[n]=!0):(this.state[n]=1,p=!1,void 0===i[n]&&(i[n]=!0),void 0===d[n]&&(d[n]=!0),void 0===r[a]&&(r[a]=!0)))})),p||(n[e]=!0)})),(Object.keys(d).length||Object.keys(i).length)&&this.queue.push({pending:i,pendingCount:Object.keys(i).length,loaded:{},errors:[],callback:p}),{toLoad:Object.keys(d),pending:Object.keys(i),toLoadLanguages:Object.keys(n),toLoadNamespaces:Object.keys(r)}}loaded(e,a,t){const p=e.split("|"),d=p[0],i=p[1];a&&this.emit("failedLoading",d,i,a),t&&this.store.addResourceBundle(d,i,t,void 0,void 0,{skipCopy:!0}),this.state[e]=a?-1:2;const n={};this.queue.forEach((t=>{!function(e,a,t,p){const{obj:d,k:i}=$s(e,a,Object);d[i]=d[i]||[],d[i].push(t)}(t.loaded,[d],i),function(e,a){void 0!==e.pending[a]&&(delete e.pending[a],e.pendingCount--)}(t,e),a&&t.errors.push(a),0!==t.pendingCount||t.done||(Object.keys(t.loaded).forEach((e=>{n[e]||(n[e]={});const a=t.loaded[e];a.length&&a.forEach((a=>{void 0===n[e][a]&&(n[e][a]=!0)}))})),t.done=!0,t.errors.length?t.callback(t.errors):t.callback())})),this.emit("loaded",n),this.queue=this.queue.filter((e=>!e.done))}read(e,a,t){let p=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:this.retryTimeout,i=arguments.length>5?arguments[5]:void 0;if(!e.length)return i(null,{});if(this.readingCalls>=this.maxParallelReads)return void this.waitingReads.push({lng:e,ns:a,fcName:t,tried:p,wait:d,callback:i});this.readingCalls++;const n=(n,r)=>{if(this.readingCalls--,this.waitingReads.length>0){const e=this.waitingReads.shift();this.read(e.lng,e.ns,e.fcName,e.tried,e.wait,e.callback)}n&&r&&p<this.maxRetries?setTimeout((()=>{this.read.call(this,e,a,t,p+1,2*d,i)}),d):i(n,r)},r=this.backend[t].bind(this.backend);if(2!==r.length)return r(e,a,n);try{const t=r(e,a);t&&"function"==typeof t.then?t.then((e=>n(null,e))).catch(n):n(null,t)}catch(e){n(e)}}prepareLoading(e,a){let t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},p=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),p&&p();"string"==typeof e&&(e=this.languageUtils.toResolveHierarchy(e)),"string"==typeof a&&(a=[a]);const d=this.queueLoad(e,a,t,p);if(!d.toLoad.length)return d.pending.length||p(),null;d.toLoad.forEach((e=>{this.loadOne(e)}))}load(e,a,t){this.prepareLoading(e,a,{},t)}reload(e,a,t){this.prepareLoading(e,a,{reload:!0},t)}loadOne(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";const t=e.split("|"),p=t[0],d=t[1];this.read(p,d,"read",void 0,void 0,((t,i)=>{t&&this.logger.warn(`${a}loading namespace ${d} for language ${p} failed`,t),!t&&i&&this.logger.log(`${a}loaded namespace ${d} for language ${p}`,i),this.loaded(e,t,i)}))}saveMissing(e,a,t,p,d){let i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:{},n=arguments.length>6&&void 0!==arguments[6]?arguments[6]:()=>{};if(this.services.utils&&this.services.utils.hasLoadedNamespace&&!this.services.utils.hasLoadedNamespace(a))this.logger.warn(`did not save key "${t}" as the namespace "${a}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");else if(null!=t&&""!==t){if(this.backend&&this.backend.create){const r={...i,isUpdate:d},o=this.backend.create.bind(this.backend);if(o.length<6)try{let d;d=5===o.length?o(e,a,t,p,r):o(e,a,t,p),d&&"function"==typeof d.then?d.then((e=>n(null,e))).catch(n):n(null,d)}catch(e){n(e)}else o(e,a,t,p,n,r)}e&&e[0]&&this.store.addResource(e[0],a,t,p)}}}function gl(){return{debug:!1,initImmediate:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:function(e){let a={};if("object"==typeof e[1]&&(a=e[1]),"string"==typeof e[1]&&(a.defaultValue=e[1]),"string"==typeof e[2]&&(a.tDescription=e[2]),"object"==typeof e[2]||"object"==typeof e[3]){const t=e[3]||e[2];Object.keys(t).forEach((e=>{a[e]=t[e]}))}return a},interpolation:{escapeValue:!0,format:e=>e,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}}function wl(e){return"string"==typeof e.ns&&(e.ns=[e.ns]),"string"==typeof e.fallbackLng&&(e.fallbackLng=[e.fallbackLng]),"string"==typeof e.fallbackNS&&(e.fallbackNS=[e.fallbackNS]),e.supportedLngs&&e.supportedLngs.indexOf("cimode")<0&&(e.supportedLngs=e.supportedLngs.concat(["cimode"])),e}function yl(){}class bl extends js{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1?arguments[1]:void 0;var t;if(super(),this.options=wl(e),this.services={},this.logger=Bs,this.modules={external:[]},t=this,Object.getOwnPropertyNames(Object.getPrototypeOf(t)).forEach((e=>{"function"==typeof t[e]&&(t[e]=t[e].bind(t))})),a&&!this.isInitialized&&!e.isClone){if(!this.options.initImmediate)return this.init(e,a),this;setTimeout((()=>{this.init(e,a)}),0)}}init(){var e=this;let a=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;this.isInitializing=!0,"function"==typeof a&&(t=a,a={}),!a.defaultNS&&!1!==a.defaultNS&&a.ns&&("string"==typeof a.ns?a.defaultNS=a.ns:a.ns.indexOf("translation")<0&&(a.defaultNS=a.ns[0]));const p=gl();function d(e){return e?"function"==typeof e?new e:e:null}if(this.options={...p,...this.options,...wl(a)},"v1"!==this.options.compatibilityAPI&&(this.options.interpolation={...p.interpolation,...this.options.interpolation}),void 0!==a.keySeparator&&(this.options.userDefinedKeySeparator=a.keySeparator),void 0!==a.nsSeparator&&(this.options.userDefinedNsSeparator=a.nsSeparator),!this.options.isClone){let a;this.modules.logger?Bs.init(d(this.modules.logger),this.options):Bs.init(null,this.options),this.modules.formatter?a=this.modules.formatter:"undefined"!=typeof Intl&&(a=vl);const t=new il(this.options);this.store=new el(this.options.resources,this.options);const i=this.services;i.logger=Bs,i.resourceStore=this.store,i.languageUtils=t,i.pluralResolver=new ml(t,{prepend:this.options.pluralSeparator,compatibilityJSON:this.options.compatibilityJSON,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),!a||this.options.interpolation.format&&this.options.interpolation.format!==p.interpolation.format||(i.formatter=d(a),i.formatter.init(i,this.options),this.options.interpolation.format=i.formatter.format.bind(i.formatter)),i.interpolator=new ul(this.options),i.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},i.backendConnector=new fl(d(this.modules.backend),i.resourceStore,i,this.options),i.backendConnector.on("*",(function(a){for(var t=arguments.length,p=new Array(t>1?t-1:0),d=1;d<t;d++)p[d-1]=arguments[d];e.emit(a,...p)})),this.modules.languageDetector&&(i.languageDetector=d(this.modules.languageDetector),i.languageDetector.init&&i.languageDetector.init(i,this.options.detection,this.options)),this.modules.i18nFormat&&(i.i18nFormat=d(this.modules.i18nFormat),i.i18nFormat.init&&i.i18nFormat.init(this)),this.translator=new pl(this.services,this.options),this.translator.on("*",(function(a){for(var t=arguments.length,p=new Array(t>1?t-1:0),d=1;d<t;d++)p[d-1]=arguments[d];e.emit(a,...p)})),this.modules.external.forEach((e=>{e.init&&e.init(this)}))}if(this.format=this.options.interpolation.format,t||(t=yl),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const e=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);e.length>0&&"dev"!==e[0]&&(this.options.lng=e[0])}this.services.languageDetector||this.options.lng||this.logger.warn("init: no languageDetector is used and no lng is defined");["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach((a=>{this[a]=function(){return e.store[a](...arguments)}}));["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach((a=>{this[a]=function(){return e.store[a](...arguments),e}}));const i=Ks(),n=()=>{const e=(e,a)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),i.resolve(a),t(e,a)};if(this.languages&&"v1"!==this.options.compatibilityAPI&&!this.isInitialized)return e(null,this.t.bind(this));this.changeLanguage(this.options.lng,e)};return this.options.resources||!this.options.initImmediate?n():setTimeout(n,0),i}loadResources(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:yl;const t="string"==typeof e?e:this.language;if("function"==typeof e&&(a=e),!this.options.resources||this.options.partialBundledLanguages){if(t&&"cimode"===t.toLowerCase()&&(!this.options.preload||0===this.options.preload.length))return a();const e=[],p=a=>{if(!a)return;if("cimode"===a)return;this.services.languageUtils.toResolveHierarchy(a).forEach((a=>{"cimode"!==a&&e.indexOf(a)<0&&e.push(a)}))};if(t)p(t);else{this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach((e=>p(e)))}this.options.preload&&this.options.preload.forEach((e=>p(e))),this.services.backendConnector.load(e,this.options.ns,(e=>{e||this.resolvedLanguage||!this.language||this.setResolvedLanguage(this.language),a(e)}))}else a(null)}reloadResources(e,a,t){const p=Ks();return e||(e=this.languages),a||(a=this.options.ns),t||(t=yl),this.services.backendConnector.reload(e,a,(e=>{p.resolve(),t(e)})),p}use(e){if(!e)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!e.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return"backend"===e.type&&(this.modules.backend=e),("logger"===e.type||e.log&&e.warn&&e.error)&&(this.modules.logger=e),"languageDetector"===e.type&&(this.modules.languageDetector=e),"i18nFormat"===e.type&&(this.modules.i18nFormat=e),"postProcessor"===e.type&&al.addPostProcessor(e),"formatter"===e.type&&(this.modules.formatter=e),"3rdParty"===e.type&&this.modules.external.push(e),this}setResolvedLanguage(e){if(e&&this.languages&&!(["cimode","dev"].indexOf(e)>-1))for(let e=0;e<this.languages.length;e++){const a=this.languages[e];if(!(["cimode","dev"].indexOf(a)>-1)&&this.store.hasLanguageSomeTranslations(a)){this.resolvedLanguage=a;break}}}changeLanguage(e,a){var t=this;this.isLanguageChangingTo=e;const p=Ks();this.emit("languageChanging",e);const d=e=>{this.language=e,this.languages=this.services.languageUtils.toResolveHierarchy(e),this.resolvedLanguage=void 0,this.setResolvedLanguage(e)},i=(e,i)=>{i?(d(i),this.translator.changeLanguage(i),this.isLanguageChangingTo=void 0,this.emit("languageChanged",i),this.logger.log("languageChanged",i)):this.isLanguageChangingTo=void 0,p.resolve((function(){return t.t(...arguments)})),a&&a(e,(function(){return t.t(...arguments)}))},n=a=>{e||a||!this.services.languageDetector||(a=[]);const t="string"==typeof a?a:this.services.languageUtils.getBestMatchFromCodes(a);t&&(this.language||d(t),this.translator.language||this.translator.changeLanguage(t),this.services.languageDetector&&this.services.languageDetector.cacheUserLanguage&&this.services.languageDetector.cacheUserLanguage(t)),this.loadResources(t,(e=>{i(e,t)}))};return e||!this.services.languageDetector||this.services.languageDetector.async?!e&&this.services.languageDetector&&this.services.languageDetector.async?0===this.services.languageDetector.detect.length?this.services.languageDetector.detect().then(n):this.services.languageDetector.detect(n):n(e):n(this.services.languageDetector.detect()),p}getFixedT(e,a,t){var p=this;const d=function(e,a){let i;if("object"!=typeof a){for(var n=arguments.length,r=new Array(n>2?n-2:0),o=2;o<n;o++)r[o-2]=arguments[o];i=p.options.overloadTranslationOptionHandler([e,a].concat(r))}else i={...a};i.lng=i.lng||d.lng,i.lngs=i.lngs||d.lngs,i.ns=i.ns||d.ns,i.keyPrefix=i.keyPrefix||t||d.keyPrefix;const s=p.options.keySeparator||".";let l;return l=i.keyPrefix&&Array.isArray(e)?e.map((e=>`${i.keyPrefix}${s}${e}`)):i.keyPrefix?`${i.keyPrefix}${s}${e}`:e,p.t(l,i)};return"string"==typeof e?d.lng=e:d.lngs=e,d.ns=a,d.keyPrefix=t,d}t(){return this.translator&&this.translator.translate(...arguments)}exists(){return this.translator&&this.translator.exists(...arguments)}setDefaultNamespace(e){this.options.defaultNS=e}hasLoadedNamespace(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const t=a.lng||this.resolvedLanguage||this.languages[0],p=!!this.options&&this.options.fallbackLng,d=this.languages[this.languages.length-1];if("cimode"===t.toLowerCase())return!0;const i=(e,a)=>{const t=this.services.backendConnector.state[`${e}|${a}`];return-1===t||2===t};if(a.precheck){const e=a.precheck(this,i);if(void 0!==e)return e}return!!this.hasResourceBundle(t,e)||(!(this.services.backendConnector.backend&&(!this.options.resources||this.options.partialBundledLanguages))||!(!i(t,e)||p&&!i(d,e)))}loadNamespaces(e,a){const t=Ks();return this.options.ns?("string"==typeof e&&(e=[e]),e.forEach((e=>{this.options.ns.indexOf(e)<0&&this.options.ns.push(e)})),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}loadLanguages(e,a){const t=Ks();"string"==typeof e&&(e=[e]);const p=this.options.preload||[],d=e.filter((e=>p.indexOf(e)<0&&this.services.languageUtils.isSupportedCode(e)));return d.length?(this.options.preload=p.concat(d),this.loadResources((e=>{t.resolve(),a&&a(e)})),t):(a&&a(),Promise.resolve())}dir(e){if(e||(e=this.resolvedLanguage||(this.languages&&this.languages.length>0?this.languages[0]:this.language)),!e)return"rtl";const a=this.services&&this.services.languageUtils||new il(gl());return["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"].indexOf(a.getLanguagePartFromCode(e))>-1||e.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){return new bl(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},arguments.length>1?arguments[1]:void 0)}cloneInstance(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:yl;const t=e.forkResourceStore;t&&delete e.forkResourceStore;const p={...this.options,...e,isClone:!0},d=new bl(p);void 0===e.debug&&void 0===e.prefix||(d.logger=d.logger.clone(e));return["store","services","language"].forEach((e=>{d[e]=this[e]})),d.services={...this.services},d.services.utils={hasLoadedNamespace:d.hasLoadedNamespace.bind(d)},t&&(d.store=new el(this.store.data,p),d.services.resourceStore=d.store),d.translator=new pl(d.services,p),d.translator.on("*",(function(e){for(var a=arguments.length,t=new Array(a>1?a-1:0),p=1;p<a;p++)t[p-1]=arguments[p];d.emit(e,...t)})),d.init(p,a),d.translator.options=p,d.translator.backendConnector.services.utils={hasLoadedNamespace:d.hasLoadedNamespace.bind(d)},d}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const Sl=bl.createInstance();Sl.createInstance=bl.createInstance;const _l=Sl.createInstance;Sl.dir,Sl.init,Sl.loadResources,Sl.reloadResources,Sl.use,Sl.changeLanguage,Sl.getFixedT,Sl.t,Sl.exists,Sl.setDefaultNamespace,Sl.hasLoadedNamespace,Sl.loadNamespaces,Sl.loadLanguages;var El,Nl={name:"@metamask/sdk",version:"0.30.3",description:"",homepage:"https://github.com/MetaMask/metamask-sdk#readme",bugs:{url:"https://github.com/MetaMask/metamask-sdk/issues"},repository:{type:"git",url:"https://github.com/MetaMask/metamask-sdk",directory:"packages/sdk"},exports:{".":{node:{import:"./dist/node/es/metamask-sdk.js",require:"./dist/node/cjs/metamask-sdk.js"},browser:"./dist/browser/es/metamask-sdk.js","react-native":"./dist/react-native/es/metamask-sdk.js",default:"./dist/browser/es/metamask-sdk.js"}},main:"dist/node/cjs/metamask-sdk.js",module:"dist/browser/es/metamask-sdk.js",browser:"dist/browser/es/metamask-sdk.js",unpkg:"dist/browser/umd/metamask-sdk.js","react-native":"dist/react-native/es/metamask-sdk.js",types:"dist/types/src/index.d.ts",sideEffects:!1,files:["/dist"],scripts:{"build:types":"tsc --project tsconfig.build.json --emitDeclarationOnly --outDir dist/types",build:"yarn build:types && rollup -c --bundleConfigAsCjs","build:clean":"yarn clean && yarn build","build:dev":"yarn build:types && NODE_ENV=dev rollup -c --bundleConfigAsCjs","build:post-tsc":"echo 'N/A'","build:pre-tsc":"echo 'N/A'",clean:"rimraf ./dist",size:"node bundle-size && size-limit",lint:"yarn lint:eslint && yarn lint:misc --check","lint:changelog":"../../scripts/validate-changelog.sh @metamask/sdk","lint:eslint":"eslint . --cache --ext js,ts","lint:fix":"yarn lint:eslint --fix && yarn lint:misc --write","lint:misc":"prettier '**/*.json' '**/*.md' '!CHANGELOG.md' --ignore-path ../../.gitignore",prepack:"../../scripts/prepack.sh","publish:preview":"yarn npm publish --tag preview",reset:"yarn clean && rimraf ./node_modules/",test:'jest --testPathIgnorePatterns "/e2e/"',"test:coverage":'jest --coverage --testPathIgnorePatterns "/e2e/"',"test:e2e":'jest --testPathPattern "/e2e/"',"test:ci":'jest --coverage --passWithNoTests --setupFilesAfterEnv ./jest-preload.js --testPathIgnorePatterns "/e2e/"',"test:dev":'jest -c ./jest.config.ts --detectOpenHandles  --testPathIgnorePatterns "/e2e/"',watch:"rollup -c -w"},dependencies:{"@metamask/onboarding":"^1.0.1","@metamask/providers":"16.1.0","@metamask/sdk-communication-layer":"workspace:*","@metamask/sdk-install-modal-web":"workspace:*",bowser:"^2.9.0","cross-fetch":"^4.0.0",debug:"^4.3.4",eciesjs:"^0.4.11","eth-rpc-errors":"^4.0.3",eventemitter2:"^6.4.9",i18next:"23.11.5","i18next-browser-languagedetector":"7.1.0","obj-multiplex":"^1.0.0",pump:"^3.0.0","qrcode-terminal-nooctal":"^0.12.1","react-native-webview":"^11.26.0","readable-stream":"^3.6.2","socket.io-client":"^4.5.1",util:"^0.12.4",uuid:"^8.3.2"},devDependencies:{"@jest/globals":"^29.3.1","@lavamoat/allow-scripts":"^2.3.1","@metamask/auto-changelog":"3.1.0","@metamask/eslint-config":"^6.0.0","@metamask/eslint-config-nodejs":"^6.0.0","@metamask/eslint-config-typescript":"^6.0.0","@react-native-async-storage/async-storage":"^1.19.6","@rollup/plugin-alias":"^5.1.1","@rollup/plugin-commonjs":"^25.0.7","@rollup/plugin-json":"^6.0.0","@rollup/plugin-node-resolve":"^15.0.2","@rollup/plugin-replace":"^6.0.1","@rollup/plugin-terser":"^0.4.1","@size-limit/preset-big-lib":"^11.0.2","@types/dom-screen-wake-lock":"^1.0.2","@types/node":"^20.1.3","@types/pump":"^1.1.1","@types/qrcode-terminal":"^0.12.0","@types/uuid":"^10.0.0","@typescript-eslint/eslint-plugin":"^4.26.0","@typescript-eslint/parser":"^4.26.0","browserify-zlib":"^0.2.0",buffer:"^6.0.3","crypto-browserify":"^3.12.0",eslint:"^7.30.0","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.23.4","eslint-plugin-jest":"^24.4.0","eslint-plugin-jsdoc":"^36.1.0","eslint-plugin-node":"^11.1.0","eslint-plugin-prettier":"^3.4.0","https-browserify":"^1.0.0",jest:"^29.3.1","jest-environment-jsdom":"^29.3.1",prettier:"^2.3.0",process:"^0.11.10",react:"^18.2.0","react-dom":"18.2.0",rimraf:"^4.4.0",rollup:"^4.26.0","rollup-plugin-analyzer":"^4.0.0","rollup-plugin-jscc":"^2.0.0","rollup-plugin-natives":"^0.7.5","rollup-plugin-node-builtins":"^2.1.2","rollup-plugin-node-globals":"^1.4.0","rollup-plugin-polyfill-node":"^0.13.0","rollup-plugin-sizes":"^1.0.6","rollup-plugin-typescript2":"^0.31.2","rollup-plugin-visualizer":"^5.12.0","size-limit":"^11.0.2","stream-browserify":"^3.0.0","stream-http":"^3.2.0","ts-jest":"^29.0.3","ts-node":"^10.9.1",tslib:"latest",typescript:"^4.3.2",url:"^0.11.0",webpack:"^5.0.0"},peerDependencies:{react:"^18.2.0","react-dom":"^18.2.0"},peerDependenciesMeta:{react:{optional:!0},"react-dom":{optional:!0}},publishConfig:{access:"public",registry:"https://registry.npmjs.org/"},lavamoat:{allowScripts:{"eciesjs>secp256k1":!1,"socket.io-client>engine.io-client>ws>bufferutil":!1,"socket.io-client>engine.io-client>ws>utf-8-validate":!1,"@metamask/sdk-communication-layer>bufferutil":!1,"@metamask/sdk-communication-layer>eciesjs>secp256k1":!1,"@metamask/sdk-communication-layer>utf-8-validate":!1}}};!function(e){e.INPAGE="metamask-inpage",e.CONTENT_SCRIPT="metamask-contentscript",e.PROVIDER="metamask-provider"}(El||(El={}));const Tl="direct",Cl="https://metamask.app.link/connect",Dl="metamask://connect",Al={NAME:"MetaMask",RDNS:"io.metamask"},kl=/(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;const Ol={Initialized:"initialized",DisplayURI:"display_uri",ProviderUpdate:"provider_update",ConnectWithResponse:"connectWithResponse",ConnectionStatus:"connection_status",ServiceStatus:"service_status"};var xl;!function(e){e.TERMINATE="terminate",e.EXTENSION="extension",e.INITIALIZED="initialized"}(xl||(xl={}));const Rl="undefined"!=typeof window&&window.localStorage;function Ml({instance:a,msg:t}){return e(this,void 0,void 0,(function*(){if(a._initialized||(ss("[MetaMaskSDK: connectAndSign()] provider not ready -- wait for init()"),yield a.init()),ss(`[MetaMaskSDK: connectAndSign()] activeProvider=${a.activeProvider}`),!a.activeProvider)throw new Error("SDK state invalid -- undefined provider");const e=/^0x([0-9A-Fa-f]{2})*$/u.test(t)?t:function(e){let a;if("undefined"!=typeof Buffer)a=Buffer.from(e,"utf8").toString("hex");else if("undefined"!=typeof TextEncoder){const t=(new TextEncoder).encode(e);a=Array.from(t).map((e=>e.toString(16).padStart(2,"0"))).join("")}else{if("object"!=typeof global||!("Buffer"in global))throw new Error("Unable to convert string to hex: No available method.");a=global.Buffer.from(e,"utf8").toString("hex")}return`0x${a}`}(t);return a.activeProvider.request({method:Ns.METAMASK_CONNECTWITH,params:[{method:Ns.PERSONAL_SIGN,params:[e]}]})}))}function Pl(a){var t,p;return e(this,void 0,void 0,(function*(){ss("[MetaMaskSDK: connectWithExtensionProvider()] ",a),a.sdkProvider=a.activeProvider,a.activeProvider=window.extension,window.ethereum=window.extension;try{const e=yield null===(t=window.extension)||void 0===t?void 0:t.request({method:"eth_requestAccounts"});ss(`[MetaMaskSDK: connectWithExtensionProvider()] accounts=${e}`)}catch(e){return void console.warn("[MetaMaskSDK: connectWithExtensionProvider()] can't request accounts error",e)}localStorage.setItem(ks,"extension"),a.extensionActive=!0,a.emit(Ol.ProviderUpdate,xl.EXTENSION),a.options.enableAnalytics&&(null===(p=a.analytics)||void 0===p||p.send({event:Bd.SDK_USE_EXTENSION}))}))}function Il(e){return Il="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Il(e)}function Vl(e){var a=function(e,a){if("object"!==Il(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var p=t.call(e,a);if("object"!==Il(p))return p;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e,"string");return"symbol"===Il(a)?a:String(a)}function Ll(e,a,t){return a&&function(e,a){for(var t=0;t<a.length;t++){var p=a[t];p.enumerable=p.enumerable||!1,p.configurable=!0,"value"in p&&(p.writable=!0),Object.defineProperty(e,Vl(p.key),p)}}(e.prototype,a),Object.defineProperty(e,"prototype",{writable:!1}),e}var Bl=[],jl=Bl.forEach,Kl=Bl.slice;var Ul=/^[\u0009\u0020-\u007e\u0080-\u00ff]+$/,Fl=function(e,a,t,p){var d=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{path:"/",sameSite:"strict"};t&&(d.expires=new Date,d.expires.setTime(d.expires.getTime()+60*t*1e3)),p&&(d.domain=p),document.cookie=function(e,a,t){var p=t||{};p.path=p.path||"/";var d=encodeURIComponent(a),i="".concat(e,"=").concat(d);if(p.maxAge>0){var n=p.maxAge-0;if(Number.isNaN(n))throw new Error("maxAge should be a Number");i+="; Max-Age=".concat(Math.floor(n))}if(p.domain){if(!Ul.test(p.domain))throw new TypeError("option domain is invalid");i+="; Domain=".concat(p.domain)}if(p.path){if(!Ul.test(p.path))throw new TypeError("option path is invalid");i+="; Path=".concat(p.path)}if(p.expires){if("function"!=typeof p.expires.toUTCString)throw new TypeError("option expires is invalid");i+="; Expires=".concat(p.expires.toUTCString())}if(p.httpOnly&&(i+="; HttpOnly"),p.secure&&(i+="; Secure"),p.sameSite)switch("string"==typeof p.sameSite?p.sameSite.toLowerCase():p.sameSite){case!0:i+="; SameSite=Strict";break;case"lax":i+="; SameSite=Lax";break;case"strict":i+="; SameSite=Strict";break;case"none":i+="; SameSite=None";break;default:throw new TypeError("option sameSite is invalid")}return i}(e,encodeURIComponent(a),d)},$l=function(e){for(var a="".concat(e,"="),t=document.cookie.split(";"),p=0;p<t.length;p++){for(var d=t[p];" "===d.charAt(0);)d=d.substring(1,d.length);if(0===d.indexOf(a))return d.substring(a.length,d.length)}return null},Hl={name:"cookie",lookup:function(e){var a;if(e.lookupCookie&&"undefined"!=typeof document){var t=$l(e.lookupCookie);t&&(a=t)}return a},cacheUserLanguage:function(e,a){a.lookupCookie&&"undefined"!=typeof document&&Fl(a.lookupCookie,e,a.cookieMinutes,a.cookieDomain,a.cookieOptions)}},zl={name:"querystring",lookup:function(e){var a;if("undefined"!=typeof window){var t=window.location.search;!window.location.search&&window.location.hash&&window.location.hash.indexOf("?")>-1&&(t=window.location.hash.substring(window.location.hash.indexOf("?")));for(var p=t.substring(1).split("&"),d=0;d<p.length;d++){var i=p[d].indexOf("=");if(i>0)p[d].substring(0,i)===e.lookupQuerystring&&(a=p[d].substring(i+1))}}return a}},ql=null,Wl=function(){if(null!==ql)return ql;try{ql="undefined"!==window&&null!==window.localStorage;var e="i18next.translate.boo";window.localStorage.setItem(e,"foo"),window.localStorage.removeItem(e)}catch(e){ql=!1}return ql},Gl={name:"localStorage",lookup:function(e){var a;if(e.lookupLocalStorage&&Wl()){var t=window.localStorage.getItem(e.lookupLocalStorage);t&&(a=t)}return a},cacheUserLanguage:function(e,a){a.lookupLocalStorage&&Wl()&&window.localStorage.setItem(a.lookupLocalStorage,e)}},Yl=null,Jl=function(){if(null!==Yl)return Yl;try{Yl="undefined"!==window&&null!==window.sessionStorage;var e="i18next.translate.boo";window.sessionStorage.setItem(e,"foo"),window.sessionStorage.removeItem(e)}catch(e){Yl=!1}return Yl},Zl={name:"sessionStorage",lookup:function(e){var a;if(e.lookupSessionStorage&&Jl()){var t=window.sessionStorage.getItem(e.lookupSessionStorage);t&&(a=t)}return a},cacheUserLanguage:function(e,a){a.lookupSessionStorage&&Jl()&&window.sessionStorage.setItem(a.lookupSessionStorage,e)}},Xl={name:"navigator",lookup:function(e){var a=[];if("undefined"!=typeof navigator){if(navigator.languages)for(var t=0;t<navigator.languages.length;t++)a.push(navigator.languages[t]);navigator.userLanguage&&a.push(navigator.userLanguage),navigator.language&&a.push(navigator.language)}return a.length>0?a:void 0}},Ql={name:"htmlTag",lookup:function(e){var a,t=e.htmlTag||("undefined"!=typeof document?document.documentElement:null);return t&&"function"==typeof t.getAttribute&&(a=t.getAttribute("lang")),a}},em={name:"path",lookup:function(e){var a;if("undefined"!=typeof window){var t=window.location.pathname.match(/\/([a-zA-Z-]*)/g);if(t instanceof Array)if("number"==typeof e.lookupFromPathIndex){if("string"!=typeof t[e.lookupFromPathIndex])return;a=t[e.lookupFromPathIndex].replace("/","")}else a=t[0].replace("/","")}return a}},am={name:"subdomain",lookup:function(e){var a="number"==typeof e.lookupFromSubdomainIndex?e.lookupFromSubdomainIndex+1:1,t="undefined"!=typeof window&&window.location&&window.location.hostname&&window.location.hostname.match(/^(\w{2,5})\.(([a-z0-9-]{1,63}\.[a-z]{2,6})|localhost)/i);if(t)return t[a]}};var tm=function(){function e(a){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};!function(e,a){if(!(e instanceof a))throw new TypeError("Cannot call a class as a function")}(this,e),this.type="languageDetector",this.detectors={},this.init(a,t)}return Ll(e,[{key:"init",value:function(e){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};this.services=e||{languageUtils:{}},this.options=function(e){return jl.call(Kl.call(arguments,1),(function(a){if(a)for(var t in a)void 0===e[t]&&(e[t]=a[t])})),e}(a,this.options||{},{order:["querystring","cookie","localStorage","sessionStorage","navigator","htmlTag"],lookupQuerystring:"lng",lookupCookie:"i18next",lookupLocalStorage:"i18nextLng",lookupSessionStorage:"i18nextLng",caches:["localStorage"],excludeCacheFor:["cimode"],convertDetectedLanguage:function(e){return e}}),"string"==typeof this.options.convertDetectedLanguage&&this.options.convertDetectedLanguage.indexOf("15897")>-1&&(this.options.convertDetectedLanguage=function(e){return e.replace("-","_")}),this.options.lookupFromUrlIndex&&(this.options.lookupFromPathIndex=this.options.lookupFromUrlIndex),this.i18nOptions=t,this.addDetector(Hl),this.addDetector(zl),this.addDetector(Gl),this.addDetector(Zl),this.addDetector(Xl),this.addDetector(Ql),this.addDetector(em),this.addDetector(am)}},{key:"addDetector",value:function(e){this.detectors[e.name]=e}},{key:"detect",value:function(e){var a=this;e||(e=this.options.order);var t=[];return e.forEach((function(e){if(a.detectors[e]){var p=a.detectors[e].lookup(a.options);p&&"string"==typeof p&&(p=[p]),p&&(t=t.concat(p))}})),t=t.map((function(e){return a.options.convertDetectedLanguage(e)})),this.services.languageUtils.getBestMatchFromCodes?t:t.length>0?t[0]:null}},{key:"cacheUserLanguage",value:function(e,a){var t=this;a||(a=this.options.caches),a&&(this.options.excludeCacheFor&&this.options.excludeCacheFor.indexOf(e)>-1||a.forEach((function(a){t.detectors[a]&&t.detectors[a].cacheUserLanguage(e,t.options)})))}}]),e}();tm.type="languageDetector";var pm={DESKTOP:"Desktop",MOBILE:"Mobile",META_MASK_MOBILE_APP:"MetaMask mobile app",SCAN_TO_CONNECT:"Scan to connect and sign with",CONNECT_WITH_EXTENSION:"Connect With MetaMask Extension",INSTALL_MODAL:{TRUSTED_BY_USERS:"Trusted by over 30 million users to buy, store, send and swap crypto securely",LEADING_CRYPTO_WALLET:"The leading crypto wallet & gateway to blockchain apps built on Ethereum Mainnet, Polygon, Optimism, and many other networks",CONTROL_DIGITAL_INTERACTIONS:"Puts you in control of your digital interactions by making power of cryptography more accessible",INSTALL_META_MASK_EXTENSION:"Install MetaMask Extension"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Please open the MetaMask wallet app and select the code on the screen OR disconnect",OPEN_META_MASK_CONTINUE:"Open the MetaMask app to continue with your session.",NUMBER_AFTER_OPEN_NOTICE:"If a number doesn't appear after opening MetaMask, please click disconnect and re-scan the QRCode.",DISCONNECT:"Disconnect"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Take control of your crypto and explore the blockchain with the wallet trusted by over 30 million people worldwide"},META_MASK_MODAL:{ADDRESS_COPIED:"Address copied to clipboard!",DISCONNECT:"Disconnect",ACTIVE_NETWORK:"Active Network"}},dm={DESKTOP:"Escritorio",MOBILE:"Móvil",META_MASK_MOBILE_APP:"Aplicación móvil de MetaMask",SCAN_TO_CONNECT:"Escanear para conectar y firmar con",CONNECT_WITH_EXTENSION:"Conectar con la Extensión de MetaMask",INSTALL_MODAL:{TRUSTED_BY_USERS:"Confiado por más de 30 millones de usuarios para comprar, almacenar, enviar e intercambiar cripto de manera segura",LEADING_CRYPTO_WALLET:"La principal billetera de criptomonedas y pasarela hacia aplicaciones blockchain construidas en Ethereum Mainnet, Polygon, Optimism y muchas otras redes",CONTROL_DIGITAL_INTERACTIONS:"Te da el control de tus interacciones digitales al hacer que el poder de la criptografía sea más accesible",INSTALL_META_MASK_EXTENSION:"Instalar la Extensión de MetaMask"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Por favor, abre la aplicación de billetera MetaMask y selecciona el código en la pantalla O desconecta",OPEN_META_MASK_CONTINUE:"Abre la aplicación de MetaMask para continuar con tu sesión.",NUMBER_AFTER_OPEN_NOTICE:"Si no aparece un número después de abrir MetaMask, por favor haz clic en desconectar y vuelve a escanear el código QR.",DISCONNECT:"Desconectar"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Toma el control de tu cripto y explora la blockchain con la billetera en la que confían más de 30 millones de personas en todo el mundo"},META_MASK_MODAL:{ADDRESS_COPIED:"¡Dirección copiada al portapapeles!",DISCONNECT:"Desconectar",ACTIVE_NETWORK:"Red activa"}},im={DESKTOP:"Bureau",MOBILE:"Mobile",META_MASK_MOBILE_APP:"Application mobile MetaMask",SCAN_TO_CONNECT:"Scannez pour vous connecter et signer avec",CONNECT_WITH_EXTENSION:"Connectez-vous avec l'extension MetaMask",INSTALL_MODAL:{TRUSTED_BY_USERS:"Fait confiance à plus de 30 millions d'utilisateurs pour acheter, stocker, envoyer et échanger des crypto en toute sécurité",LEADING_CRYPTO_WALLET:"Le portefeuille crypto leader et la passerelle vers des applications blockchain basées sur Ethereum Mainnet, Polygon, Optimism, et de nombreux autres réseaux",CONTROL_DIGITAL_INTERACTIONS:"Vous donne le contrôle de vos interactions numériques en rendant la puissance de la cryptographie plus accessible",INSTALL_META_MASK_EXTENSION:"Installez l'extension MetaMask"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Veuillez ouvrir l'application MetaMask et sélectionnez le code à l'écran OU déconnectez-vous",OPEN_META_MASK_CONTINUE:"Ouvrez l'application MetaMask pour continuer votre session.",NUMBER_AFTER_OPEN_NOTICE:"Si un numéro n'apparaît pas après avoir ouvert MetaMask, veuillez cliquer sur déconnecter et rescanner le QRCode.",DISCONNECT:"Déconnecter"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Prenez le contrôle de votre crypto et explorez la blockchain avec le portefeuille fait confiance par plus de 30 millions de personnes à travers le monde"},META_MASK_MODAL:{ADDRESS_COPIED:"Adresse copiée dans le presse-papiers!",DISCONNECT:"Déconnecter",ACTIVE_NETWORK:"Réseau actif"}},nm={DESKTOP:"שולחן עבודה",MOBILE:"נייד",META_MASK_MOBILE_APP:"אפליקציית מטא מאסק לנייד",SCAN_TO_CONNECT:"סרוק כדי להתחבר ולחתום עם",CONNECT_WITH_EXTENSION:"התחבר עם התוסף של מטא מאסק",INSTALL_MODAL:{TRUSTED_BY_USERS:"מהימנים על ידי למעלה מ-30 מיליון משתמשים לקנות, לאחסן, לשלוח ולהחליף מטבע קריפטוגרפי בבטחה",LEADING_CRYPTO_WALLET:"ארנק הקריפטו המוביל והשער ליישומי בלוקצ'יין המתוכנתים על אתריום, פוליגון, ורשתות רבות נוספות",CONTROL_DIGITAL_INTERACTIONS:"מכניס אותך לשליטה על האינטראקציות הדיגיטליות שלך על ידי הפיכת כוח הקריפטוגרפיה לנגיש יותר",INSTALL_META_MASK_EXTENSION:"התקן את ההרחבה של מטא מאסק"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"אנא פתח את אפליקציית ארנק מטא מאסק ובחר את הקוד שמופיע על המסך או התנתק",OPEN_META_MASK_CONTINUE:"פתח את האפליקציה של מטא מאסק כדי להמשיך בפעולה שלך.",NUMBER_AFTER_OPEN_NOTICE:"אם מספר אינו מופיע לאחר פתיחת מטא מאסק, אנא לחץ על התנתקות וסרוק מחדש את ה-QRCode.",DISCONNECT:"התנתק"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"קח שליטה על הקריפטו שלך וחקור את הבלוקצ'יין עם הארנק האמין שבשימוש על ידי למעלה מ-30 מיליון אנשים ברחבי העולם"},META_MASK_MODAL:{ADDRESS_COPIED:"הכתובת הועתקה ללוח!",DISCONNECT:"התנתק",ACTIVE_NETWORK:"רשת פעילה"}},rm={DESKTOP:"Desktop",MOBILE:"Mobile",META_MASK_MOBILE_APP:"App mobile MetaMask",SCAN_TO_CONNECT:"Scansiona per connetterti e firmare con",CONNECT_WITH_EXTENSION:"Connettiti con l'estensione MetaMask",INSTALL_MODAL:{TRUSTED_BY_USERS:"Ritenuto affidabile da oltre 30 milioni di utenti per acquistare, conservare, inviare e scambiare cripto in modo sicuro",LEADING_CRYPTO_WALLET:"Il principale portafoglio cripto e gateway per applicazioni blockchain funzionanti su Ethereum Mainnet, Polygon, Optimism e molte altre reti",CONTROL_DIGITAL_INTERACTIONS:"Ti da il controllo delle tue interazioni digitali rendendo piu' accessibile il potere della crittografia",INSTALL_META_MASK_EXTENSION:"Installa l'estensione MetaMask"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Si prega di aprire l'app mobile MetaMask Wallet e selezionare il codice sullo schermo OPPURE scollegarsi",OPEN_META_MASK_CONTINUE:"Apri l'app mobile MetaMask per continuare con la tua sessione.",NUMBER_AFTER_OPEN_NOTICE:"Se, dopo aver aperto MetaMask, non appare alcun numero, si prega di fare clic su disconnetti e ris canzionare il QRCode.",DISCONNECT:"Disconnetti"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Prendi il controllo delle tue cripto e esplora la blockchain con il portafoglio ritenuto affidabile da oltre 30 milioni di persone in tutto il mondo"},META_MASK_MODAL:{ADDRESS_COPIED:"Indirizzo copiato negli appunti!",DISCONNECT:"Disconnetti",ACTIVE_NETWORK:"Rete attiva"}},om={DESKTOP:"Desktop",MOBILE:"Móvel",META_MASK_MOBILE_APP:"Aplicativo móvel MetaMask",SCAN_TO_CONNECT:"Escanear para conectar e assinar com",CONNECT_WITH_EXTENSION:"Conectar com a extensão MetaMask",INSTALL_MODAL:{TRUSTED_BY_USERS:"Confiado por mais de 30 milhões de usuários para comprar, armazenar, enviar e trocar cripto com segurança",LEADING_CRYPTO_WALLET:"A principal carteira de cripto & portal para aplicativos blockchain construídos em Ethereum Mainnet, Polygon, Optimism, e muitas outras redes",CONTROL_DIGITAL_INTERACTIONS:"Coloca você no controle de suas interações digitais, tornando o poder da criptografia mais acessível",INSTALL_META_MASK_EXTENSION:"Instalar a extensão MetaMask"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Por favor, abra o aplicativo MetaMask e selecione o código na tela OU desconecte",OPEN_META_MASK_CONTINUE:"Abra o aplicativo MetaMask para continuar sua sessão.",NUMBER_AFTER_OPEN_NOTICE:"Se um número não aparecer após abrir o MetaMask, por favor clique em desconectar e re-escaneie o QRCode.",DISCONNECT:"Desconectar"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Assuma o controle de sua cripto e explore a blockchain com a carteira confiada por mais de 30 milhões de pessoas em todo o mundo"},META_MASK_MODAL:{ADDRESS_COPIED:"Endereço copiado para a área de transferência!",DISCONNECT:"Desconectar",ACTIVE_NETWORK:"Rede ativa"}},sm={DESKTOP:"Masaüstü",MOBILE:"Mobil",META_MASK_MOBILE_APP:"MetaMask mobil uygulama",SCAN_TO_CONNECT:"Bağlanmak ve imzalamak için tarayın",CONNECT_WITH_EXTENSION:"MetaMask Eklentisi ile Bağlan",INSTALL_MODAL:{TRUSTED_BY_USERS:"Kriptoyu güvenle satın almak, saklamak, göndermek ve değiştirmek için 30 milyondan fazla kullanıcı tarafından güvenilir",LEADING_CRYPTO_WALLET:"Ethereum Ana Ağı, Polygon, Optimism ve birçok diğer ağda kurulu blockchain uygulamalarına erişim sağlayan öncü kripto cüzdanı",CONTROL_DIGITAL_INTERACTIONS:"Kriptografinin gücünü daha erişilebilir kılarak dijital etkileşimlerinizin kontrolünü size verir",INSTALL_META_MASK_EXTENSION:"MetaMask Eklentisini Yükleyin"},PENDING_MODAL:{OPEN_META_MASK_SELECT_CODE:"Lütfen MetaMask cüzdan uygulamasını açın ve ekrandaki kodu seçin YA DA bağlantıyı kesin",OPEN_META_MASK_CONTINUE:"Oturumunuzla devam etmek için MetaMask uygulamasını açın.",NUMBER_AFTER_OPEN_NOTICE:"MetaMask'ı açtıktan sonra bir numara görünmezse, lütfen bağlantıyı kesin ve QR Kodunu tekrar tarayın.",DISCONNECT:"Bağlantıyı Kes"},SELECT_MODAL:{CRYPTO_TAKE_CONTROL_TEXT:"Kriptonuzu kontrol edin ve dünya genelinde 30 milyondan fazla kişi tarafından güvenilen cüzdanla blockchain'i keşfedin"},META_MASK_MODAL:{ADDRESS_COPIED:"Adres panoya kopyalandı!",DISCONNECT:"Bağlantıyı Kes",ACTIVE_NETWORK:"Aktif Ağ"}};function lm(e){let a;if("undefined"!=typeof Buffer)a=Buffer.from(e,"utf8").toString("base64");else if("function"==typeof btoa)a=btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/gu,((e,a)=>String.fromCharCode(parseInt(a,16)))));else{if("object"!=typeof global||!("Buffer"in global))throw new Error("Unable to base64 encode: No available method.");a=global.Buffer.from(e,"utf8").toString("base64")}return a}class mm{constructor({shouldSetOnWindow:e,connectionStream:a,shouldSendMetadata:t=!1,shouldShimWeb3:p,sdkInstance:d}){const i=new Is({connectionStream:a,shouldSendMetadata:t,shouldSetOnWindow:e,shouldShimWeb3:p,autoRequestAccounts:!1}),n=new Proxy(i,{deleteProperty:()=>!0});if(this.provider=n,this.sdkInstance=d,e&&"undefined"!=typeof window)try{r=i,window.ethereum=r,window.dispatchEvent(new Event("ethereum#initialized"))}catch(e){ss("[Ethereum] Unable to set global provider - window.ethereum may be read-only",e)}var r;if(p&&"undefined"!=typeof window)try{!function(e,a=console){let t=!1,p=!1;if(!window.web3){const d="__isMetaMaskShim__";let i={currentProvider:e};Object.defineProperty(i,d,{value:!0,enumerable:!0,configurable:!1,writable:!1}),i=new Proxy(i,{get:(i,n,...r)=>("currentProvider"!==n||t?"currentProvider"===n||n===d||p||(p=!0,a.error("MetaMask no longer injects web3. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3"),e.request({method:"metamask_logWeb3ShimUsage"}).catch((e=>{a.debug("MetaMask: Failed to log web3 shim usage.",e)}))):(t=!0,a.warn("You are accessing the MetaMask window.web3.currentProvider shim. This property is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3")),Reflect.get(i,n,...r)),set:(...e)=>(a.warn("You are accessing the MetaMask window.web3 shim. This object is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3"),Reflect.set(...e))}),Object.defineProperty(window,"web3",{value:i,enumerable:!1,configurable:!0,writable:!0})}}(this.provider)}catch(e){ss("[Ethereum] Unable to shim web3 - window.web3 may be read-only",e)}this.provider.on("display_uri",(e=>{this.sdkInstance.emit(Ol.DisplayURI,e)})),this.provider.on("_initialized",(()=>{const e={chainId:this.provider.getChainId(),isConnected:this.provider.isConnected(),isMetaMask:this.provider.isMetaMask,selectedAddress:this.provider.getSelectedAddress(),networkVersion:this.provider.getNetworkVersion()};this.sdkInstance.emit(Ol.Initialized,e),ss("[Ethereum: constructor()] provider initialized",e)}))}static init(e){var a;return ss("[Ethereum: init()] Initializing Ethereum service"),this.instance=new mm(e),null===(a=this.instance)||void 0===a?void 0:a.provider}static destroy(){}static getInstance(){var e;if(!(null===(e=this.instance)||void 0===e?void 0:e.provider))throw new Error("Ethereum instance not intiialized - call Ethereum.factory first.");return this.instance}static getProvider(){var e;if(!(null===(e=this.instance)||void 0===e?void 0:e.provider))throw new Error("Ethereum instance not intiialized - call Ethereum.factory first.");return this.instance.provider}}function cm(a,t,p,d){var i,n,r,o,l,m,c,u,h,v,f,g,w,y,b,S,_,E,N,T;return e(this,void 0,void 0,(function*(){const e=null===(i=a.state.remote)||void 0===i?void 0:i.isReady(),p=null===(n=a.state.remote)||void 0===n?void 0:n.isConnected(),C=null===(r=a.state.remote)||void 0===r?void 0:r.isPaused(),D=mm.getProvider(),A=null===(o=a.state.remote)||void 0===o?void 0:o.getChannelId(),k=null===(l=a.state.remote)||void 0===l?void 0:l.isAuthorized(),{deeplinkProtocol:O}=a.state,{method:x,data:R,triggeredInstaller:M}=(e=>{var a,t,p,d;let i;s.isBuffer(e)?(i=e.toJSON(),i._isBuffer=!0):i=e;const n=null===(a=null==i?void 0:i.data)||void 0===a?void 0:a.method;let r=!1;return"object"==typeof(null===(t=null==i?void 0:i.data)||void 0===t?void 0:t.params)&&!0===(null===(d=null===(p=null==i?void 0:i.data)||void 0===p?void 0:p.params)||void 0===d?void 0:d.__triggeredInstaller)&&(r=!0,i.data.params=i.data.params.wrappedParams),{method:n,data:i,triggeredInstaller:r}})(t);if(ss(`[RCPMS: write()] method='${x}' isRemoteReady=${e} channelId=${A} isSocketConnected=${p} isRemotePaused=${C} providerConnected=${D.isConnected()}`,t),!A)return x!==Ns.METAMASK_GETPROVIDERSTATE&&ss(`[RCPMS: write()] ${x} --\x3e channelId is undefined`),d(new Error("disconnected"));ss(`[RCPMS: write()] remote.isPaused()=${null===(m=a.state.remote)||void 0===m?void 0:m.isPaused()} authorized=${k} ready=${e} socketConnected=${p}`,t);const P=null===(c=a.state.platformManager)||void 0===c?void 0:c.isSecure(),I=null!==(h=null===(u=a.state.platformManager)||void 0===u?void 0:u.isMobileWeb())&&void 0!==h&&h,V=null!==(f=null===(v=a.state.remote)||void 0===v?void 0:v.hasDeeplinkProtocol())&&void 0!==f&&f&&I&&k;try{if(V&&!M||null===(g=a.state.remote)||void 0===g||g.sendMessage(null==R?void 0:R.data).then((()=>{ss(`[RCPMS: _write()] ${x} sent successfully`)})).catch((e=>{ss("[RCPMS: _write()] error sending message",e)})),!P)return ss(`[RCPMS: _write()] unsecure platform for method ${x} -- return callback`),d();if(M)return ss("[RCPMS: _write()] prevent deeplink -- installation completed separately."),d();const e=null!==(b=null===(y=null===(w=a.state.remote)||void 0===w?void 0:w.getKeyInfo())||void 0===y?void 0:y.ecies.public)&&void 0!==b?b:"";let t=encodeURI(`channelId=${A}&pubkey=${e}&comm=socket&t=d&v=2`);if(V){const e=JSON.stringify(null==R?void 0:R.data),p=null===(S=a.state.remote)||void 0===S?void 0:S.encrypt(e);if(!p)return ss("[RCPMS: _write()] error encrypting message"),d(new Error("RemoteCommunicationPostMessageStream - disconnected"));t+=`&scheme=${O}&rpc=${lm(p)}`}if(!(null===(_=a.state.platformManager)||void 0===_?void 0:_.isMetaMaskInstalled()))return ss("[RCPMS: _write()] prevent deeplink until installation is completed."),d();Ts[x]?(ss(`[RCPMS: _write()] redirect link for '${x}' socketConnected=${p} connect?${t}`),null===(E=a.state.platformManager)||void 0===E||E.openDeeplink(`${Cl}?${t}`,`${Dl}?${t}`,"_self")):(null===(N=a.state.remote)||void 0===N?void 0:N.isPaused())?(ss(`[RCPMS: _write()] MM is PAUSED! deeplink with connect! targetMethod=${x}`),null===(T=a.state.platformManager)||void 0===T||T.openDeeplink(`${Cl}?redirect=true&${t}`,`${Dl}?redirect=true&${t}`,"_self")):ss(`[RCPMS: _write()] method ${x} doesn't need redirect.`)}catch(e){return ss("[RCPMS: _write()] error sending message",e),d(new Error("RemoteCommunicationPostMessageStream - disconnected"))}return d()}))}class um extends jo.Duplex{constructor({name:e,remote:a,deeplinkProtocol:t,platformManager:p}){super({objectMode:!0}),this.state={_name:null,remote:null,deeplinkProtocol:!1,platformManager:null},this.state._name=e,this.state.remote=a,this.state.deeplinkProtocol=t,this.state.platformManager=p,this._onMessage=this._onMessage.bind(this),this.state.remote.on(Pd.MESSAGE,this._onMessage)}_write(a,t,p){return e(this,void 0,void 0,(function*(){return cm(this,a,0,p)}))}_read(){}_onMessage(e){return function(e,a){try{if(ss("[RCPMS: onMessage()] message",a),!a||"object"!=typeof a)return;if("object"!=typeof(null==a?void 0:a.data))return;if(!(null==a?void 0:a.name))return void ss("[RCPMS: onMessage()] ignore message without name",a);if((null==a?void 0:a.name)!==El.PROVIDER)return void ss(`[RCPMS: onMessage()] ignore message with wrong name message=${a}`);if(s.isBuffer(a)){const t=s.from(a);e.push(t)}else e.push(a)}catch(e){ss(`[RCPMS: onMessage()] ignore message error err=${e}`)}}(this,e)}start(){}}var hm={exports:{}},vm={},fm={exports:{}},gm={},wm=gm;function ym(e){return e<0?-1:1}function bm(e,a){a.unsigned||--e;const t=a.unsigned?0:-Math.pow(2,e),p=Math.pow(2,e)-1,d=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),i=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,n){n||(n={});let r=+e;if(n.enforceRange){if(!Number.isFinite(r))throw new TypeError("Argument is not a finite number");if(r=ym(r)*Math.floor(Math.abs(r)),r<t||r>p)throw new TypeError("Argument is not in byte range");return r}if(!isNaN(r)&&n.clamp)return r=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(r),r<t&&(r=t),r>p&&(r=p),r;if(!Number.isFinite(r)||0===r)return 0;if(r=ym(r)*Math.floor(Math.abs(r)),r%=d,!a.unsigned&&r>=i)return r-d;if(a.unsigned)if(r<0)r+=d;else if(-0===r)return 0;return r}}gm.void=function(){},gm.boolean=function(e){return!!e},gm.byte=bm(8,{unsigned:!1}),gm.octet=bm(8,{unsigned:!0}),gm.short=bm(16,{unsigned:!1}),gm["unsigned short"]=bm(16,{unsigned:!0}),gm.long=bm(32,{unsigned:!1}),gm["unsigned long"]=bm(32,{unsigned:!0}),gm["long long"]=bm(32,{unsigned:!1,moduloBitLength:64}),gm["unsigned long long"]=bm(32,{unsigned:!0,moduloBitLength:64}),gm.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},gm["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},gm.float=gm.double,gm["unrestricted float"]=gm["unrestricted double"],gm.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},gm.ByteString=function(e,a){const t=String(e);let p;for(let e=0;void 0!==(p=t.codePointAt(e));++e)if(p>255)throw new TypeError("Argument is not a valid bytestring");return t},gm.USVString=function(e){const a=String(e),t=a.length,p=[];for(let e=0;e<t;++e){const d=a.charCodeAt(e);if(d<55296||d>57343)p.push(String.fromCodePoint(d));else if(56320<=d&&d<=57343)p.push(String.fromCodePoint(65533));else if(e===t-1)p.push(String.fromCodePoint(65533));else{const t=a.charCodeAt(e+1);if(56320<=t&&t<=57343){const a=1023&d,i=1023&t;p.push(String.fromCodePoint(65536+1024*a+i)),++e}else p.push(String.fromCodePoint(65533))}}return p.join("")},gm.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},gm.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e};var Sm={exports:{}};!function(e){e.exports.mixin=function(e,a){const t=Object.getOwnPropertyNames(a);for(let p=0;p<t.length;++p)Object.defineProperty(e,t[p],Object.getOwnPropertyDescriptor(a,t[p]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}}(Sm);var _m=Sm.exports,Em={},Nm={exports:{}},Tm={},Cm=d,Dm=[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1e3,1e3],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6e3],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8e3,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8e3]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9e3],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[3e4]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13e3,13e3],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43e3,43e3],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64e3,64e3],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66e3,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[12e4,12e4],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128e3,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23e3]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149e3]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32e3]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195e3,195e3],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[4e4]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918e3,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]],Am={TRANSITIONAL:0,NONTRANSITIONAL:1};function km(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function Om(e){for(var a=0,t=Dm.length-1;a<=t;){var p=Math.floor((a+t)/2),d=Dm[p];if(d[0][0]<=e&&d[0][1]>=e)return d;d[0][0]>e?t=p-1:a=p+1}return null}var xm=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function Rm(e){return e.replace(xm,"_").length}var Mm=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function Pm(e,a){"xn--"===e.substr(0,4)&&(e=Cm.toUnicode(e),Am.NONTRANSITIONAL);var t=!1;(km(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(Mm))&&(t=!0);for(var p=Rm(e),d=0;d<p;++d){var i=Om(e.codePointAt(d));if(Im===Am.TRANSITIONAL&&"valid"!==i[1]||Im===Am.NONTRANSITIONAL&&"valid"!==i[1]&&"deviation"!==i[1]){t=!0;break}}return{label:e,error:t}}function Im(e,a,t){var p=function(e,a,t){for(var p=!1,d="",i=Rm(e),n=0;n<i;++n){var r=e.codePointAt(n),o=Om(r);switch(o[1]){case"disallowed":p=!0,d+=String.fromCodePoint(r);break;case"ignored":break;case"mapped":d+=String.fromCodePoint.apply(String,o[2]);break;case"deviation":t===Am.TRANSITIONAL?d+=String.fromCodePoint.apply(String,o[2]):d+=String.fromCodePoint(r);break;case"valid":d+=String.fromCodePoint(r);break;case"disallowed_STD3_mapped":a?(p=!0,d+=String.fromCodePoint(r)):d+=String.fromCodePoint.apply(String,o[2]);break;case"disallowed_STD3_valid":a&&(p=!0),d+=String.fromCodePoint(r)}}return{string:d,error:p}}(e,a,t);p.string=km(p.string);for(var d=p.string.split("."),i=0;i<d.length;++i)try{var n=Pm(d[i]);d[i]=n.label,p.error=p.error||n.error}catch(e){p.error=!0}return{string:d.join("."),error:p.error}}Tm.toASCII=function(e,a,t,p){var d=Im(e,a,t),i=d.string.split(".");if(i=i.map((function(e){try{return Cm.toASCII(e)}catch(a){return d.error=!0,e}})),p){var n=i.slice(0,i.length-1).join(".").length;(n.length>253||0===n.length)&&(d.error=!0);for(var r=0;r<i.length;++r)if(i.length>63||0===i.length){d.error=!0;break}}return d.error?null:i.join(".")},Tm.toUnicode=function(e,a){var t=Im(e,a,Am.NONTRANSITIONAL);return{domain:t.string,error:t.error}},Tm.PROCESSING_OPTIONS=Am,function(e){const a=d,t=Tm,p={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},i=Symbol("failure");function n(e){return a.ucs2.decode(e).length}function r(e,a){const t=e[a];return isNaN(t)?void 0:String.fromCodePoint(t)}function o(e){return e>=48&&e<=57}function s(e){return e>=65&&e<=90||e>=97&&e<=122}function l(e){return o(e)||e>=65&&e<=70||e>=97&&e<=102}function m(e){return"."===e||"%2e"===e.toLowerCase()}function c(e){return 2===e.length&&s(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function u(e){return void 0!==p[e]}function h(e){return u(e.scheme)}function v(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function f(e){return e<=31||e>126}const g=new Set([32,34,35,60,62,63,96,123,125]);function w(e){return f(e)||g.has(e)}const y=new Set([47,58,59,61,64,91,92,93,94,124]);function b(e){return w(e)||y.has(e)}function S(e,a){const t=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let t="";for(let e=0;e<a.length;++e)t+=v(a[e]);return t}(t):t}function _(e){let a=10;if(e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e)return 0;return(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?i:parseInt(e,a)}function E(e,p){if("["===e[0])return"]"!==e[e.length-1]?i:function(e){const t=[0,0,0,0,0,0,0,0];let p=0,d=null,n=0;if(58===(e=a.ucs2.decode(e))[n]){if(58!==e[n+1])return i;n+=2,++p,d=p}for(;n<e.length;){if(8===p)return i;if(58===e[n]){if(null!==d)return i;++n,++p,d=p;continue}let a=0,s=0;for(;s<4&&l(e[n]);)a=16*a+parseInt(r(e,n),16),++n,++s;if(46===e[n]){if(0===s)return i;if(n-=s,p>6)return i;let a=0;for(;void 0!==e[n];){let d=null;if(a>0){if(!(46===e[n]&&a<4))return i;++n}if(!o(e[n]))return i;for(;o(e[n]);){const a=parseInt(r(e,n));if(null===d)d=a;else{if(0===d)return i;d=10*d+a}if(d>255)return i;++n}t[p]=256*t[p]+d,++a,2!==a&&4!==a||++p}if(4!==a)return i;break}if(58===e[n]){if(++n,void 0===e[n])return i}else if(void 0!==e[n])return i;t[p]=a,++p}if(null!==d){let e=p-d;for(p=7;0!==p&&e>0;){const a=t[d+e-1];t[d+e-1]=t[p],t[p]=a,--p,--e}}else if(null===d&&8!==p)return i;return t}(e.substring(1,e.length-1));if(!p)return function(e){if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/)}(e))return i;let t="";const p=a.ucs2.decode(e);for(let e=0;e<p.length;++e)t+=S(p[e],f);return t}(e);const d=function(e){const a=new Buffer(e),t=[];for(let e=0;e<a.length;++e)37!==a[e]?t.push(a[e]):37===a[e]&&l(a[e+1])&&l(a[e+2])?(t.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):t.push(a[e]);return new Buffer(t).toString()}(e),n=t.toASCII(d,!1,t.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===n)return i;if(function(e){return-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/)}(n))return i;const s=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const t=[];for(const p of a){if(""===p)return e;const a=_(p);if(a===i)return e;t.push(a)}for(let e=0;e<t.length-1;++e)if(t[e]>255)return i;if(t[t.length-1]>=Math.pow(256,5-t.length))return i;let p=t.pop(),d=0;for(const e of t)p+=e*Math.pow(256,3-d),++d;return p}(n);return"number"==typeof s||s===i?s:n}function N(e){return"number"==typeof e?function(e){let a="",t=e;for(let e=1;e<=4;++e)a=String(t%256)+a,4!==e&&(a="."+a),t=Math.floor(t/256);return a}(e):e instanceof Array?"["+function(e){let a="";const t=function(e){let a=null,t=1,p=null,d=0;for(let i=0;i<e.length;++i)0!==e[i]?(d>t&&(a=p,t=d),p=null,d=0):(null===p&&(p=i),++d);return d>t&&(a=p,t=d),{idx:a,len:t}}(e),p=t.idx;let d=!1;for(let t=0;t<=7;++t)d&&0===e[t]||(d&&(d=!1),p!==t?(a+=e[t].toString(16),7!==t&&(a+=":")):(a+=0===t?"::":":",d=!0));return a}(e)+"]":e}function T(e){const a=e.path;0!==a.length&&("file"===e.scheme&&1===a.length&&function(e){return/^[A-Za-z]:$/.test(e)}(a[0])||a.pop())}function C(e){return""!==e.username||""!==e.password}function D(e,t,p,d,n){if(this.pointer=0,this.input=e,this.base=t||null,this.encodingOverride=p||"utf-8",this.stateOverride=n,this.url=d,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const r=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(r!==this.input&&(this.parseError=!0),this.input=r,this.state=n||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=a.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),t=this["parse "+this.state](e,a);if(!t)break;if(t===i){this.failure=!0;break}}}D.prototype["parse scheme start"]=function(e,a){if(s(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,i;this.state="no scheme",--this.pointer}return!0},D.prototype["parse scheme"]=function(e,a){if(function(e){return s(e)||o(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(h(this.url)&&!u(this.buffer))return!1;if(!h(this.url)&&u(this.buffer))return!1;if((C(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):h(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":h(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,i;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},D.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?i:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},D.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},D.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},D.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):h(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},D.prototype["parse relative slash"]=function(e){return!h(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},D.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},D.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},D.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=n(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const t=S(e,b);this.passwordTokenSeenFlag?this.url.password+=t:this.url.username+=t}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,i;this.pointer-=n(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},D.prototype["parse hostname"]=D.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e){if(--this.pointer,h(this.url)&&""===this.buffer)return this.parseError=!0,i;if(this.stateOverride&&""===this.buffer&&(C(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=E(this.buffer,h(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,i;const e=E(this.buffer,h(this.url));if(e===i)return i;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},D.prototype["parse port"]=function(e,a){if(o(e))this.buffer+=a;else{if(!(isNaN(e)||47===e||63===e||35===e||h(this.url)&&92===e||this.stateOverride))return this.parseError=!0,i;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,i;this.url.port=e===(t=this.url.scheme,p[t])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var t;return!0};const A=new Set([47,92,63,35]);D.prototype["parse file"]=function(e){var a,t;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=e,t=this.input[this.pointer+1],!s(a)||58!==t&&124!==t)||this.input.length-this.pointer-1>=2&&!A.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),T(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},D.prototype["parse file slash"]=function(e){return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(!function(e){return 2===e.length&&s(e.codePointAt(0))&&":"===e[1]}(this.base.path[0])?this.url.host=this.base.host:this.url.path.push(this.base.path[0])),this.state="path",--this.pointer),!0},D.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&c(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=E(this.buffer,h(this.url));if(e===i)return i;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},D.prototype["parse path start"]=function(e){return h(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},D.prototype["parse path"]=function(e){if(isNaN(e)||47===e||h(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(h(this.url)&&92===e&&(this.parseError=!0),".."===(a=(a=this.buffer).toLowerCase())||"%2e."===a||".%2e"===a||"%2e%2e"===a?(T(this.url),47===e||h(this.url)&&92===e||this.url.path.push("")):!m(this.buffer)||47===e||h(this.url)&&92===e?m(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&c(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=S(e,w);var a;return!0},D.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+S(e,f))),!0},D.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){h(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?this.url.query+=v(a[e]):this.url.query+=String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},D.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||l(this.input[this.pointer+1])&&l(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=S(e,f))),!0},e.exports.serializeURL=function(e,a){let t=e.scheme+":";if(null!==e.host?(t+="//",""===e.username&&""===e.password||(t+=e.username,""!==e.password&&(t+=":"+e.password),t+="@"),t+=N(e.host),null!==e.port&&(t+=":"+e.port)):null===e.host&&"file"===e.scheme&&(t+="//"),e.cannotBeABaseURL)t+=e.path[0];else for(const a of e.path)t+="/"+a;return null!==e.query&&(t+="?"+e.query),a||null===e.fragment||(t+="#"+e.fragment),t},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=N(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const t=new D(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return t.failure?"failure":t.url},e.exports.setTheUsername=function(e,t){e.username="";const p=a.ucs2.decode(t);for(let a=0;a<p.length;++a)e.username+=S(p[a],b)},e.exports.setThePassword=function(e,t){e.password="";const p=a.ucs2.decode(t);for(let a=0;a<p.length;++a)e.password+=S(p[a],b)},e.exports.serializeHost=N,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,t){return void 0===t&&(t={}),e.exports.basicURLParse(a,{baseURL:t.baseURL,encodingOverride:t.encodingOverride})}}(Nm);var Vm=Nm.exports;const Lm=Vm;Em.implementation=class{constructor(e){const a=e[0],t=e[1];let p=null;if(void 0!==t&&(p=Lm.basicURLParse(t),"failure"===p))throw new TypeError("Invalid base URL");const d=Lm.basicURLParse(a,{baseURL:p});if("failure"===d)throw new TypeError("Invalid URL");this._url=d}get href(){return Lm.serializeURL(this._url)}set href(e){const a=Lm.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return Lm.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){Lm.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){Lm.cannotHaveAUsernamePasswordPort(this._url)||Lm.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){Lm.cannotHaveAUsernamePasswordPort(this._url)||Lm.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?Lm.serializeHost(e.host):Lm.serializeHost(e.host)+":"+Lm.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||Lm.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":Lm.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||Lm.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":Lm.serializeInteger(this._url.port)}set port(e){Lm.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:Lm.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],Lm.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const t="?"===e[0]?e.substring(1):e;a.query="",Lm.basicURLParse(t,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",Lm.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}},function(e){const a=wm,t=_m,p=Em,d=t.implSymbol;function i(t){if(!this||this[d]||!(this instanceof i))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const p=[];for(let e=0;e<arguments.length&&e<2;++e)p[e]=arguments[e];p[0]=a.USVString(p[0]),void 0!==p[1]&&(p[1]=a.USVString(p[1])),e.exports.setup(this,p)}i.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const a=[];for(let e=0;e<arguments.length&&e<0;++e)a[e]=arguments[e];return this[d].toJSON.apply(this[d],a)},Object.defineProperty(i.prototype,"href",{get(){return this[d].href},set(e){e=a.USVString(e),this[d].href=e},enumerable:!0,configurable:!0}),i.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(i.prototype,"origin",{get(){return this[d].origin},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"protocol",{get(){return this[d].protocol},set(e){e=a.USVString(e),this[d].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"username",{get(){return this[d].username},set(e){e=a.USVString(e),this[d].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"password",{get(){return this[d].password},set(e){e=a.USVString(e),this[d].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"host",{get(){return this[d].host},set(e){e=a.USVString(e),this[d].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hostname",{get(){return this[d].hostname},set(e){e=a.USVString(e),this[d].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"port",{get(){return this[d].port},set(e){e=a.USVString(e),this[d].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"pathname",{get(){return this[d].pathname},set(e){e=a.USVString(e),this[d].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"search",{get(){return this[d].search},set(e){e=a.USVString(e),this[d].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(i.prototype,"hash",{get(){return this[d].hash},set(e){e=a.USVString(e),this[d].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[d]instanceof p.implementation,create(e,a){let t=Object.create(i.prototype);return this.setup(t,e,a),t},setup(e,a,i){i||(i={}),i.wrapper=e,e[d]=new p.implementation(a,i),e[d][t.wrapperSymbol]=e},interface:i,expose:{Window:{URL:i},Worker:{URL:i}}}}(fm);var Bm=fm.exports;vm.URL=Bm.interface,vm.serializeURL=Vm.serializeURL,vm.serializeURLOrigin=Vm.serializeURLOrigin,vm.basicURLParse=Vm.basicURLParse,vm.setTheUsername=Vm.setTheUsername,vm.setThePassword=Vm.setThePassword,vm.serializeHost=Vm.serializeHost,vm.serializeInteger=Vm.serializeInteger,vm.parseURL=Vm.parseURL;const jm=a.Readable,Km=Symbol("buffer"),Um=Symbol("type");class Fm{constructor(){this[Um]="";const e=arguments[0],a=arguments[1],t=[];let p=0;if(e){const a=e,d=Number(a.length);for(let e=0;e<d;e++){const d=a[e];let i;i=d instanceof Buffer?d:ArrayBuffer.isView(d)?Buffer.from(d.buffer,d.byteOffset,d.byteLength):d instanceof ArrayBuffer?Buffer.from(d):d instanceof Fm?d[Km]:Buffer.from("string"==typeof d?d:String(d)),p+=i.length,t.push(i)}}this[Km]=Buffer.concat(t);let d=a&&void 0!==a.type&&String(a.type).toLowerCase();d&&!/[^\u0020-\u007E]/.test(d)&&(this[Um]=d)}get size(){return this[Km].length}get type(){return this[Um]}text(){return Promise.resolve(this[Km].toString())}arrayBuffer(){const e=this[Km],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new jm;return e._read=function(){},e.push(this[Km]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,a=arguments[0],t=arguments[1];let p,d;p=void 0===a?0:a<0?Math.max(e+a,0):Math.min(a,e),d=void 0===t?e:t<0?Math.max(e+t,0):Math.min(t,e);const i=Math.max(d-p,0),n=this[Km].slice(p,p+i),r=new Fm([],{type:arguments[2]});return r[Km]=n,r}}function $m(e,a,t){Error.call(this,e),this.message=e,this.type=a,t&&(this.code=this.errno=t.code),Error.captureStackTrace(this,this.constructor)}let Hm;Object.defineProperties(Fm.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(Fm.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),$m.prototype=Object.create(Error.prototype),$m.prototype.constructor=$m,$m.prototype.name="FetchError";try{Hm=require("encoding").convert}catch(jd){}const zm=Symbol("Body internals"),qm=a.PassThrough;function Wm(e){var t=this,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=p.size;let i=void 0===d?0:d;var n=p.timeout;let r=void 0===n?0:n;null==e?e=null:Ym(e)?e=Buffer.from(e.toString()):Jm(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof a||(e=Buffer.from(String(e)))),this[zm]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=r,e instanceof a&&e.on("error",(function(e){const a="AbortError"===e.name?e:new $m(`Invalid response body while trying to fetch ${t.url}: ${e.message}`,"system",e);t[zm].error=a}))}function Gm(){var e=this;if(this[zm].disturbed)return Wm.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[zm].disturbed=!0,this[zm].error)return Wm.Promise.reject(this[zm].error);let t=this.body;if(null===t)return Wm.Promise.resolve(Buffer.alloc(0));if(Jm(t)&&(t=t.stream()),Buffer.isBuffer(t))return Wm.Promise.resolve(t);if(!(t instanceof a))return Wm.Promise.resolve(Buffer.alloc(0));let p=[],d=0,i=!1;return new Wm.Promise((function(a,n){let r;e.timeout&&(r=setTimeout((function(){i=!0,n(new $m(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),t.on("error",(function(a){"AbortError"===a.name?(i=!0,n(a)):n(new $m(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))})),t.on("data",(function(a){if(!i&&null!==a){if(e.size&&d+a.length>e.size)return i=!0,void n(new $m(`content size at ${e.url} over limit: ${e.size}`,"max-size"));d+=a.length,p.push(a)}})),t.on("end",(function(){if(!i){clearTimeout(r);try{a(Buffer.concat(p,d))}catch(a){n(new $m(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}}))}))}function Ym(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function Jm(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function Zm(e){let t,p,d=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return d instanceof a&&"function"!=typeof d.getBoundary&&(t=new qm,p=new qm,d.pipe(t),d.pipe(p),e[zm].body=t,d=p),d}function Xm(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":Ym(e)?"application/x-www-form-urlencoded;charset=UTF-8":Jm(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof a?null:"text/plain;charset=UTF-8"}function Qm(e){const a=e.body;return null===a?0:Jm(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}Wm.prototype={get body(){return this[zm].body},get bodyUsed(){return this[zm].disturbed},arrayBuffer(){return Gm.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return Gm.call(this).then((function(a){return Object.assign(new Fm([],{type:e.toLowerCase()}),{[Km]:a})}))},json(){var e=this;return Gm.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return Wm.Promise.reject(new $m(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return Gm.call(this).then((function(e){return e.toString()}))},buffer(){return Gm.call(this)},textConverted(){var e=this;return Gm.call(this).then((function(a){return function(e,a){if("function"!=typeof Hm)throw new Error("The package `encoding` must be installed to use the textConverted() function");const t=a.get("content-type");let p,d,i="utf-8";t&&(p=/charset=([^;]*)/i.exec(t));d=e.slice(0,1024).toString(),!p&&d&&(p=/<meta.+?charset=(['"])(.+?)\1/i.exec(d));!p&&d&&(p=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(d),p||(p=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(d),p&&p.pop()),p&&(p=/charset=(.*)/i.exec(p.pop())));!p&&d&&(p=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(d));p&&(i=p.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030"));return Hm(e,"UTF-8",i).toString()}(a,e.headers)}))}},Object.defineProperties(Wm.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),Wm.mixIn=function(e){for(const a of Object.getOwnPropertyNames(Wm.prototype))if(!(a in e)){const t=Object.getOwnPropertyDescriptor(Wm.prototype,a);Object.defineProperty(e,a,t)}},Wm.Promise=global.Promise;const ec=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,ac=/[^\t\x20-\x7e\x80-\xff]/;function tc(e){if(e=`${e}`,ec.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function pc(e){if(e=`${e}`,ac.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function dc(e,a){a=a.toLowerCase();for(const t in e)if(t.toLowerCase()===a)return t}const ic=Symbol("map");class nc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[ic]=Object.create(null),e instanceof nc){const a=e.raw(),t=Object.keys(a);for(const e of t)for(const t of a[e])this.append(e,t)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw new TypeError("Header pairs must be iterable");const t=[];for(const a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw new TypeError("Each header pair must be iterable");t.push(Array.from(a))}for(const e of t){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const a of Object.keys(e)){const t=e[a];this.append(a,t)}}}}get(e){tc(e=`${e}`);const a=dc(this[ic],e);return void 0===a?null:this[ic][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,t=rc(this),p=0;for(;p<t.length;){var d=t[p];const i=d[0],n=d[1];e.call(a,n,i,this),t=rc(this),p++}}set(e,a){a=`${a}`,tc(e=`${e}`),pc(a);const t=dc(this[ic],e);this[ic][void 0!==t?t:e]=[a]}append(e,a){a=`${a}`,tc(e=`${e}`),pc(a);const t=dc(this[ic],e);void 0!==t?this[ic][t].push(a):this[ic][e]=[a]}has(e){return tc(e=`${e}`),void 0!==dc(this[ic],e)}delete(e){tc(e=`${e}`);const a=dc(this[ic],e);void 0!==a&&delete this[ic][a]}raw(){return this[ic]}keys(){return sc(this,"key")}values(){return sc(this,"value")}[Symbol.iterator](){return sc(this,"key+value")}}function rc(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";return Object.keys(e[ic]).sort().map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[ic][a].join(", ")}:function(a){return[a.toLowerCase(),e[ic][a].join(", ")]})}nc.prototype.entries=nc.prototype[Symbol.iterator],Object.defineProperty(nc.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(nc.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const oc=Symbol("internal");function sc(e,a){const t=Object.create(lc);return t[oc]={target:e,kind:a,index:0},t}const lc=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==lc)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[oc];const a=e.target,t=e.kind,p=e.index,d=rc(a,t);return p>=d.length?{value:void 0,done:!0}:(this[oc].index=p+1,{value:d[p],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function mc(e){const a=Object.assign({__proto__:null},e[ic]),t=dc(e[ic],"Host");return void 0!==t&&(a[t]=a[t][0]),a}Object.defineProperty(lc,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const cc=Symbol("Response internals"),uc=t.STATUS_CODES;class hc{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Wm.call(this,e,a);const t=a.status||200,p=new nc(a.headers);if(null!=e&&!p.has("Content-Type")){const a=Xm(e);a&&p.append("Content-Type",a)}this[cc]={url:a.url,status:t,statusText:a.statusText||uc[t],headers:p,counter:a.counter}}get url(){return this[cc].url||""}get status(){return this[cc].status}get ok(){return this[cc].status>=200&&this[cc].status<300}get redirected(){return this[cc].counter>0}get statusText(){return this[cc].statusText}get headers(){return this[cc].headers}clone(){return new hc(Zm(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}Wm.mixIn(hc.prototype),Object.defineProperties(hc.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(hc.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const vc=Symbol("Request internals"),fc=p.URL||vm.URL,gc=p.parse,wc=p.format;function yc(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new fc(e).toString()),gc(e)}const bc="destroy"in a.Readable.prototype;function Sc(e){return"object"==typeof e&&"object"==typeof e[vc]}class _c{constructor(e){let a,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};Sc(e)?a=yc(e.url):(a=e&&e.href?yc(e.href):yc(`${e}`),e={});let p=t.method||e.method||"GET";if(p=p.toUpperCase(),(null!=t.body||Sc(e)&&null!==e.body)&&("GET"===p||"HEAD"===p))throw new TypeError("Request with GET/HEAD method cannot have body");let d=null!=t.body?t.body:Sc(e)&&null!==e.body?Zm(e):null;Wm.call(this,d,{timeout:t.timeout||e.timeout||0,size:t.size||e.size||0});const i=new nc(t.headers||e.headers||{});if(null!=d&&!i.has("Content-Type")){const e=Xm(d);e&&i.append("Content-Type",e)}let n=Sc(e)?e.signal:null;if("signal"in t&&(n=t.signal),null!=n&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(n))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[vc]={method:p,redirect:t.redirect||e.redirect||"follow",headers:i,parsedURL:a,signal:n},this.follow=void 0!==t.follow?t.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==t.compress?t.compress:void 0===e.compress||e.compress,this.counter=t.counter||e.counter||0,this.agent=t.agent||e.agent}get method(){return this[vc].method}get url(){return wc(this[vc].parsedURL)}get headers(){return this[vc].headers}get redirect(){return this[vc].redirect}get signal(){return this[vc].signal}clone(){return new _c(this)}}function Ec(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}Wm.mixIn(_c.prototype),Object.defineProperty(_c.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(_c.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),Ec.prototype=Object.create(Error.prototype),Ec.prototype.constructor=Ec,Ec.prototype.name="AbortError";const Nc=p.URL||vm.URL,Tc=a.PassThrough;function Cc(e,p){if(!Cc.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return Wm.Promise=Cc.Promise,new Cc.Promise((function(d,r){const o=new _c(e,p),s=function(e){const t=e[vc].parsedURL,p=new nc(e[vc].headers);if(p.has("Accept")||p.set("Accept","*/*"),!t.protocol||!t.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(t.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof a.Readable&&!bc)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let d=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(d="0"),null!=e.body){const a=Qm(e);"number"==typeof a&&(d=String(a))}d&&p.set("Content-Length",d),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(t)),p.has("Connection")||i||p.set("Connection","close"),Object.assign({},t,{method:e.method,headers:mc(p),agent:i})}(o),l=("https:"===s.protocol?i:t).request,m=o.signal;let c=null;const u=function(){let e=new Ec("The user aborted a request.");r(e),o.body&&o.body instanceof a.Readable&&Dc(o.body,e),c&&c.body&&c.body.emit("error",e)};if(m&&m.aborted)return void u();const h=function(){u(),g()},v=l(s);let f;function g(){v.abort(),m&&m.removeEventListener("abort",h),clearTimeout(f)}m&&m.addEventListener("abort",h),o.timeout&&v.once("socket",(function(e){f=setTimeout((function(){r(new $m(`network timeout at: ${o.url}`,"request-timeout")),g()}),o.timeout)})),v.on("error",(function(e){r(new $m(`request to ${o.url} failed, reason: ${e.message}`,"system",e)),c&&c.body&&Dc(c.body,e),g()})),function(e,a){let t;e.on("socket",(function(e){t=e})),e.on("response",(function(e){const p=e.headers;"chunked"!==p["transfer-encoding"]||p["content-length"]||e.once("close",(function(e){if(t&&t.listenerCount("data")>0&&!e){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",a(e)}}))}))}(v,(function(e){m&&m.aborted||c&&c.body&&Dc(c.body,e)})),parseInt(process.version.substring(1))<14&&v.on("socket",(function(e){e.addListener("close",(function(a){const t=e.listenerCount("data")>0;if(c&&t&&!a&&(!m||!m.aborted)){const e=new Error("Premature close");e.code="ERR_STREAM_PREMATURE_CLOSE",c.body.emit("error",e)}}))})),v.on("response",(function(e){clearTimeout(f);const a=function(e){const a=new nc;for(const t of Object.keys(e))if(!ec.test(t))if(Array.isArray(e[t]))for(const p of e[t])ac.test(p)||(void 0===a[ic][t]?a[ic][t]=[p]:a[ic][t].push(p));else ac.test(e[t])||(a[ic][t]=[e[t]]);return a}(e.headers);if(Cc.isRedirect(e.statusCode)){const p=a.get("Location");let i=null;try{i=null===p?null:new Nc(p,o.url).toString()}catch(e){if("manual"!==o.redirect)return r(new $m(`uri requested responds with an invalid redirect URL: ${p}`,"invalid-redirect")),void g()}switch(o.redirect){case"error":return r(new $m(`uri requested responds with a redirect, redirect mode is set to error: ${o.url}`,"no-redirect")),void g();case"manual":if(null!==i)try{a.set("Location",i)}catch(e){r(e)}break;case"follow":if(null===i)break;if(o.counter>=o.follow)return r(new $m(`maximum redirect reached at: ${o.url}`,"max-redirect")),void g();const p={headers:new nc(o.headers),follow:o.follow,counter:o.counter+1,agent:o.agent,compress:o.compress,method:o.method,body:o.body,signal:o.signal,timeout:o.timeout,size:o.size};if(!function(e,a){const t=new Nc(a).hostname,p=new Nc(e).hostname;return t===p||"."===t[t.length-p.length-1]&&t.endsWith(p)}(o.url,i)||(t=o.url,new Nc(i).protocol!==new Nc(t).protocol))for(const e of["authorization","www-authenticate","cookie","cookie2"])p.headers.delete(e);return 303!==e.statusCode&&o.body&&null===Qm(o)?(r(new $m("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void g()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==o.method)||(p.method="GET",p.body=void 0,p.headers.delete("content-length")),d(Cc(new _c(i,p))),void g())}}var t;e.once("end",(function(){m&&m.removeEventListener("abort",h)}));let p=e.pipe(new Tc);const i={url:o.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:o.size,timeout:o.timeout,counter:o.counter},s=a.get("Content-Encoding");if(!o.compress||"HEAD"===o.method||null===s||204===e.statusCode||304===e.statusCode)return c=new hc(p,i),void d(c);const l={flush:n.Z_SYNC_FLUSH,finishFlush:n.Z_SYNC_FLUSH};if("gzip"==s||"x-gzip"==s)return p=p.pipe(n.createGunzip(l)),c=new hc(p,i),void d(c);if("deflate"==s||"x-deflate"==s){const a=e.pipe(new Tc);return a.once("data",(function(e){p=8==(15&e[0])?p.pipe(n.createInflate()):p.pipe(n.createInflateRaw()),c=new hc(p,i),d(c)})),void a.on("end",(function(){c||(c=new hc(p,i),d(c))}))}if("br"==s&&"function"==typeof n.createBrotliDecompress)return p=p.pipe(n.createBrotliDecompress()),c=new hc(p,i),void d(c);c=new hc(p,i),d(c)})),function(e,a){const t=a.body;null===t?e.end():Jm(t)?t.stream().pipe(e):Buffer.isBuffer(t)?(e.write(t),e.end()):t.pipe(e)}(v,o)}))}function Dc(e,a){e.destroy?e.destroy(a):(e.emit("error",a),e.end())}Cc.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},Cc.Promise=global.Promise;var Ac=_(Object.freeze({__proto__:null,FetchError:$m,Headers:nc,Request:_c,Response:hc,default:Cc}));!function(e,a){const t=Ac,p=t.default||t,d=function(e,a){return/^\/\//.test(e)&&(e="https:"+e),p.call(this,e,a)};d.ponyfill=!0,e.exports=a=d,a.fetch=d,a.Headers=t.Headers,a.Request=t.Request,a.Response=t.Response,a.default=d}(hm,hm.exports);var kc=S(hm.exports);let Oc=1;const xc=e=>new Promise((a=>{setTimeout((()=>{a(!0)}),e)})),Rc=({checkInstallationOnAllCalls:a=!1,communicationLayerPreference:t,injectProvider:p,shouldShimWeb3:d,platformManager:i,installer:n,sdk:r,remoteConnection:o,debug:s})=>e(void 0,void 0,void 0,(function*(){var l,m;const c=(({name:e,remoteConnection:a})=>{if(!a||!(null==a?void 0:a.getConnector()))throw new Error("Missing remote connection parameter");return new um({name:e,remote:null==a?void 0:a.getConnector(),deeplinkProtocol:null==a?void 0:a.state.deeplinkProtocol,platformManager:null==a?void 0:a.getPlatformManager()})})({name:El.INPAGE,target:El.CONTENT_SCRIPT,platformManager:i,communicationLayerPreference:t,remoteConnection:o}),u=i.getPlatformType(),h=r.options.dappMetadata,v=`Sdk/Javascript SdkVersion/${Nl.version} Platform/${u} dApp/${null!==(l=h.url)&&void 0!==l?l:h.name} dAppTitle/${h.name}`;let f=null,g=null;const w=null===(m=r.options.storage)||void 0===m?void 0:m.storageManager;if(w){try{const e=yield w.getCachedAccounts();e.length>0&&(f=e[0])}catch(e){console.error(`[initializeMobileProvider] failed to get cached addresses: ${e}`)}try{const e=yield w.getCachedChainId();e&&(g=e)}catch(e){console.error(`[initializeMobileProvider] failed to parse cached chainId: ${e}`)}}ss(`[initializeMobileProvider] cachedAccountAddress: ${f}, cachedChainId: ${g}`);const y=!(!p||u===Qd.NonBrowser||u===Qd.ReactNative),b=mm.init({shouldSetOnWindow:y,connectionStream:c,shouldShimWeb3:d,sdkInstance:r});let S=!1;const _=e=>{S=e},E=()=>S,N=(t,p,d,s)=>e(void 0,void 0,void 0,(function*(){var l,m,c,u,h,y,b,N,T;const C=mm.getProvider();if(S){C.emit("display_uri",(null==o?void 0:o.state.qrcodeLink)||""),null==o||o.showActiveModal();let e=E();for(;e;){const a=E(),t=null==o?void 0:o.isAuthorized();e=a&&!t,ss(`[initializeMobileProvider: sendRequest()] waiting for initialization to complete - initializing: ${a} authorized: ${t}`),yield xc(1e3)}return ss("[initializeMobileProvider: sendRequest()] initial method completed -- prevent installation and call provider"),d(...p)}const D=i.isMetaMaskInstalled(),A=null==o?void 0:o.isConnected();let k=null,O=null,x=null;if(k=null!==(l=C.getSelectedAddress())&&void 0!==l?l:f,x=C.getChainId()||g,k&&w&&k!==f&&w.persistAccounts([k]).catch((e=>{console.error(`[initializeMobileProvider] failed to persist account: ${e}`)})),x&&(g=x,w&&w.persistChainId(x).catch((e=>{console.error(`[initializeMobileProvider] failed to persist chainId: ${e}`)}))),ss("[initializeMobileProvider: sendRequest()]",{selectedAddress:k,chainId:x}),s&&ss(`[initializeMobileProvider: sendRequest()] method=${t} ongoing=${S} selectedAddress=${k} isInstalled=${D} checkInstallationOnAllCalls=${a} socketConnected=${A}`),k&&t.toLowerCase()===Ns.ETH_ACCOUNTS.toLowerCase())return[k];if(x&&t.toLowerCase()===Ns.ETH_CHAINID.toLowerCase())return x;const R=[Ns.ETH_REQUESTACCOUNTS,Ns.WALLET_REQUESTPERMISSIONS,Ns.METAMASK_CONNECTSIGN,Ns.METAMASK_CONNECTWITH],M=!Ts[t],P=null===(m=r.options.readonlyRPCMap)||void 0===m?void 0:m[x];if(P&&M)try{const a=null===(c=null==p?void 0:p[0])||void 0===c?void 0:c.params,d=yield(({rpcEndpoint:a,method:t,sdkInfo:p,params:d})=>e(void 0,void 0,void 0,(function*(){const e=JSON.stringify({jsonrpc:"2.0",method:t,params:d,id:(Oc+=1,Oc)}),i={Accept:"application/json","Content-Type":"application/json"};let n;a.includes("infura")&&(i["Metamask-Sdk-Info"]=p);try{n=yield kc(a,{method:"POST",headers:i,body:e})}catch(e){throw e instanceof Error?new Error(`Failed to fetch from RPC: ${e.message}`):new Error(`Failed to fetch from RPC: ${e}`)}if(!n.ok)throw new Error(`Server responded with a status of ${n.status}`);return(yield n.json()).result})))({rpcEndpoint:P,sdkInfo:v,method:t,params:a||[]});return s&&ss(`initializeProvider::ReadOnlyRPCResponse ${d}`),d}catch(e){console.warn(`[initializeMobileProvider: sendRequest()] method=${t} readOnlyRPCRequest failed:`,e)}if((!D||D&&!A)&&t!==Ns.METAMASK_GETPROVIDERSTATE){const s=(null===(u=null==p?void 0:p[0])||void 0===u?void 0:u.params)||[];if(-1!==R.indexOf(t)||a){_(!0);const a=t===Ns.METAMASK_CONNECTWITH,i=`${Date.now()}`;try{yield n.start({wait:!1,connectWith:a?{method:t,id:i,params:s}:void 0}),yield new Promise(((e,a)=>{(null==o?void 0:o.isAuthorized())&&(ss("[initializeMobileProvider: sendRequest()] already authorized"),e(!0)),null==o||o.getConnector().once(Pd.AUTHORIZED,(()=>{e(!0)})),r.once(Pd.PROVIDER_UPDATE,(e=>{ss(`[initializeMobileProvider: sendRequest()] PROVIDER_UPDATE --- remote provider request interupted type=${e}`),e===xl.EXTENSION?a(Pd.PROVIDER_UPDATE):a(new Error("Connection Terminated"))}))}))}catch(a){if(xl.EXTENSION===a){if(ss(`[initializeMobileProvider: sendRequest()] extension provider detect: re-create ${t} on the active provider`),t.toLowerCase()===Ns.METAMASK_CONNECTSIGN.toLowerCase()){const e=yield null===(h=r.getProvider())||void 0===h?void 0:h.request({method:Ns.ETH_REQUESTACCOUNTS,params:[]});if(!e.length)throw new Error("SDK state invalid -- undefined accounts");const a=yield null===(y=r.getProvider())||void 0===y?void 0:y.request({method:Ns.PERSONAL_SIGN,params:[s[0],e[0]]});return r.emit(Ol.ConnectWithResponse,a),a}if(t.toLowerCase()===Ns.METAMASK_CONNECTWITH.toLowerCase()){const[a]=s,t=yield(({method:a,sdk:t,params:p})=>e(void 0,void 0,void 0,(function*(){var e,d,i,n;if(!t.isExtensionActive())throw new Error("SDK state invalid -- extension is not active");ss("[MetaMaskProvider: extensionConnectWithOverwrite()] Overwriting request method",a,p);const r=yield null===(e=t.getProvider())||void 0===e?void 0:e.request({method:Ns.ETH_REQUESTACCOUNTS,params:[]});if(!r.length)throw new Error("SDK state invalid -- undefined accounts");if((null==a?void 0:a.toLowerCase())===Ns.PERSONAL_SIGN.toLowerCase()){const e={method:a,params:[p[0],r[0]]};return yield null===(d=t.getProvider())||void 0===d?void 0:d.request(e)}if((null==a?void 0:a.toLowerCase())===Ns.ETH_SENDTRANSACTION.toLowerCase()){const e={method:a,params:[Object.assign(Object.assign({},p[0]),{from:r[0]})]};return yield null===(i=t.getProvider())||void 0===i?void 0:i.request(e)}return Ds.includes(a.toLowerCase())?(console.warn(`MetaMaskSDK connectWith method=${a} -- not handled by the extension -- call separately`),r):yield null===(n=t.getProvider())||void 0===n?void 0:n.request({method:a,params:p})})))({method:a.method,sdk:r,params:a.params});return r.emit(Ol.ConnectWithResponse,t),t}return ss(`[initializeMobileProvider: sendRequest()] sending '${t}' on active provider`,s),yield null===(b=r.getProvider())||void 0===b?void 0:b.request({method:t,params:s})}if(a===Pd.REJECTED)throw null==o||o.closeModal(),null===(N=r.getProvider())||void 0===N||N.handleDisconnect({terminate:!1}),Object.assign(new Error("User rejected connection"),{code:4001});throw ss(`[initializeMobileProvider: sendRequest()] failed to start installer: ${a}`),a}finally{_(!1)}if(t===Ns.ETH_REQUESTACCOUNTS)return O=yield new Promise((e=>{const a=setInterval((()=>{const{accounts:t}=C.getState();t&&(clearInterval(a),e(t))}),100)})),ss(`[initializeMobileProvider: sendRequest()] selectedAddress: ${k} --- SKIP rpc call`),O;if(t===Ns.METAMASK_CONNECTWITH)try{let e=0;const a=5,t=({resolve:t,reject:p})=>{e+=1;const d=null==o?void 0:o.getConnector().getRPCMethodTracker(),n=null==d?void 0:d[i];return ss(`TRACKER: update method ${i}`,n),(null==n?void 0:n.result)?(ss("[initializeMobileProvider: sendRequest()] found result",n.result),r.emit(Ol.ConnectWithResponse,n.result),void t(n.result)):(null==n?void 0:n.error)?(ss("[initializeMobileProvider: sendRequest()] found error",n.error),void p(n.error)):e>=a?(ss("[initializeMobileProvider: sendRequest()] max message count reached without result"),void p(new Error("Max message count reached without result"))):void ss("[initializeMobileProvider: sendRequest()] not found yet, need to wait for next update")};let p,d;const n=yield new Promise(((e,a)=>{const n=null==o?void 0:o.getConnector().getRPCMethodTracker();ss(`TRACKER: method ${i}`,n),(null==n?void 0:n[i].result)?(ss("[initializeMobileProvider: sendRequest()] found result",null==n?void 0:n[i].result),e(null==n?void 0:n[i].result)):(null==n?void 0:n[i].error)&&(ss("[initializeMobileProvider: sendRequest()] found error",null==n?void 0:n[i].error),a(null==n?void 0:n[i].error)),d=()=>t({resolve:e,reject:a}),p=null==o?void 0:o.getConnector().on(Pd.RPC_UPDATE,d)}));return d&&(null==p||p.off(Pd.RPC_UPDATE,d)),ss("TRACKER: result",n),n}catch(e){throw ss("[initializeMobileProvider: sendRequest()] error:",e),e}p[0]&&"object"==typeof p[0]&&(p[0].params={__triggeredInstaller:!0,wrappedParams:p[0].params});return d(...p)}if(i.isSecure()&&Ts[t])return d(...p);if(r.isExtensionActive())return ss(`[initializeMobileProvider: sendRequest()] EXTENSION active - redirect request '${t}' to it`,p,s),yield null===(T=r.getProvider())||void 0===T?void 0:T.request({method:t,params:s});throw ss(`[initializeMobileProvider: sendRequest()] method=${t} --- skip --- not connected/installed`),new Error("MetaMask is not connected/installed, please call eth_requestAccounts to connect first.")}try{const e=yield d(...p);if(ss(`[initializeMobileProvider: sendRequest()] method=${t} rpcResponse`,e),t===Ns.WALLET_REQUESTPERMISSIONS){const a=e.reduce(((e,a)=>{var t;if("eth_accounts"===a.parentCapability){const p=null===(t=a.caveats.find((e=>"restrictReturnedAccounts"===e.type)))||void 0===t?void 0:t.value;p&&e.push(...p)}return e}),[]);ss("[initializeMobileProvider: sendRequest()] accountsToPersist:",a),a.length>0&&(C.handleAccountsChanged(a,!1),null==w||w.persistAccounts(a))}return e}catch(e){throw console.error("[initializeMobileProvider: sendRequest()] error:",e),e}})),{request:T}=b;b.request=(...a)=>e(void 0,void 0,void 0,(function*(){return N(null==a?void 0:a[0].method,a,T,s)}));const{send:C}=b;return b.send=(...a)=>e(void 0,void 0,void 0,(function*(){return N(null==a?void 0:a[0],a,C,s)})),ss("[initializeMobileProvider: sendRequest()] metamaskStream.start()"),c.start(),b}));function Mc(a){var t,p,d,i;return e(this,void 0,void 0,(function*(){const{options:e}=a,n={communicationLayerPreference:null!==(t=e.communicationLayerPreference)&&void 0!==t?t:Xd.SOCKET,platformManager:a.platformManager,sdk:a,checkInstallationOnAllCalls:e.checkInstallationOnAllCalls,injectProvider:null===(p=e.injectProvider)||void 0===p||p,shouldShimWeb3:null===(d=e.shouldShimWeb3)||void 0===d||d,extensionOnly:null===(i=e.extensionOnly)||void 0===i||i,installer:a.installer,remoteConnection:a.remoteConnection,debug:a.debug},r=yield Rc(n);a.activeProvider=r,function(e){var a,t,p,d;null===(t=null===(a=e.remoteConnection)||void 0===a?void 0:a.getConnector())||void 0===t||t.on(Ol.ConnectionStatus,(a=>{e.emit(Ol.ConnectionStatus,a)})),null===(d=null===(p=e.remoteConnection)||void 0===p?void 0:p.getConnector())||void 0===d||d.on(Ol.ServiceStatus,(a=>{e.emit(Ol.ServiceStatus,a)}))}(a)}))}const Pc="sdk";class Ic{constructor({serverUrl:e,enabled:a,originatorInfo:t}){this.serverURL=Dd,this.serverURL=e,this.originatorInfo=t,this.enabled=null==a||a}send({event:e,params:a}){if(!this.enabled)return;const t=Object.assign(Object.assign({id:Pc,event:e,sdkVersion:Nl.version},this.originatorInfo),{params:a});ss(`[Analytics: send()] event: ${e}`,t),Nd(t,this.serverURL).catch((e=>{ss(`[Analytics: send()] error: ${e}`)}))}}const Vc=()=>{if("undefined"==typeof document)return;let e;const a=document.getElementsByTagName("link");for(let t=0;t<a.length;t++)"icon"!==a[t].getAttribute("rel")&&"shortcut icon"!==a[t].getAttribute("rel")||(e=a[t].getAttribute("href"));return e},Lc=163400;function Bc(e){var a,t,p;const{dappMetadata:d}=e,i=function({url:e,name:a}){var t;const p=e+a,d=lm(p);if(!localStorage)return"";let i=null!==(t=localStorage.getItem(d))&&void 0!==t?t:"";if(!i){i=h();try{localStorage.setItem(d,i)}catch(e){return""}}return i}({url:null!==(a=null==d?void 0:d.url)&&void 0!==a?a:"no_url",name:null!==(t=null==d?void 0:d.name)&&void 0!==t?t:"no_name"}),n=null===(p=e.platformManager)||void 0===p?void 0:p.getPlatformType(),r=n===Qd.DesktopWeb,o=n===Qd.MetaMaskMobileWebview;let s="N/A";return r?s="extension":o&&(s="mobile"),{id:i,from:s}}const jc=({provider:a,sdkInstance:t})=>{if("state"in a)throw new Error("INVALID EXTENSION PROVIDER");return new Proxy(a,{get:(p,d)=>"request"===d?function(a){var d,i;return e(this,void 0,void 0,(function*(){ss("[wrapExtensionProvider()] Overwriting request method",a);const{method:n,params:r}=a,o=Cs.includes(n.toLowerCase()),{id:s,from:l}=Bc(t);if(o&&(null===(d=t.analytics)||void 0===d||d.send({event:Bd.SDK_RPC_REQUEST,params:{method:n,from:l,id:s}})),n===Ns.METAMASK_BATCH&&Array.isArray(r))return(({target:a,args:t,trackEvent:p,sdkInstance:d})=>e(void 0,void 0,void 0,(function*(){var e,i;if("metamask_batch"!==t.method)throw new Error("Invalid usage");const n=[],r=null!==(e=null==t?void 0:t.params)&&void 0!==e?e:[];for(const e of r){const t=yield null==a?void 0:a.request({method:e.method,params:e.params});n.push(t)}const{id:o,from:s}=Bc(d);return p&&(null===(i=d.analytics)||void 0===i||i.send({event:Bd.SDK_RPC_REQUEST_DONE,params:{method:t.method,from:s,id:o}})),n})))({target:p,args:a,trackEvent:o,sdkInstance:t});if(n.toLowerCase()===Ns.METAMASK_CONNECTSIGN.toLowerCase()&&Array.isArray(r))return(({target:a,params:t})=>e(void 0,void 0,void 0,(function*(){const e=yield a.request({method:Ns.ETH_REQUESTACCOUNTS,params:[]});if(!e.length)throw new Error("SDK state invalid -- undefined accounts");return yield a.request({method:Ns.PERSONAL_SIGN,params:[t[0],e[0]]})})))({target:p,params:r});if(n.toLowerCase()===Ns.METAMASK_CONNECTWITH.toLowerCase()&&Array.isArray(r))return(({target:a,params:t})=>e(void 0,void 0,void 0,(function*(){const[e]=t,p=e.method,d=e.params,i=yield a.request({method:Ns.ETH_REQUESTACCOUNTS,params:[]});if(!i.length)throw new Error("SDK state invalid -- undefined accounts");return(null==p?void 0:p.toLowerCase())===Ns.PERSONAL_SIGN.toLowerCase()?yield a.request({method:p,params:[d[0],i[0]]}):(null==p?void 0:p.toLowerCase())===Ns.ETH_SENDTRANSACTION.toLowerCase()?yield a.request({method:p,params:[Object.assign(Object.assign({},d[0]),{from:i[0]})]}):Ds.includes(p.toLowerCase())?(console.warn(`MetaMaskSDK connectWith method=${p} -- not handled by the extension -- call separately`),i):yield a.request({method:p,params:d})})))({target:p,params:r});let m;try{return m=yield p.request(a),m}finally{o&&(null===(i=t.analytics)||void 0===i||i.send({event:Bd.SDK_RPC_REQUEST_DONE,params:{method:n,from:l,id:s}}))}}))}:"getChainId"===d?function(){return a.chainId}:"getNetworkVersion"===d?function(){return a.networkVersion}:"getSelectedAddress"===d?function(){return a.selectedAddress}:"isConnected"===d?function(){return a._state.isConnected}:p[d]})};var Kc;function Uc({mustBeMetaMask:a,sdkInstance:t}){return e(this,void 0,void 0,(function*(){if("undefined"==typeof window)throw new Error("window not available");try{const e=yield new Promise(((e,a)=>{const t=setTimeout((()=>{a(new Error("eip6963RequestProvider timed out"))}),500);window.addEventListener(Kc.Announce,(a=>{const p=a,{detail:{info:d,provider:i}={}}=p,{name:n,rdns:r,uuid:o}=null!=d?d:{};kl.test(o)&&n.startsWith(Al.NAME)&&r===Al.RDNS&&(clearTimeout(t),e(i))})),window.dispatchEvent(new Event(Kc.Request))}));return jc({provider:e,sdkInstance:t})}catch(e){if(!a&&window.ethereum)return jc({provider:window.ethereum,sdkInstance:t});throw new Error("Provider not found")}}))}!function(e){e.Announce="eip6963:announceProvider",e.Request="eip6963:requestProvider"}(Kc||(Kc={}));const Fc=a=>e(void 0,void 0,void 0,(function*(){const{options:e}=a,{infuraAPIKey:t}=e;if(!t)return;const p={"0x1":`https://mainnet.infura.io/v3/${t}`,"0x5":`https://goerli.infura.io/v3/${t}`,"0xaa36a7":`https://sepolia.infura.io/v3/${t}`,"0xe708":`https://linea-mainnet.infura.io/v3/${t}`,"0xe704":`https://linea-goerli.infura.io/v3/${t}`,"0x89":`https://polygon-mainnet.infura.io/v3/${t}`,"0x13881":`https://polygon-mumbai.infura.io/v3/${t}`,"0x45":`https://optimism-mainnet.infura.io/v3/${t}`,"0x1a4":`https://optimism-goerli.infura.io/v3/${t}`,"0xa4b1":`https://arbitrum-mainnet.infura.io/v3/${t}`,"0x66eed":`https://arbitrum-goerli.infura.io/v3/${t}`,"0x2a15c308d":`https://palm-mainnet.infura.io/v3/${t}`,"0x2a15c3083":`https://palm-testnet.infura.io/v3/${t}`,"0xa86a":`https://avalanche-mainnet.infura.io/v3/${t}`,"0xa869":`https://avalanche-fuji.infura.io/v3/${t}`,"0x4e454152":`https://aurora-mainnet.infura.io/v3/${t}`,"0x4e454153":`https://aurora-testnet.infura.io/v3/${t}`,"0x534e5f4d41494e":`https://starknet-mainnet.infura.io/v3/${t}`,"0x534e5f474f45524c49":`https://starknet-goerli.infura.io/v3/${t}`,"0x534e5f474f45524c4932":`https://starknet-goerli2.infura.io/v3/${t}`,"0xa4ec":`https://celo-mainnet.infura.io/v3/${t}`,"0xaef3":`https://celo-alfajores.infura.io/v3/${t}`};a.options.readonlyRPCMap?a.options.readonlyRPCMap=Object.assign(Object.assign({},a.options.readonlyRPCMap),p):a.options.readonlyRPCMap=p})),$c={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},Hc={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},zc={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},qc={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},Wc={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};class Gc{static getFirstMatch(e,a){const t=a.match(e);return t&&t.length>0&&t[1]||""}static getSecondMatch(e,a){const t=a.match(e);return t&&t.length>1&&t[2]||""}static matchAndReturnConst(e,a,t){if(e.test(a))return t}static getWindowsVersionName(e){switch(e){case"NT":return"NT";case"XP":case"NT 5.1":return"XP";case"NT 5.0":return"2000";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}static getMacOSVersionName(e){const a=e.split(".").splice(0,2).map((e=>parseInt(e,10)||0));if(a.push(0),10===a[0])switch(a[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}}static getAndroidVersionName(e){const a=e.split(".").splice(0,2).map((e=>parseInt(e,10)||0));if(a.push(0),!(1===a[0]&&a[1]<5))return 1===a[0]&&a[1]<6?"Cupcake":1===a[0]&&a[1]>=6?"Donut":2===a[0]&&a[1]<2?"Eclair":2===a[0]&&2===a[1]?"Froyo":2===a[0]&&a[1]>2?"Gingerbread":3===a[0]?"Honeycomb":4===a[0]&&a[1]<1?"Ice Cream Sandwich":4===a[0]&&a[1]<4?"Jelly Bean":4===a[0]&&a[1]>=4?"KitKat":5===a[0]?"Lollipop":6===a[0]?"Marshmallow":7===a[0]?"Nougat":8===a[0]?"Oreo":9===a[0]?"Pie":void 0}static getVersionPrecision(e){return e.split(".").length}static compareVersions(e,a,t=!1){const p=Gc.getVersionPrecision(e),d=Gc.getVersionPrecision(a);let i=Math.max(p,d),n=0;const r=Gc.map([e,a],(e=>{const a=i-Gc.getVersionPrecision(e),t=e+new Array(a+1).join(".0");return Gc.map(t.split("."),(e=>new Array(20-e.length).join("0")+e)).reverse()}));for(t&&(n=i-Math.min(p,d)),i-=1;i>=n;){if(r[0][i]>r[1][i])return 1;if(r[0][i]===r[1][i]){if(i===n)return 0;i-=1}else if(r[0][i]<r[1][i])return-1}}static map(e,a){const t=[];let p;if(Array.prototype.map)return Array.prototype.map.call(e,a);for(p=0;p<e.length;p+=1)t.push(a(e[p]));return t}static find(e,a){let t,p;if(Array.prototype.find)return Array.prototype.find.call(e,a);for(t=0,p=e.length;t<p;t+=1){const p=e[t];if(a(p,t))return p}}static assign(e,...a){const t=e;let p,d;if(Object.assign)return Object.assign(e,...a);for(p=0,d=a.length;p<d;p+=1){const e=a[p];if("object"==typeof e&&null!==e){Object.keys(e).forEach((a=>{t[a]=e[a]}))}}return e}static getBrowserAlias(e){return $c[e]}static getBrowserTypeByAlias(e){return Hc[e]||""}}const Yc=/version\/(\d+(\.?_?\d+)+)/i,Jc=[{test:[/googlebot/i],describe(e){const a={name:"Googlebot"},t=Gc.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/opera/i],describe(e){const a={name:"Opera"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/opr\/|opios/i],describe(e){const a={name:"Opera"},t=Gc.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/SamsungBrowser/i],describe(e){const a={name:"Samsung Internet for Android"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/Whale/i],describe(e){const a={name:"NAVER Whale Browser"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/MZBrowser/i],describe(e){const a={name:"MZ Browser"},t=Gc.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/focus/i],describe(e){const a={name:"Focus"},t=Gc.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/swing/i],describe(e){const a={name:"Swing"},t=Gc.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/coast/i],describe(e){const a={name:"Opera Coast"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe(e){const a={name:"Opera Touch"},t=Gc.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/yabrowser/i],describe(e){const a={name:"Yandex Browser"},t=Gc.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/ucbrowser/i],describe(e){const a={name:"UC Browser"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/Maxthon|mxios/i],describe(e){const a={name:"Maxthon"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/epiphany/i],describe(e){const a={name:"Epiphany"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/puffin/i],describe(e){const a={name:"Puffin"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/sleipnir/i],describe(e){const a={name:"Sleipnir"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/k-meleon/i],describe(e){const a={name:"K-Meleon"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/micromessenger/i],describe(e){const a={name:"WeChat"},t=Gc.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/qqbrowser/i],describe(e){const a={name:/qqbrowserlite/i.test(e)?"QQ Browser Lite":"QQ Browser"},t=Gc.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/msie|trident/i],describe(e){const a={name:"Internet Explorer"},t=Gc.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/\sedg\//i],describe(e){const a={name:"Microsoft Edge"},t=Gc.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/edg([ea]|ios)/i],describe(e){const a={name:"Microsoft Edge"},t=Gc.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/vivaldi/i],describe(e){const a={name:"Vivaldi"},t=Gc.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/seamonkey/i],describe(e){const a={name:"SeaMonkey"},t=Gc.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/sailfish/i],describe(e){const a={name:"Sailfish"},t=Gc.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,e);return t&&(a.version=t),a}},{test:[/silk/i],describe(e){const a={name:"Amazon Silk"},t=Gc.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/phantom/i],describe(e){const a={name:"PhantomJS"},t=Gc.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/slimerjs/i],describe(e){const a={name:"SlimerJS"},t=Gc.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(e){const a={name:"BlackBerry"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/(web|hpw)[o0]s/i],describe(e){const a={name:"WebOS Browser"},t=Gc.getFirstMatch(Yc,e)||Gc.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/bada/i],describe(e){const a={name:"Bada"},t=Gc.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/tizen/i],describe(e){const a={name:"Tizen"},t=Gc.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/qupzilla/i],describe(e){const a={name:"QupZilla"},t=Gc.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/firefox|iceweasel|fxios/i],describe(e){const a={name:"Firefox"},t=Gc.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/electron/i],describe(e){const a={name:"Electron"},t=Gc.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/MiuiBrowser/i],describe(e){const a={name:"Miui"},t=Gc.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/chromium/i],describe(e){const a={name:"Chromium"},t=Gc.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,e)||Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/chrome|crios|crmo/i],describe(e){const a={name:"Chrome"},t=Gc.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/GSA/i],describe(e){const a={name:"Google Search"},t=Gc.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test(e){const a=!e.test(/like android/i),t=e.test(/android/i);return a&&t},describe(e){const a={name:"Android Browser"},t=Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/playstation 4/i],describe(e){const a={name:"PlayStation 4"},t=Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/safari|applewebkit/i],describe(e){const a={name:"Safari"},t=Gc.getFirstMatch(Yc,e);return t&&(a.version=t),a}},{test:[/.*/i],describe(e){const a=-1!==e.search("\\(")?/^(.*)\/(.*)[ \t]\((.*)/:/^(.*)\/(.*) /;return{name:Gc.getFirstMatch(a,e),version:Gc.getSecondMatch(a,e)}}}];var Zc=[{test:[/Roku\/DVP/],describe(e){const a=Gc.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,e);return{name:qc.Roku,version:a}}},{test:[/windows phone/i],describe(e){const a=Gc.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,e);return{name:qc.WindowsPhone,version:a}}},{test:[/windows /i],describe(e){const a=Gc.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,e),t=Gc.getWindowsVersionName(a);return{name:qc.Windows,version:a,versionName:t}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(e){const a={name:qc.iOS},t=Gc.getSecondMatch(/(Version\/)(\d[\d.]+)/,e);return t&&(a.version=t),a}},{test:[/macintosh/i],describe(e){const a=Gc.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,e).replace(/[_\s]/g,"."),t=Gc.getMacOSVersionName(a),p={name:qc.MacOS,version:a};return t&&(p.versionName=t),p}},{test:[/(ipod|iphone|ipad)/i],describe(e){const a=Gc.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,e).replace(/[_\s]/g,".");return{name:qc.iOS,version:a}}},{test(e){const a=!e.test(/like android/i),t=e.test(/android/i);return a&&t},describe(e){const a=Gc.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,e),t=Gc.getAndroidVersionName(a),p={name:qc.Android,version:a};return t&&(p.versionName=t),p}},{test:[/(web|hpw)[o0]s/i],describe(e){const a=Gc.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,e),t={name:qc.WebOS};return a&&a.length&&(t.version=a),t}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(e){const a=Gc.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,e)||Gc.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,e)||Gc.getFirstMatch(/\bbb(\d+)/i,e);return{name:qc.BlackBerry,version:a}}},{test:[/bada/i],describe(e){const a=Gc.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,e);return{name:qc.Bada,version:a}}},{test:[/tizen/i],describe(e){const a=Gc.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,e);return{name:qc.Tizen,version:a}}},{test:[/linux/i],describe:()=>({name:qc.Linux})},{test:[/CrOS/],describe:()=>({name:qc.ChromeOS})},{test:[/PlayStation 4/],describe(e){const a=Gc.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,e);return{name:qc.PlayStation4,version:a}}}],Xc=[{test:[/googlebot/i],describe:()=>({type:"bot",vendor:"Google"})},{test:[/huawei/i],describe(e){const a=Gc.getFirstMatch(/(can-l01)/i,e)&&"Nova",t={type:zc.mobile,vendor:"Huawei"};return a&&(t.model=a),t}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe:()=>({type:zc.tablet,vendor:"Nexus"})},{test:[/ipad/i],describe:()=>({type:zc.tablet,vendor:"Apple",model:"iPad"})},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe:()=>({type:zc.tablet,vendor:"Apple",model:"iPad"})},{test:[/kftt build/i],describe:()=>({type:zc.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"})},{test:[/silk/i],describe:()=>({type:zc.tablet,vendor:"Amazon"})},{test:[/tablet(?! pc)/i],describe:()=>({type:zc.tablet})},{test(e){const a=e.test(/ipod|iphone/i),t=e.test(/like (ipod|iphone)/i);return a&&!t},describe(e){const a=Gc.getFirstMatch(/(ipod|iphone)/i,e);return{type:zc.mobile,vendor:"Apple",model:a}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe:()=>({type:zc.mobile,vendor:"Nexus"})},{test:[/[^-]mobi/i],describe:()=>({type:zc.mobile})},{test:e=>"blackberry"===e.getBrowserName(!0),describe:()=>({type:zc.mobile,vendor:"BlackBerry"})},{test:e=>"bada"===e.getBrowserName(!0),describe:()=>({type:zc.mobile})},{test:e=>"windows phone"===e.getBrowserName(),describe:()=>({type:zc.mobile,vendor:"Microsoft"})},{test(e){const a=Number(String(e.getOSVersion()).split(".")[0]);return"android"===e.getOSName(!0)&&a>=3},describe:()=>({type:zc.tablet})},{test:e=>"android"===e.getOSName(!0),describe:()=>({type:zc.mobile})},{test:e=>"macos"===e.getOSName(!0),describe:()=>({type:zc.desktop,vendor:"Apple"})},{test:e=>"windows"===e.getOSName(!0),describe:()=>({type:zc.desktop})},{test:e=>"linux"===e.getOSName(!0),describe:()=>({type:zc.desktop})},{test:e=>"playstation 4"===e.getOSName(!0),describe:()=>({type:zc.tv})},{test:e=>"roku"===e.getOSName(!0),describe:()=>({type:zc.tv})}],Qc=[{test:e=>"microsoft edge"===e.getBrowserName(!0),describe(e){if(/\sedg\//i.test(e))return{name:Wc.Blink};const a=Gc.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,e);return{name:Wc.EdgeHTML,version:a}}},{test:[/trident/i],describe(e){const a={name:Wc.Trident},t=Gc.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:e=>e.test(/presto/i),describe(e){const a={name:Wc.Presto},t=Gc.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test(e){const a=e.test(/gecko/i),t=e.test(/like gecko/i);return a&&!t},describe(e){const a={name:Wc.Gecko},t=Gc.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}},{test:[/(apple)?webkit\/537\.36/i],describe:()=>({name:Wc.Blink})},{test:[/(apple)?webkit/i],describe(e){const a={name:Wc.WebKit},t=Gc.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,e);return t&&(a.version=t),a}}];class eu{constructor(e,a=!1){if(null==e||""===e)throw new Error("UserAgent parameter can't be empty");this._ua=e,this.parsedResult={},!0!==a&&this.parse()}getUA(){return this._ua}test(e){return e.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const e=Gc.find(Jc,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.browser=e.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(e){return e?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const e=Gc.find(Zc,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.os=e.describe(this.getUA())),this.parsedResult.os}getOSName(e){const{name:a}=this.getOS();return e?String(a).toLowerCase()||"":a||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(e=!1){const{type:a}=this.getPlatform();return e?String(a).toLowerCase()||"":a||""}parsePlatform(){this.parsedResult.platform={};const e=Gc.find(Xc,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.platform=e.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(e){return e?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const e=Gc.find(Qc,(e=>{if("function"==typeof e.test)return e.test(this);if(e.test instanceof Array)return e.test.some((e=>this.test(e)));throw new Error("Browser's test function is not valid")}));return e&&(this.parsedResult.engine=e.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return Gc.assign({},this.parsedResult)}satisfies(e){const a={};let t=0;const p={};let d=0;if(Object.keys(e).forEach((i=>{const n=e[i];"string"==typeof n?(p[i]=n,d+=1):"object"==typeof n&&(a[i]=n,t+=1)})),t>0){const e=Object.keys(a),t=Gc.find(e,(e=>this.isOS(e)));if(t){const e=this.satisfies(a[t]);if(void 0!==e)return e}const p=Gc.find(e,(e=>this.isPlatform(e)));if(p){const e=this.satisfies(a[p]);if(void 0!==e)return e}}if(d>0){const e=Object.keys(p),a=Gc.find(e,(e=>this.isBrowser(e,!0)));if(void 0!==a)return this.compareVersion(p[a])}}isBrowser(e,a=!1){const t=this.getBrowserName().toLowerCase();let p=e.toLowerCase();const d=Gc.getBrowserTypeByAlias(p);return a&&d&&(p=d.toLowerCase()),p===t}compareVersion(e){let a=[0],t=e,p=!1;const d=this.getBrowserVersion();if("string"==typeof d)return">"===e[0]||"<"===e[0]?(t=e.substr(1),"="===e[1]?(p=!0,t=e.substr(2)):a=[],">"===e[0]?a.push(1):a.push(-1)):"="===e[0]?t=e.substr(1):"~"===e[0]&&(p=!0,t=e.substr(1)),a.indexOf(Gc.compareVersions(d,t,p))>-1}isOS(e){return this.getOSName(!0)===String(e).toLowerCase()}isPlatform(e){return this.getPlatformType(!0)===String(e).toLowerCase()}isEngine(e){return this.getEngineName(!0)===String(e).toLowerCase()}is(e,a=!1){return this.isBrowser(e,a)||this.isOS(e)||this.isPlatform(e)}some(e=[]){return e.some((e=>this.is(e)))}}
/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */class au{static getParser(e,a=!1){if("string"!=typeof e)throw new Error("UserAgent should be a string");return new eu(e,a)}static parse(e){return new eu(e).getResult()}static get BROWSER_MAP(){return Hc}static get ENGINE_MAP(){return Wc}static get OS_MAP(){return qc}static get PLATFORMS_MAP(){return zc}}class tu{constructor({useDeepLink:e,preferredOpenLink:a,debug:t=!1}){this.state={platformType:void 0,useDeeplink:!1,preferredOpenLink:void 0,debug:!1},this.state.platformType=this.getPlatformType(),this.state.useDeeplink=e,this.state.preferredOpenLink=a,this.state.debug=t}openDeeplink(e,a,t){return function(e,a,t,p){const{state:d}=e;ss(`[PlatfformManager: openDeeplink()] universalLink --\x3e ${a}`),ss(`[PlatfformManager: openDeeplink()] deepLink --\x3e ${t}`);try{if(d.preferredOpenLink)return void d.preferredOpenLink(d.useDeeplink?t:a,p);if(ss(`[PlatfformManager: openDeeplink()] open link now useDeepLink=${d.useDeeplink} link=${d.useDeeplink?t:a}`),d.useDeeplink)"undefined"!=typeof window&&(window.location.href=t);else if("undefined"!=typeof document){const e=document.createElement("a");e.href=a,e.target="_self",e.rel="noreferrer noopener",e.click()}}catch(e){console.log("[PlatfformManager: openDeeplink()] can't open link",e)}}(this,e,a,t)}isReactNative(){var e;return this.isNotBrowser()&&"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.navigator)&&"ReactNative"===(null===(e=window.navigator)||void 0===e?void 0:e.product)}isMetaMaskInstalled(){return function(){const e=mm.getProvider()||(null===window||void 0===window?void 0:window.ethereum);return ss(`[PlatfformManager: isMetaMaskInstalled()] isMetaMask=${null==e?void 0:e.isMetaMask} isConnected=${null==e?void 0:e.isConnected()}`),(null==e?void 0:e.isMetaMask)&&(null==e?void 0:e.isConnected())}()}isDesktopWeb(){return this.isBrowser()&&!this.isMobileWeb()}isMobile(){var e,a;const t=au.parse(window.navigator.userAgent);return"mobile"===(null===(e=null==t?void 0:t.platform)||void 0===e?void 0:e.type)||"tablet"===(null===(a=null==t?void 0:t.platform)||void 0===a?void 0:a.type)}isSecure(){return this.isReactNative()||this.isMobileWeb()}isMetaMaskMobileWebView(){return"undefined"!=typeof window&&(Boolean(window.ReactNativeWebView)&&Boolean(navigator.userAgent.endsWith("MetaMaskMobile")))}isMobileWeb(){return this.state.platformType===Qd.MobileWeb}isNotBrowser(){var e;return"undefined"==typeof window||!(null===window||void 0===window?void 0:window.navigator)||"undefined"!=typeof global&&"ReactNative"===(null===(e=null===global||void 0===global?void 0:global.navigator)||void 0===e?void 0:e.product)||"ReactNative"===(null===navigator||void 0===navigator?void 0:navigator.product)}isNodeJS(){return this.isNotBrowser()&&!this.isReactNative()}isBrowser(){return!this.isNotBrowser()}isUseDeepLink(){return this.state.useDeeplink}getPlatformType(){return function(e){const{state:a}=e;return a.platformType?a.platformType:e.isReactNative()?Qd.ReactNative:e.isNotBrowser()?Qd.NonBrowser:e.isMetaMaskMobileWebView()?Qd.MetaMaskMobileWebview:e.isMobile()?Qd.MobileWeb:Qd.DesktopWeb}(this)}}const pu=a=>e(void 0,void 0,void 0,(function*(){const{options:e}=a,{readonlyRPCMap:t}=e;if(t)try{ss("[MetaMaskSDK: setupReadOnlyRPCProviders()] Setting up Readonly RPC Providers",t),a.setReadOnlyRPCCalls(!0)}catch(e){throw new Error("Invalid Infura Settings")}}));
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function du(e,a,t,p){return new(t||(t=Promise))((function(a,d){function i(e){try{r(p.next(e))}catch(e){d(e)}}function n(e){try{r(p.throw(e))}catch(e){d(e)}}function r(e){var p;e.done?a(e.value):(p=e.value,p instanceof t?p:new t((function(e){e(p)}))).then(i,n)}r((p=p.apply(e,[])).next())}))}function iu(e,a){var t,p,d,i,n={label:0,sent:function(){if(1&d[0])throw d[1];return d[1]},trys:[],ops:[]};return i={next:r(0),throw:r(1),return:r(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function r(i){return function(r){return function(i){if(t)throw new TypeError("Generator is already executing.");for(;n;)try{if(t=1,p&&(d=2&i[0]?p.return:i[0]?p.throw||((d=p.return)&&d.call(p),0):p.next)&&!(d=d.call(p,i[1])).done)return d;switch(p=0,d&&(i=[2&i[0],d.value]),i[0]){case 0:case 1:d=i;break;case 4:return n.label++,{value:i[1],done:!1};case 5:n.label++,p=i[1],i=[0];continue;case 7:i=n.ops.pop(),n.trys.pop();continue;default:if(!(d=n.trys,(d=d.length>0&&d[d.length-1])||6!==i[0]&&2!==i[0])){n=0;continue}if(3===i[0]&&(!d||i[1]>d[0]&&i[1]<d[3])){n.label=i[1];break}if(6===i[0]&&n.label<d[1]){n.label=d[1],d=i;break}if(d&&n.label<d[2]){n.label=d[2],n.ops.push(i);break}d[2]&&n.ops.pop(),n.trys.pop();continue}i=a.call(e,n)}catch(e){i=[6,e],p=0}finally{t=d=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,r])}}}var nu="INSTALLED",ru="NOT_INSTALLED",ou="REGISTERED",su="REGISTERING",lu="RELOADING",mu={CHROME:"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn",FIREFOX:"https://addons.mozilla.org/firefox/addon/ether-metamask/",DEFAULT:"https://metamask.io"},cu="REGISTRATION_IN_PROGRESS",uu="FORWARDER_ID",hu=function(){function e(a){var t=void 0===a?{}:a,p=t.forwarderOrigin,d=void 0===p?"https://fwd.metamask.io":p,i=t.forwarderMode,n=void 0===i?e.FORWARDER_MODE.INJECT:i;this.forwarderOrigin=d,this.forwarderMode=n,this.state=e.isMetaMaskInstalled()?nu:ru;var r=e._detectBrowser();this.downloadUrl=r?mu[r]:mu.DEFAULT,this._onMessage=this._onMessage.bind(this),this._onMessageFromForwarder=this._onMessageFromForwarder.bind(this),this._openForwarder=this._openForwarder.bind(this),this._openDownloadPage=this._openDownloadPage.bind(this),this.startOnboarding=this.startOnboarding.bind(this),this.stopOnboarding=this.stopOnboarding.bind(this),window.addEventListener("message",this._onMessage),n===e.FORWARDER_MODE.INJECT&&"true"===sessionStorage.getItem(cu)&&e._injectForwarder(this.forwarderOrigin)}return e.prototype._onMessage=function(e){if(e.origin===this.forwarderOrigin)return"metamask:reload"===e.data.type?this._onMessageFromForwarder(e):void console.debug("Unknown message from '"+e.origin+"' with data "+JSON.stringify(e.data))},e.prototype._onMessageUnknownStateError=function(e){throw new Error("Unknown state: '"+e+"'")},e.prototype._onMessageFromForwarder=function(a){return du(this,0,void 0,(function(){return iu(this,(function(t){switch(t.label){case 0:switch(this.state){case lu:return[3,1];case ru:return[3,2];case nu:return[3,3];case su:return[3,5];case ou:return[3,6]}return[3,7];case 1:return console.debug("Ignoring message while reloading"),[3,8];case 2:return console.debug("Reloading now to register with MetaMask"),this.state=lu,location.reload(),[3,8];case 3:return console.debug("Registering with MetaMask"),this.state=su,[4,e._register()];case 4:return t.sent(),this.state=ou,a.source.postMessage({type:"metamask:registrationCompleted"},a.origin),this.stopOnboarding(),[3,8];case 5:return console.debug("Already registering - ignoring reload message"),[3,8];case 6:return console.debug("Already registered - ignoring reload message"),[3,8];case 7:this._onMessageUnknownStateError(this.state),t.label=8;case 8:return[2]}}))}))},e.prototype.startOnboarding=function(){sessionStorage.setItem(cu,"true"),this._openDownloadPage(),this._openForwarder()},e.prototype.stopOnboarding=function(){"true"===sessionStorage.getItem(cu)&&(this.forwarderMode===e.FORWARDER_MODE.INJECT&&(console.debug("Removing forwarder"),e._removeForwarder()),sessionStorage.setItem(cu,"false"))},e.prototype._openForwarder=function(){this.forwarderMode===e.FORWARDER_MODE.OPEN_TAB?window.open(this.forwarderOrigin,"_blank"):e._injectForwarder(this.forwarderOrigin)},e.prototype._openDownloadPage=function(){window.open(this.downloadUrl,"_blank")},e.isMetaMaskInstalled=function(){return Boolean(window.ethereum&&window.ethereum.isMetaMask)},e._register=function(){return window.ethereum.request({method:"wallet_registerOnboarding"})},e._injectForwarder=function(e){var a=document.body,t=document.createElement("iframe");t.setAttribute("height","0"),t.setAttribute("width","0"),t.setAttribute("style","display: none;"),t.setAttribute("src",e),t.setAttribute("id",uu),a.insertBefore(t,a.children[0])},e._removeForwarder=function(){var e;null===(e=document.getElementById(uu))||void 0===e||e.remove()},e._detectBrowser=function(){var e=au.parse(window.navigator.userAgent);return"Firefox"===e.browser.name?"FIREFOX":["Chrome","Chromium"].includes(e.browser.name||"")?"CHROME":null},e.FORWARDER_MODE={INJECT:"INJECT",OPEN_TAB:"OPEN_TAB"},e}();function vu(a,{wait:t=!1}){return e(this,void 0,void 0,(function*(){return ss(`[MetamaskInstaller: startInstaller()] wait=${t}`),t&&(yield xc(1e3)),yield a.checkInstallation()}))}class fu{constructor({remote:e,preferDesktop:a,platformManager:t,debug:p=!1}){this.state={isInstalling:!1,hasInstalled:!1,resendRequest:null,preferDesktop:!1,platformManager:null,remote:null,debug:!1,connectWith:void 0},this.state.remote=e,this.state.preferDesktop=a,this.state.platformManager=t,this.state.debug=p}startDesktopOnboarding(){return function(){return e(this,void 0,void 0,(function*(){ss("[MetamaskInstaller: startDesktopOnboarding() starting desktop onboarding"),delete window.ethereum,(new hu).startOnboarding()}))}()}redirectToProperInstall(){return e(this,void 0,void 0,(function*(){return function(a){var t,p;return e(this,void 0,void 0,(function*(){const{state:e}=a,d=null===(t=e.platformManager)||void 0===t?void 0:t.getPlatformType();if(ss(`[MetamaskInstaller: redirectToProperInstall()] platform=${d}`),d===Qd.MetaMaskMobileWebview)return!1;e.isInstalling=!0;try{yield null===(p=e.remote)||void 0===p?void 0:p.startConnection({connectWith:e.connectWith}),e.isInstalling=!1,e.hasInstalled=!0}catch(a){throw e.isInstalling=!1,a}return!0}))}(this)}))}checkInstallation(){return e(this,void 0,void 0,(function*(){return function(a){var t;return e(this,void 0,void 0,(function*(){const{state:e}=a,p=null===(t=e.platformManager)||void 0===t?void 0:t.isMetaMaskInstalled();return ss(`[MetamaskInstaller: checkInstallation()] isInstalled=${p}`),!!p||(yield a.redirectToProperInstall())}))}(this)}))}start({wait:a=!1,connectWith:t}){return e(this,void 0,void 0,(function*(){this.state.connectWith=t,ss(`[MetaMaskInstaller: start()] wait=${a}`,t),yield vu(this,{wait:a})}))}}const gu=require("qrcode-terminal-nooctal"),wu=({link:e})=>(gu.generate(e,{small:!0},(e=>console.log(e))),ss(`[UI: InstallModal-nodejs()] qrcode url: ${e}`),{unmount:()=>{}}),yu=()=>(ss("[UI: pendingModal-nodejs: PendingModal()] Please open the MetaMask wallet app and confirm the connection. Thank you!"),{unmount:()=>!1,updateOTPValue:e=>{""!==e&&ss(`[UI: pendingModal-nodejs: PendingModal()] Choose the following value on your metamask mobile wallet: ${e}`)},mount:()=>!1});function bu(e,a){var t,p,d,i;e.connector||(ss("[RemoteConnection: initializeConnector()] initialize connector"),e.connector=new ui({platformType:a.platformManager.getPlatformType(),communicationLayerPreference:a.communicationLayerPreference,transports:a.transports,dappMetadata:Object.assign(Object.assign({},a.dappMetadata),{source:a._source}),analytics:a.enableAnalytics,communicationServerUrl:a.communicationServerUrl,sdkVersion:Nl.version,context:"dapp",ecies:a.ecies,storage:a.storage,logging:a.logging}),a.timer&&(ss("[RemoteConnection: initializeConnector()] reset background timer",a.timer),null===(p=null===(t=a.timer)||void 0===t?void 0:t.stopBackgroundTimer)||void 0===p||p.call(t),null===(i=null===(d=a.timer)||void 0===d?void 0:d.runBackgroundTimer)||void 0===i||i.call(d,(()=>!1),1e4)))}function Su(e){e.listeners.forEach((({event:a,handler:t})=>{var p;null===(p=e.connector)||void 0===p||p.off(a,t)})),e.listeners=[]}function _u(a,t,p){return e(this,void 0,void 0,(function*(){return new Promise(((d,i)=>{if(!a.connector)return void i(new Error("No connector available"));ss("[RemoteConnection: connectWithModalInstaller()]",{state:a,options:t,linkParams:p});const n=`${a.useDeeplink?Dl:Cl}?${p}`;!function(e,a,t){var p,d,i,n;e.installModal=null===(d=(p=a.modals).install)||void 0===d?void 0:d.call(p,{i18nInstance:a.sdk.i18nInstance,link:t,preferDesktop:e.preferDesktop,installer:a.getMetaMaskInstaller(),terminate:()=>{ss("[RemoteConnection: showInstallModal() => terminate()] terminate connection"),a.sdk.terminate().catch((e=>{console.warn("[MMSDK] failed to terminate connection",e)}))},debug:e.developerMode,connectWithExtension:()=>{var e;return null===(e=a.connectWithExtensionProvider)||void 0===e||e.call(a),!1}}),null===(n=null===(i=e.installModal)||void 0===i?void 0:i.mount)||void 0===n||n.call(i,t)}(a,t,n),t.sdk.once(Pd.PROVIDER_UPDATE,(a=>e(this,void 0,void 0,(function*(){if(ss("[RemoteConnection: connectWithModalInstaller()] once provider_update -- resolving startConnection promise"),a!==xl.TERMINATE)i(a);else{i({code:4001,message:"User rejected the request."})}})))),a.connector.once(Pd.AUTHORIZED,(()=>{d()})),a.connector.once(Pd.REJECTED,(()=>{i(Pd.REJECTED)})),a.connector.once(Pd.CLIENTS_READY,(()=>e(this,void 0,void 0,(function*(){ss("[RemoteConnection: connectWithModalInstaller()] once clients_ready -- resolving startConnection promise"),d()}))))}))}))}function Eu(a,t){function p(e,t){var p;null===(p=a.connector)||void 0===p||p.on(e,t),a.listeners.push({event:e,handler:t})}a.connector&&(Su(a),p(Pd.WALLET_INIT,(({accounts:a,chainId:t})=>e(this,void 0,void 0,(function*(){ss(`[RemoteConnection: setupListeners() => EventType.WALLET_INIT] 'wallet_init' accounts=${a} chainId=${t}`);const e=mm.getProvider();e._setConnected();const p={accounts:a,chainId:t,isUnlocked:!1};e._initializeState(p),e.emit("chainChanged",t),e.emit("accountsChanged",a)})))),p(Pd.AUTHORIZED,(()=>e(this,void 0,void 0,(function*(){var e,t,p,d;try{ss("[RemoteConnection: setupListeners() => EventType.AUTHORIZED] 'authorized' closing modals",a.pendingModal,a.installModal);const i=mm.getProvider();i._setConnected(),null===(t=null===(e=a.pendingModal)||void 0===e?void 0:e.unmount)||void 0===t||t.call(e),null===(d=null===(p=a.installModal)||void 0===p?void 0:p.unmount)||void 0===d||d.call(p,!1),a.otpAnswer=void 0,a.authorized=!0,ss("[RemoteConnection: setupListeners() => EventType.AUTHORIZED] 'authorized' provider.state",i.getState()),yield i.forceInitializeState()}catch(e){}})))),p(Pd.TERMINATE,(()=>{var e,t,p,d,i;null===(t=null===(e=a.pendingModal)||void 0===e?void 0:e.unmount)||void 0===t||t.call(e),null===(d=null===(p=a.installModal)||void 0===p?void 0:p.unmount)||void 0===d||d.call(p,!0),a.pendingModal=void 0,a.installModal=void 0,a.otpAnswer=void 0,null===(i=a.connector)||void 0===i||i.disconnect({terminate:!0}),a.authorized=!1;mm.getProvider().handleDisconnect({terminate:!0}),Su(a),ss("[RemoteConnection: setupListeners()] All listeners cleaned up")})))}function Nu(a,t,{initialCheck:p,connectWith:d}={}){var i,n,r,o,s,l,m,c,u,h,v,f,g,w,y,b,S,_,E;return e(this,void 0,void 0,(function*(){try{if(bu(a,t),!a.connector)throw new Error("no connector defined");Eu(a);const N=mm.getProvider();a.authorized=!1,N.emit("connecting");const T=yield null===(i=a.connector)||void 0===i?void 0:i.originatorSessionConnect();ss(`[RemoteConnection: startConnection()] after originatorSessionConnect initialCheck=${p}`,T);let C=null!==(n=null==T?void 0:T.channelId)&&void 0!==n?n:"",D=null!==(o=null===(r=a.connector.getKeyInfo())||void 0===r?void 0:r.ecies.public)&&void 0!==o?o:"",A=null!==(l=null===(s=a.connector.getKeyInfo())||void 0===s?void 0:s.ecies.private)&&void 0!==l?l:"";if(p&&!T)return Promise.resolve();if(!T&&!p){const e=yield a.connector.generateChannelIdConnect();C=null!==(m=e.channelId)&&void 0!==m?m:"",D=null!==(c=e.pubKey)&&void 0!==c?c:"",A=null!==(u=e.privKey)&&void 0!==u?u:"";const t=Date.now();null===(h=a.connector.state.storageManager)||void 0===h||h.persistChannelConfig({channelId:C,localKey:A,lastActive:t,validUntil:t+kd})}if(p&&(null==T?void 0:T.channelId))return(null===(v=a.connector)||void 0===v?void 0:v.isConnected())||(ss(`[RemoteConnection: startConnection()] reconnecting to channel initialCheck=${p}`,T),yield null===(f=a.connector)||void 0===f?void 0:f.connectToChannel({channelId:C})),Promise.resolve();T&&!(null===(g=a.connector)||void 0===g?void 0:g.isConnected())&&(ss("[RemoteConnection: startConnection()] reconnecting to channel",T),yield null===(w=a.connector)||void 0===w?void 0:w.connectToChannel({channelId:C}));const k=(null===(y=a.platformManager)||void 0===y?void 0:y.isSecure())?"":"&t=q",O=Nl.version,{iconUrl:x,name:R,url:M,scheme:P}=t.dappMetadata||{},I=null===(b=a.platformManager)||void 0===b?void 0:b.getPlatformType();let V="N/A";"undefined"!=typeof window&&window.location&&window.location.hostname?V=window.location.hostname:void 0!==R?V=R:void 0!==M&&(V=M);const L={url:null!=M?M:"",title:null!=R?R:"",icon:x,scheme:null!=P?P:"",apiVersion:O,dappId:V||M||"N/A",platform:null!=I?I:"",source:null!==(S=t._source)&&void 0!==S?S:""},B=lm(JSON.stringify(L));let j=`channelId=${C}&v=2&comm=${null!==(_=a.communicationLayerPreference)&&void 0!==_?_:""}&pubkey=${D}${k}&originatorInfo=${B}`;if(d){j+=`&rpc=${lm(JSON.stringify(d))}`;const e=a.connector.getRPCMethodTracker();e&&(e[`${d.id}`]=Object.assign(Object.assign({},d),{id:`${d.id}`,timestamp:Date.now()}))}const K=encodeURI(j),U=`${a.useDeeplink?Dl:Cl}?${j}`;return a.qrcodeLink=U,a.developerMode&&ss(`[RemoteConnection: startConnection()] qrcodeLink=${K}`),N.emit("display_uri",U),(null===(E=a.platformManager)||void 0===E?void 0:E.isSecure())?(yield function(a,t){var p,d;return e(this,void 0,void 0,(function*(){const e=`${Cl}?${t}`,i=`${Dl}?${t}`;null===(d=null===(p=a.platformManager)||void 0===p?void 0:p.openDeeplink)||void 0===d||d.call(p,e,i,"_self")}))}(a,K),new Promise(((e,t)=>{var p,d,i;(null===(p=a.connector)||void 0===p?void 0:p.isAuthorized())?e():(null===(d=a.connector)||void 0===d||d.once(Pd.AUTHORIZED,(()=>{e()})),null===(i=a.connector)||void 0===i||i.once(Pd.REJECTED,(()=>{t(Pd.REJECTED)})))}))):_u(a,t,K)}catch(e){throw console.error("[startConnection] error",e),e}}))}class Tu{constructor(e){var a,t,p;this.state={connector:void 0,qrcodeLink:void 0,analytics:void 0,developerMode:!1,authorized:!1,reconnection:!1,preferDesktop:!1,deeplinkProtocol:!1,listeners:[],communicationLayerPreference:void 0,platformManager:void 0,pendingModal:void 0,installModal:void 0,otpAnswer:void 0},this.options=e;const d=!0===(null===(a=e.logging)||void 0===a?void 0:a.developerMode)||!0===(null===(t=e.logging)||void 0===t?void 0:t.sdk);this.state.developerMode=d,this.state.analytics=e.analytics,this.state.preferDesktop=null!==(p=e.preferDesktop)&&void 0!==p&&p,this.state.useDeeplink=e.sdk.options.useDeeplink,this.state.communicationLayerPreference=e.communicationLayerPreference,this.state.platformManager=e.platformManager,e.modals.install||(e.modals.install=wu),e.modals.otp||(e.modals.otp=yu)}startConnection(a){return e(this,void 0,void 0,(function*(){return Nu(this.state,this.options,a)}))}initRemoteCommunication({sdkInstance:a}){var t,p,d;return e(this,void 0,void 0,(function*(){const e=yield null===(p=null===(t=a.options.storage)||void 0===t?void 0:t.storageManager)||void 0===p?void 0:p.getPersistedChannelConfig();if(!this.options.ecies){const a={privateKey:null==e?void 0:e.localKey};this.options.ecies=a}bu(this.state,this.options),yield null===(d=this.getConnector())||void 0===d?void 0:d.initFromDappStorage(),Eu(this.state,this.options)}))}showActiveModal(){return function(e){var a,t,p,d;e.authorized?ss("[RemoteConnection: showActiveModal()] already authorized"):e.pendingModal?null===(t=(a=e.pendingModal).mount)||void 0===t||t.call(a):e.installModal&&(null===(d=(p=e.installModal).mount)||void 0===d||d.call(p,e.qrcodeLink||""))}(this.state)}closeModal(){var e,a,t,p;null===(a=null===(e=this.state.pendingModal)||void 0===e?void 0:e.unmount)||void 0===a||a.call(e),null===(p=null===(t=this.state.installModal)||void 0===t?void 0:t.unmount)||void 0===p||p.call(t,!1)}getUniversalLink(){if(!this.state.qrcodeLink)throw new Error("connection not started. run startConnection() first.");return this.state.qrcodeLink}getChannelConfig(){var e;return null===(e=this.state.connector)||void 0===e?void 0:e.getChannelConfig()}getKeyInfo(){var e;return null===(e=this.state.connector)||void 0===e?void 0:e.getKeyInfo()}getConnector(){if(!this.state.connector)throw new Error("invalid remote connector");return this.state.connector}getPlatformManager(){if(!this.state.platformManager)throw new Error("PlatformManager not available");return this.state.platformManager}isConnected(){var e;return(null===(e=this.state.connector)||void 0===e?void 0:e.isReady())||!1}isAuthorized(){var e;return(null===(e=this.state.connector)||void 0===e?void 0:e.isAuthorized())||!1}isPaused(){var e;return null===(e=this.state.connector)||void 0===e?void 0:e.isPaused()}disconnect(e){var a,t,p;ss("[RemoteConnection: disconnect()]",e),(null==e?void 0:e.terminate)&&(mm.getProvider().handleDisconnect({terminate:!0}),null===(t=null===(a=this.state.pendingModal)||void 0===a?void 0:a.unmount)||void 0===t||t.call(a),this.state.otpAnswer=void 0),null===(p=this.state.connector)||void 0===p||p.disconnect(e),function(e){ss("[RemoteConnection: cleanupConnector()] cleaning up connector"),e.connector&&(Su(e),e.connector.disconnect({terminate:!0}).catch((e=>{ss("[RemoteConnection: cleanupConnector()] error disconnecting connector",e)})))}(this.state)}}function Cu(a){var t,p,d,i,n,o,s,l,m,c,u;return e(this,void 0,void 0,(function*(){const{options:h}=a;if(h.logging=null!==(t=h.logging)&&void 0!==t?t:{},h.communicationLayerPreference=null!==(p=h.communicationLayerPreference)&&void 0!==p?p:Xd.SOCKET,void 0!==h.enableDebug&&(r.enable("MM_SDK"),console.warn("enableDebug is removed. Please use enableAnalytics instead.")),h.enableAnalytics=null===(d=h.enableAnalytics)||void 0===d||d,h.injectProvider=null===(i=h.injectProvider)||void 0===i||i,h.shouldShimWeb3=null===(n=h.shouldShimWeb3)||void 0===n||n,h.extensionOnly=null===(o=h.extensionOnly)||void 0===o||o,h.useDeeplink=null===(s=h.useDeeplink)||void 0===s||s,h.storage=null!==(l=h.storage)&&void 0!==l?l:{enabled:!0},h.headless){r("[MetaMaskSDK: performSDKInitialization()] headless mode enabled");const e=()=>{},a={install:()=>({mount:e,unmount:e})},t={installer:e};h.modals=a,h.ui=t}const v=!0===(null===(m=h.logging)||void 0===m?void 0:m.developerMode);a.debug=(null===(c=h.logging)||void 0===c?void 0:c.sdk)||v,ss("[MetaMaskSDK: performSDKInitialization()] options",a.options);const f=Object.assign({},h.logging);v&&(f.sdk=!0,f.eciesLayer=!0,f.keyExchangeLayer=!0,f.remoteLayer=!0,f.serviceLayer=!0,f.plaintext=!0),yield function(a){var t,p,d;return e(this,void 0,void 0,(function*(){const e=null!==(t=a.options.i18nOptions)&&void 0!==t?t:{},i=e.enabled;yield a.i18nInstance.use(tm).init({debug:null!==(p=e.debug)&&void 0!==p&&p,compatibilityJSON:"v3",fallbackLng:"en",interpolation:{escapeValue:!1},resources:i?{en:{translation:pm},es:{translation:dm},it:{translation:rm},fr:{translation:im},pt:{translation:om},tr:{translation:sm},he:{translation:nm}}:{en:{translation:pm}},detection:{order:["localStorage","navigator"],lookupLocalStorage:"MetaMaskSDKLng",caches:["localStorage"]}}),a.availableLanguages=Object.keys(null!==(d=a.i18nInstance.services.resourceStore.data)&&void 0!==d?d:{})}))}(a),yield function(a){var t;return e(this,void 0,void 0,(function*(){const{options:e}=a;a.platformManager=new tu({useDeepLink:null!==(t=e.useDeeplink)&&void 0!==t&&t,preferredOpenLink:e.openDeeplink,debug:a.debug})}))}(a),yield function(a){var t,p,d,i,n,r,o,s,l;return e(this,void 0,void 0,(function*(){const{options:e}=a,m=null===(t=a.platformManager)||void 0===t?void 0:t.getPlatformType();a.analytics=new Ic({serverUrl:null!==(p=e.communicationServerUrl)&&void 0!==p?p:Dd,enabled:e.enableAnalytics,originatorInfo:{url:null!==(d=e.dappMetadata.url)&&void 0!==d?d:"",title:null!==(i=e.dappMetadata.name)&&void 0!==i?i:"",dappId:"undefined"==typeof window||void 0===window.location?null!==(s=null!==(r=null===(n=e.dappMetadata)||void 0===n?void 0:n.name)&&void 0!==r?r:null===(o=e.dappMetadata)||void 0===o?void 0:o.url)&&void 0!==s?s:"N/A":window.location.hostname,platform:null!=m?m:"",source:null!==(l=e._source)&&void 0!==l?l:""}})}))}(a),yield function(a){var t;return e(this,void 0,void 0,(function*(){const{options:e}=a;!0!==(null===(t=e.storage)||void 0===t?void 0:t.enabled)||e.storage.storageManager||(e.storage.storageManager=Ps(e.storage))}))}(a),yield function(a){return e(this,void 0,void 0,(function*(){const{options:e}=a,t=/^(http|https):\/\/[^\s]*$/;if(e.dappMetadata){e.dappMetadata.iconUrl&&!t.test(e.dappMetadata.iconUrl)&&(console.warn("Invalid dappMetadata.iconUrl: URL must start with http:// or https://"),e.dappMetadata.iconUrl=void 0),e.dappMetadata.base64Icon&&e.dappMetadata.base64Icon.length>Lc&&(console.warn("Invalid dappMetadata.base64Icon: Base64-encoded icon string length must be less than 163400 characters"),e.dappMetadata.base64Icon=void 0),e.dappMetadata.url&&!t.test(e.dappMetadata.url)&&console.warn("Invalid dappMetadata.url: URL must start with http:// or https://");const a=Vc();if(a&&!e.dappMetadata.iconUrl&&!e.dappMetadata.base64Icon){const t=`${window.location.protocol}//${window.location.host}${a}`;e.dappMetadata.iconUrl=t}}a.dappMetadata=e.dappMetadata}))}(a),yield Fc(a),yield pu(a);const{metamaskBrowserExtension:g,preferExtension:w,shouldReturn:y}=yield function(a){var t,p,d,i;return e(this,void 0,void 0,(function*(){const{options:e}=a;let n,r=!1,o=!1;if("undefined"!=typeof window&&window.ethereum&&!(null===(t=a.platformManager)||void 0===t?void 0:t.isMetaMaskMobileWebView())){r="extension"===localStorage.getItem(ks);try{n=yield Uc({mustBeMetaMask:!0,sdkInstance:a}),window.extension=n,n.on(Rs.CHAIN_CHANGED,(e=>{ss(`[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE chainChanged chainId=${e}`),Boolean(a.sdkProvider)&&a.getMobileProvider().emit(Rs.CHAIN_CHANGED,e)})),n.on(Rs.ACCOUNTS_CHANGED,(e=>{ss(`[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE accountsChanged accounts=${e}`);const t=Boolean(a.sdkProvider),p=Boolean(a.extensionActive);t&&a.getMobileProvider().emit(Rs.ACCOUNTS_CHANGED,e),p&&0===(null==e?void 0:e.length)&&a.terminate().catch((e=>{ss("[MetaMaskSDK: setupExtensionPreferences()] Error terminating",e)}))})),n.on(Rs.DISCONNECT,(e=>{ss(`[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE disconnect error=${e}`),Boolean(a.sdkProvider)&&a.getMobileProvider().emit(Rs.DISCONNECT,e)})),n.on(Rs.CONNECT,(e=>{ss(`[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE connect args=${e}`),Boolean(a.sdkProvider)&&a.getMobileProvider().emit(Rs.CONNECT,e)})),n.on(Rs.CONNECTED,(e=>{ss("[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE connected",e),Boolean(a.sdkProvider)&&a.getMobileProvider().emit(Rs.CONNECTED,e)}))}catch(e){window.extension=void 0}}else(null===(p=a.platformManager)||void 0===p?void 0:p.isMetaMaskMobileWebView())&&(null===(d=a.analytics)||void 0===d||d.send({event:Bd.SDK_USE_INAPP_BROWSER}),a.activeProvider=jc({provider:window.ethereum,sdkInstance:a}),a._initialized=!0,o=!0);return n&&e.extensionOnly&&(ss("[MetaMaskSDK: setupExtensionPreferences()] EXTENSION ONLY --- prevent sdk initialization"),null===(i=a.analytics)||void 0===i||i.send({event:Bd.SDK_USE_EXTENSION}),a.activeProvider=n,a.extensionActive=!0,a.extension=n,a._initialized=!0,o=!0),{preferExtension:r,shouldReturn:o,metamaskBrowserExtension:n}}))}(a);if(y)ss("[MetaMaskSDK: performSDKInitialization()] shouldReturn=true --- prevent sdk initialization");else{yield function(a,t){var p,d,i,n,r;return e(this,void 0,void 0,(function*(){const{options:e}=a,o=Object.assign({},e.logging);a.remoteConnection=new Tu({i18nInstance:a.i18nInstance,preferDesktop:null!==(p=e.preferDesktop)&&void 0!==p&&p,communicationLayerPreference:null!==(d=e.communicationLayerPreference)&&void 0!==d?d:Xd.SOCKET,analytics:a.analytics,dappMetadata:e.dappMetadata,_source:e._source,enableAnalytics:null===(i=e.enableAnalytics)||void 0===i||i,timer:e.timer,sdk:a,platformManager:a.platformManager,transports:e.transports,communicationServerUrl:e.communicationServerUrl,storage:null!==(n=e.storage)&&void 0!==n?n:{enabled:!0},getMetaMaskInstaller:()=>{if(!a.installer)throw new Error("Invalid SDK status -- installer not initialized");return a.installer},logging:o,connectWithExtensionProvider:void 0===t?void 0:()=>Pl(a),modals:Object.assign(Object.assign({},e.modals),{onPendingModalDisconnect:a.terminate.bind(a)})}),yield a.remoteConnection.initRemoteCommunication({sdkInstance:a}),a.installer=new fu({remote:a.remoteConnection,preferDesktop:null!==(r=e.preferDesktop)&&void 0!==r&&r,platformManager:a.platformManager,debug:a.debug})}))}(a,g),yield Mc(a),yield function(a,t){var p,d;return e(this,void 0,void 0,(function*(){const{options:e}=a;t?(ss("[MetaMaskSDK: handleAutoAndExtensionConnections()] preferExtension is detected -- connect with it."),null===(p=a.analytics)||void 0===p||p.send({event:Bd.SDK_EXTENSION_UTILIZED}),Pl(a).catch((e=>{console.warn("Can't connect with MetaMask extension...",e),localStorage.removeItem(ks)}))):e.checkInstallationImmediately&&((null===(d=a.platformManager)||void 0===d?void 0:d.isDesktopWeb())?(ss("[MetaMaskSDK: handleAutoAndExtensionConnections()] checkInstallationImmediately"),a.connect().catch((e=>{ss(`[MetaMaskSDK: handleAutoAndExtensionConnections()] checkInstallationImmediately --- IGNORED --- error on autoconnect _err=${e}`)}))):console.warn("[handleAutoAndExtensionConnections()] checkInstallationImmediately --- IGNORED --- only for web desktop")),a._initialized=!0}))}(a,w);try{yield null===(u=a.remoteConnection)||void 0===u?void 0:u.startConnection({initialCheck:!0})}catch(e){console.error("[MetaMaskSDK: setupRemoteConnectionAndInstaller()] Error while checking installation",e)}a.emit(Ol.ProviderUpdate,xl.INITIALIZED)}}))}class Du extends m{constructor(e={storage:{enabled:!0},injectProvider:!0,forceInjectProvider:!1,enableAnalytics:!0,shouldShimWeb3:!0,useDeeplink:!0,extensionOnly:!0,headless:!1,dappMetadata:{name:"",url:"",iconUrl:""},_source:Tl,i18nOptions:{enabled:!1}}){var a,t,p;super(),this.extensionActive=!1,this._initialized=!1,this.sdkInitPromise=void 0,this.debug=!1,this.readonlyRPCCalls=!1,this.i18nInstance=_l(),this.availableLanguages=["en"],r.disable();const d=!0===(null===(a=e.logging)||void 0===a?void 0:a.developerMode);if(((null===(t=e.logging)||void 0===t?void 0:t.sdk)||d)&&r.enable("MM_SDK"),ss("[MetaMaskSDK: constructor()]: begin."),this.setMaxListeners(50),!(null===(p=e.dappMetadata)||void 0===p?void 0:p.url)){if("undefined"==typeof window||"undefined"==typeof document)throw new Error("You must provide dAppMetadata url");e.dappMetadata=Object.assign(Object.assign({},e.dappMetadata),{url:`${window.location.protocol}//${window.location.host}`})}this.options=e,this.options._source||(e._source=Tl),this.init().then((()=>{ss("[MetaMaskSDK: constructor()]: initialized successfully."),"undefined"!=typeof window&&(window.mmsdk=this)})).catch((e=>{console.error("[MetaMaskSDK: constructor()] error during initialization",e)}))}init(){return e(this,void 0,void 0,(function*(){return function(a){var t;return e(this,void 0,void 0,(function*(){if("undefined"!=typeof window&&(null===(t=window.mmsdk)||void 0===t?void 0:t.isInitialized()))return ss("[MetaMaskSDK: initializeMetaMaskSDK()] already initialized"),Promise.resolve(window.mmsdk);if(a._initialized)return ss("[MetaMaskSDK: initializeMetaMaskSDK()] already initialized"),a.sdkInitPromise;if(a.sdkInitPromise)return ss("[MetaMaskSDK: initializeMetaMaskSDK()] already initializing"),a.sdkInitPromise;try{a.sdkInitPromise=Cu(a),yield a.sdkInitPromise}catch(e){throw console.error(e),e}return a.sdkInitPromise}))}(this)}))}isExtensionActive(){return this.extensionActive}checkExtensionAvailability(){var e;return"undefined"!=typeof window&&Boolean(null===(e=window.ethereum)||void 0===e?void 0:e.isMetaMask)}connect(){return e(this,void 0,void 0,(function*(){return function(a){return e(this,void 0,void 0,(function*(){if(a._initialized||(ss("[MetaMaskSDK: connect()] provider not ready -- wait for init()"),yield a.init()),ss(`[MetaMaskSDK: connect()] isExtensionActive=${a.isExtensionActive()} activeProvider`,a.activeProvider),!a.activeProvider)throw new Error("SDK state invalid -- undefined provider");const e=a.activeProvider.getSelectedAddress();return e?[e]:a.activeProvider.request({method:Ns.ETH_REQUESTACCOUNTS,params:[]})}))}(this)}))}connectAndSign({msg:a}){return e(this,void 0,void 0,(function*(){return Ml({instance:this,msg:a})}))}connectWith(a){return e(this,void 0,void 0,(function*(){return function({instance:a,rpc:t}){return e(this,void 0,void 0,(function*(){if(a._initialized||(ss("[MetaMaskSDK: connectWith()] provider not ready -- wait for init()"),yield a.init()),ss(`[MetaMaskSDK: connectWith()] method: ${t.method} rpc=${t}`),!a.activeProvider)throw new Error("SDK state invalid -- undefined provider");return a.activeProvider.request({method:Ns.METAMASK_CONNECTWITH,params:[t]})}))}({instance:this,rpc:a})}))}resume(){return function(a){var t,p,d;return e(this,void 0,void 0,(function*(){if(!(null===(p=null===(t=a.remoteConnection)||void 0===t?void 0:t.getConnector())||void 0===p?void 0:p.isReady()))return ss("[MetaMaskSDK: resume()] channel is not ready -- starting connection"),void(null===(d=a.remoteConnection)||void 0===d||d.startConnection());ss("[MetaMaskSDK: resume()] channel is ready")}))}(this)}disconnect(){return console.warn("MetaMaskSDK.disconnect() is deprecated, use terminate()"),this.terminate()}isAuthorized(){var e;null===(e=this.remoteConnection)||void 0===e||e.isAuthorized()}terminate(){return function(a){var t,p,d;return e(this,void 0,void 0,(function*(){if(!(null===(t=a.platformManager)||void 0===t?void 0:t.isMetaMaskMobileWebView())){if(Rl&&(window.localStorage.removeItem(ks),window.localStorage.removeItem(xs),window.localStorage.removeItem(Os)),a.extensionActive){try{yield null===(p=a.activeProvider)||void 0===p?void 0:p.request({method:Ns.WALLET_REVOKEPERMISSIONS,params:[{eth_accounts:{}}]})}catch(e){ss("[MetaMaskSDK: terminate()] error revoking permissions",e)}return a.options.extensionOnly?void ss("[MetaMaskSDK: terminate()] extensionOnly --- prevent switching providers"):(a.activeProvider=a.sdkProvider,window.ethereum=a.activeProvider,a.extensionActive=!1,void a.emit(Ol.ProviderUpdate,xl.TERMINATE))}a.emit(Ol.ProviderUpdate,xl.TERMINATE),ss(`[MetaMaskSDK: terminate()] remoteConnection=${a.remoteConnection}`),null===(d=a.remoteConnection)||void 0===d||d.disconnect({terminate:!0,sendMessage:!0})}}))}(this)}isInitialized(){return this._initialized}setReadOnlyRPCCalls(e){this.readonlyRPCCalls=e}hasReadOnlyRPCCalls(){return this.readonlyRPCCalls}getProvider(){if(this.activeProvider)return this.activeProvider;console.warn("MetaMaskSDK: No active provider found")}getMobileProvider(){if(!this.sdkProvider)throw new Error("SDK state invalid -- undefined mobile provider");return this.sdkProvider}getUniversalLink(){var e;const a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getUniversalLink();if(!a)throw new Error("No Universal Link available, please call eth_requestAccounts first.");return a}getChannelId(){var e,a;return null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getChannelConfig())||void 0===a?void 0:a.channelId}getRPCHistory(){var e,a;return null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a?void 0:a.getRPCMethodTracker()}getVersion(){return Nl.version}getWalletStatus(){var e,a;return null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a?void 0:a.getConnectionStatus()}_getChannelConfig(){var e;return null===(e=this.remoteConnection)||void 0===e?void 0:e.getChannelConfig()}_ping(){var e,a;null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a||a.ping()}_keyCheck(){var e,a;null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a||a.keyCheck()}_getServiceStatus(){var e,a;return null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a?void 0:a.getServiceStatus()}_getRemoteConnection(){return this.remoteConnection}_getDappMetadata(){return this.dappMetadata}_getKeyInfo(){var e;return null===(e=this.remoteConnection)||void 0===e?void 0:e.getKeyInfo()}_resetKeys(){var e,a;null===(a=null===(e=this.remoteConnection)||void 0===e?void 0:e.getConnector())||void 0===a||a.resetKeys()}_getConnection(){return this.remoteConnection}emit(e,a){return super.emit(e,a)}on(e,a){return super.on(e,a)}}export{Xd as CommunicationLayerPreference,Md as ConnectionStatus,Dd as DEFAULT_SERVER_URL,Pd as EventType,Ld as MessageType,Du as MetaMaskSDK,Ol as MetaMaskSDKEvent,xl as PROVIDER_UPDATE_TYPE,Qd as PlatformType,Is as SDKProvider,Du as default};
//# sourceMappingURL=metamask-sdk.js.map
